<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source" xml:lang="en-US">
<title>BME280_WRAPPER.cpp</title>
<indexterm><primary>lib/BME280/BME280_WRAPPER.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__b_m_e280___w_r_a_p_p_e_r_8h">BME280_WRAPPER.h</link>&quot;</emphasis>
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00002"/>00002 
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00003"/><link linkend="_class_b_m_e280_wrapper_1aae6146a4d2637870a28e2cc2391663f7">00003</link> <link linkend="_class_b_m_e280_wrapper_1aae6146a4d2637870a28e2cc2391663f7">BME280Wrapper::BME280Wrapper</link>(i2c_inst_t*&#32;i2c)&#32;:&#32;<link linkend="_class_b_m_e280_wrapper_1ae9fee0cb8d5bc7f1b0a953d0ddc5fc09">sensor</link>(i2c)&#32;{}
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00004"/>00004 
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00005"/><link linkend="_class_b_m_e280_wrapper_1a06cd239056ccf58985bd545f684960bd">00005</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1a06cd239056ccf58985bd545f684960bd">BME280Wrapper::init</link>()&#32;{
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<link linkend="_class_b_m_e280_wrapper_1ae2d7f4ac2d6e02784ec9a8b5982795f8">initialized</link>&#32;=&#32;<link linkend="_class_b_m_e280_wrapper_1ae9fee0cb8d5bc7f1b0a953d0ddc5fc09">sensor</link>.init();
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1ae2d7f4ac2d6e02784ec9a8b5982795f8">initialized</link>;
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00008"/>00008 }
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00009"/>00009 
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00010"/><link linkend="_class_b_m_e280_wrapper_1af3e891953ad05fe0b83c0cb51aab2055">00010</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1af3e891953ad05fe0b83c0cb51aab2055">BME280Wrapper::readData</link>(<link linkend="__i_sensor_8h_1a21b0301bb3eb76855366980212c8ae5e">SensorDataTypeIdentifier</link>&#32;type)&#32;{
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;int32_t&#32;temp_raw,&#32;pressure_raw,&#32;humidity_raw;
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<link linkend="_class_b_m_e280_wrapper_1ae9fee0cb8d5bc7f1b0a953d0ddc5fc09">sensor</link>.read_raw_all(&amp;temp_raw,&#32;&amp;pressure_raw,&#32;&amp;humidity_raw);
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00013"/>00013 
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(type)&#32;{
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__i_sensor_8h_1a21b0301bb3eb76855366980212c8ae5eab976538812ef6e3e5881e245d5fc3c76">SensorDataTypeIdentifier::TEMPERATURE</link>:
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1ae9fee0cb8d5bc7f1b0a953d0ddc5fc09">sensor</link>.convert_temperature(temp_raw);
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__i_sensor_8h_1a21b0301bb3eb76855366980212c8ae5ea6753182d0065061a189bb834145e8cd1">SensorDataTypeIdentifier::PRESSURE</link>:
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1ae9fee0cb8d5bc7f1b0a953d0ddc5fc09">sensor</link>.convert_pressure(pressure_raw);
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__i_sensor_8h_1a21b0301bb3eb76855366980212c8ae5ea1bfd5cb0758595fd2f392b93a92e8fff">SensorDataTypeIdentifier::HUMIDITY</link>:
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1ae9fee0cb8d5bc7f1b0a953d0ddc5fc09">sensor</link>.convert_humidity(humidity_raw);
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0f;
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00024"/>00024 }
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00025"/>00025 
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00026"/><link linkend="_class_b_m_e280_wrapper_1afa864237c62a7cd64d74cf18f9b7a2ac">00026</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1afa864237c62a7cd64d74cf18f9b7a2ac">BME280Wrapper::isInitialized</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1ae2d7f4ac2d6e02784ec9a8b5982795f8">initialized</link>;
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00028"/>00028 }
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00029"/>00029 
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00030"/><link linkend="_class_b_m_e280_wrapper_1a7863eb6da292da01efdbffc4a93e4453">00030</link> <link linkend="__i_sensor_8h_1a213c434cb928c4ca22513e2302632435">SensorType</link>&#32;<link linkend="_class_b_m_e280_wrapper_1a7863eb6da292da01efdbffc4a93e4453">BME280Wrapper::getType</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__i_sensor_8h_1a213c434cb928c4ca22513e2302632435a889a65415d92b72cffa7df3f8ecf13f9">SensorType::ENVIRONMENT</link>;
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00032"/>00032 }
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00033"/>00033 
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00034"/><link linkend="_class_b_m_e280_wrapper_1aa91a632101408df8031cf90b51ef8e3a">00034</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_b_m_e280_wrapper_1aa91a632101408df8031cf90b51ef8e3a">BME280Wrapper::configure</link>(<emphasis role="keyword">const</emphasis>&#32;std::map&lt;std::string,&#32;std::string&gt;&amp;&#32;config)&#32;{
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__b_m_e280___w_r_a_p_p_e_r_8cpp_source_1l00036"/>00036 }
</programlisting></section>
