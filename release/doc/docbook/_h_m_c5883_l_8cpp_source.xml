<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__h_m_c5883_l_8cpp_source" xml:lang="en-US">
<title>HMC5883L.cpp</title>
<indexterm><primary>lib/HMC5883L/HMC5883L.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__h_m_c5883_l_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__h_m_c5883_l_8h">HMC5883L.h</link>&quot;</emphasis>
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00002"/>00002 
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00003"/><link linkend="_class_h_m_c5883_l_1ac94bd9588bfaecdf6d1aa56915799212">00003</link> <link linkend="_class_h_m_c5883_l_1ac94bd9588bfaecdf6d1aa56915799212">HMC5883L::HMC5883L</link>(i2c_inst_t*&#32;<link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">i2c</link>,&#32;uint8_t&#32;<link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">address</link>)&#32;:&#32;<link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">i2c</link>(<link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">i2c</link>),&#32;<link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">address</link>(<link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">address</link>)&#32;{}
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00004"/>00004 
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00005"/><link linkend="_class_h_m_c5883_l_1aacf8416e7f9802ccf993b3e6c0dfe17b">00005</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_m_c5883_l_1aacf8416e7f9802ccf993b3e6c0dfe17b">HMC5883L::init</link>()&#32;{
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Continuous&#32;measurement&#32;mode,&#32;15Hz&#32;data&#32;output&#32;rate</emphasis>
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_h_m_c5883_l_1a114c069b8221f2780b928063a393a183">writeRegister</link>(0x00,&#32;0x70))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_h_m_c5883_l_1a114c069b8221f2780b928063a393a183">writeRegister</link>(0x01,&#32;0x20))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_h_m_c5883_l_1a114c069b8221f2780b928063a393a183">writeRegister</link>(0x02,&#32;0x00))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00011"/>00011 }
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00012"/>00012 
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00013"/><link linkend="_class_h_m_c5883_l_1a8d34ff9a8ff20e12320df6ce5d64397f">00013</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_m_c5883_l_1a8d34ff9a8ff20e12320df6ce5d64397f">HMC5883L::read</link>(int16_t&amp;&#32;x,&#32;int16_t&amp;&#32;y,&#32;int16_t&amp;&#32;z)&#32;{
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[6];
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_h_m_c5883_l_1a4a09a4be85064748579e1d44d8f1b305">readRegisters</link>(0x03,&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>,&#32;6))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00016"/>00016 
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;x&#32;=&#32;(<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[0]&#32;&lt;&lt;&#32;8)&#32;|&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[1];
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;z&#32;=&#32;(<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[2]&#32;&lt;&lt;&#32;8)&#32;|&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[3];
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;y&#32;=&#32;(<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[4]&#32;&lt;&lt;&#32;8)&#32;|&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[5];
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00020"/>00020 
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&gt;&#32;32767)&#32;x&#32;-=&#32;65536;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y&#32;&gt;&#32;32767)&#32;y&#32;-=&#32;65536;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z&#32;&gt;&#32;32767)&#32;z&#32;-=&#32;65536;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00024"/>00024 
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00026"/>00026 }
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00027"/>00027 
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00028"/><link linkend="_class_h_m_c5883_l_1a114c069b8221f2780b928063a393a183">00028</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_m_c5883_l_1a114c069b8221f2780b928063a393a183">HMC5883L::writeRegister</link>(uint8_t&#32;reg,&#32;uint8_t&#32;value)&#32;{
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[2]&#32;=&#32;{reg,&#32;value};
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2c_write_blocking(<link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">i2c</link>,&#32;<link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">address</link>,&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>,&#32;2,&#32;<emphasis role="keyword">false</emphasis>)&#32;==&#32;2;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00031"/>00031 }
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00032"/>00032 
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00033"/><link linkend="_class_h_m_c5883_l_1a4a09a4be85064748579e1d44d8f1b305">00033</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_m_c5883_l_1a4a09a4be85064748579e1d44d8f1b305">HMC5883L::readRegisters</link>(uint8_t&#32;reg,&#32;uint8_t*&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length)&#32;{
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i2c_write_blocking(<link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">i2c</link>,&#32;<link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">address</link>,&#32;&amp;reg,&#32;1,&#32;<emphasis role="keyword">true</emphasis>)&#32;!=&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2c_read_blocking(<link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">i2c</link>,&#32;<link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">address</link>,&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>,&#32;length,&#32;<emphasis role="keyword">false</emphasis>)&#32;==&#32;length;
<anchor xml:id="__h_m_c5883_l_8cpp_source_1l00036"/>00036 }
</programlisting></section>
