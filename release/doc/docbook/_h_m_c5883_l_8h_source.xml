<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__h_m_c5883_l_8h_source" xml:lang="en-US">
<title>HMC5883L.h</title>
<indexterm><primary>lib/HMC5883L/HMC5883L.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__h_m_c5883_l_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;HMC5883L_H</emphasis>
<anchor xml:id="__h_m_c5883_l_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;HMC5883L_H</emphasis>
<anchor xml:id="__h_m_c5883_l_8h_source_1l00003"/>00003 
<anchor xml:id="__h_m_c5883_l_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;hardware/i2c.h&quot;</emphasis>
<anchor xml:id="__h_m_c5883_l_8h_source_1l00005"/>00005 
<anchor xml:id="__h_m_c5883_l_8h_source_1l00006"/><link linkend="_class_h_m_c5883_l">00006</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_h_m_c5883_l_1ac94bd9588bfaecdf6d1aa56915799212">HMC5883L</link>&#32;{
<anchor xml:id="__h_m_c5883_l_8h_source_1l00007"/>00007 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__h_m_c5883_l_8h_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<link linkend="_class_h_m_c5883_l_1ac94bd9588bfaecdf6d1aa56915799212">HMC5883L</link>(i2c_inst_t*&#32;<link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">i2c</link>,&#32;uint8_t&#32;<link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">address</link>&#32;=&#32;0x0D);
<anchor xml:id="__h_m_c5883_l_8h_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_m_c5883_l_1aacf8416e7f9802ccf993b3e6c0dfe17b">init</link>();
<anchor xml:id="__h_m_c5883_l_8h_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_m_c5883_l_1a8d34ff9a8ff20e12320df6ce5d64397f">read</link>(int16_t&amp;&#32;x,&#32;int16_t&amp;&#32;y,&#32;int16_t&amp;&#32;z);
<anchor xml:id="__h_m_c5883_l_8h_source_1l00011"/>00011 
<anchor xml:id="__h_m_c5883_l_8h_source_1l00012"/>00012 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="__h_m_c5883_l_8h_source_1l00013"/><link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">00013</link> &#32;&#32;&#32;&#32;i2c_inst_t*&#32;<link linkend="_class_h_m_c5883_l_1a5e63fceb40ec1b9427757a4ee206b12f">i2c</link>;
<anchor xml:id="__h_m_c5883_l_8h_source_1l00014"/><link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">00014</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_class_h_m_c5883_l_1ab0f984a6afb4c434cb32d736a9aaa671">address</link>;
<anchor xml:id="__h_m_c5883_l_8h_source_1l00015"/>00015 
<anchor xml:id="__h_m_c5883_l_8h_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_m_c5883_l_1a114c069b8221f2780b928063a393a183">writeRegister</link>(uint8_t&#32;reg,&#32;uint8_t&#32;value);
<anchor xml:id="__h_m_c5883_l_8h_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_m_c5883_l_1a4a09a4be85064748579e1d44d8f1b305">readRegisters</link>(uint8_t&#32;reg,&#32;uint8_t*&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
<anchor xml:id="__h_m_c5883_l_8h_source_1l00018"/>00018 };
<anchor xml:id="__h_m_c5883_l_8h_source_1l00019"/>00019 
<anchor xml:id="__h_m_c5883_l_8h_source_1l00020"/>00020 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
