<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_d_s3231" xml:lang="en-US">
<title>DS3231 Class Reference</title>
<indexterm><primary>DS3231</primary></indexterm>
<para>
<computeroutput>#include &lt;DS3231.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_d_s3231_1ad78b99a37b67a9912f39602d8802a358">DS3231</link> (i2c_inst_t *<link linkend="_class_d_s3231_1afff19e512928fce8a6f9b50885df3732">i2c</link>, uint8_t <link linkend="_class_d_s3231_1a220290093650973f7ba16872e33b8b96">address</link>=0x68)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_s3231_1a6ead725bcb29001cfbf4279f249d6983">setTime</link> (uint8_t sec, uint8_t min, uint8_t hour, uint8_t weekday, uint8_t day, uint8_t month, uint16_t year)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_s3231_1aedd5fa550aa8b38fabe4d44d9ba5a0af">getTime</link> (uint8_t &amp;sec, uint8_t &amp;min, uint8_t &amp;hour, std::string &amp;weekday, uint8_t &amp;day, uint8_t &amp;month, uint16_t &amp;year)</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_d_s3231_1af7eb8bade221416e4035f1e7139b6154">getTimeString</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_s3231_1a569f69050349e21823276ef29ff07a76">setTimeUnix</link> (uint32_t unixTime)</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_class_d_s3231_1a93399e0145a53c558e316f6f95a20679">getTimeUnix</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_date_time">DateTime</link> <link linkend="_class_d_s3231_1aa19b08f3978eea489bc8af3a84d67e59">getDateTime</link> ()</para>
</listitem>
            <listitem><para>uint64_t <link linkend="_class_d_s3231_1ac5680bedcb5cd48da26a4c0afcddb830">getTimeInteger</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_d_s3231_1a36868c55914308805cd333742bb2ee20">setTimezoneOffset</link> (int16_t offsetMinutes)</para>
</listitem>
            <listitem><para>int16_t <link linkend="_class_d_s3231_1afb09486c2788bfc7773295e6af83cb21">getTimezoneOffset</link> () const</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_class_d_s3231_1ad95e3e60f1d82c37e7c03fac84249bc6">getTimeUnixLocal</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_date_time">DateTime</link> <link linkend="_class_d_s3231_1a4b893299918613d8fb3521793b848d6d">getDateTimeLocal</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_d_s3231_1a2f052be5b03cb0c5fea045f49b770cc8">setClockSyncInterval</link> (uint32_t intervalSeconds)</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_class_d_s3231_1a82a03a071b6b21c5271d9856f7c9396e">getClockSyncInterval</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_d_s3231_1a902d42a635136368ad7987d7d6d84f19">setLastSyncTime</link> (uint32_t unixTime)</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_class_d_s3231_1a564eaf6a11ee0f1a8c8aad30cd49af6f">getLastSyncTime</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_d_s3231_1a5dc268764fd4d0afe785aed25d97669e">setClockDrift</link> (float ppmDrift)</para>
</listitem>
            <listitem><para>float <link linkend="_class_d_s3231_1a546ac8331853889ebce90bda8edbb9d9">getClockDrift</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_s3231_1a8674f4e63775d5d5ea7e597d0f2ab2c9">needsSync</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static const std::array&lt; std::string, 7 &gt; <link linkend="_class_d_s3231_1aaecfb4d1dafaed2f892bf579aadbd7a3">WEEKDAYS</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>uint8_t <link linkend="_class_d_s3231_1a389e756fdd8f645d6025906bbce5abd8">bcd2bin</link> (uint8_t val)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_d_s3231_1a41f5aabf74e5a66093116999648806ab">bin2bcd</link> (uint8_t val)</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_d_s3231_1ada371a466a46dd550e6eded5217627b5">preZero</link> (uint8_t val)</para>
</listitem>
            <listitem><para><link linkend="_struct_date_time">DateTime</link> <link linkend="_class_d_s3231_1accd8b405f5d30b7b26bb2ca4d84a8fa8">applyTimezone</link> (const <link linkend="_struct_date_time">DateTime</link> &amp;utc, int16_t offsetMinutes)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>static uint32_t <link linkend="_class_d_s3231_1ae6c4f2144a772c44f7adbace7f86dfa1">dateTimeToUnix</link> (const <link linkend="_struct_date_time">DateTime</link> &amp;dt)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_date_time">DateTime</link> <link linkend="_class_d_s3231_1a40a965b965496e5b0e7758040c5d9ce7">unixToDateTime</link> (uint32_t unixTime)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>i2c_inst_t * <link linkend="_class_d_s3231_1afff19e512928fce8a6f9b50885df3732">i2c</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_d_s3231_1a220290093650973f7ba16872e33b8b96">address</link></para>
</listitem>
            <listitem><para>int16_t <link linkend="_class_d_s3231_1a330fb98438d9762df3d7da7ed2f38d25">timezoneOffset</link> = 0</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_class_d_s3231_1a1a30fcf3e2d4b9c4951129ac09c1ce4c">syncInterval</link> = 86400</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_class_d_s3231_1ab05e9cb92a0de071fc81a3d8e6488b73">lastSyncTime</link> = 0</para>
</listitem>
            <listitem><para>float <link linkend="_class_d_s3231_1a1d9b76de3a1a01b5b08464f23481c004">clockDrift</link> = 0.0f</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Attributes    </title>
        <itemizedlist>
            <listitem><para>static constexpr uint8_t <link linkend="_class_d_s3231_1af87c9b9232490e63de80b4e4c8aec81f">RTC_REGISTER</link> = 0x00</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__d_s3231_8h_source_1l00019">19</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_d_s3231_1ad78b99a37b67a9912f39602d8802a358"/><section>
    <title>DS3231()</title>
<indexterm><primary>DS3231</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>DS3231</secondary></indexterm>
<para><computeroutput>DS3231::DS3231 (i2c_inst_t * i2c, uint8_t address = <computeroutput>0x68</computeroutput>
)</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00009">9</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_d_s3231_1accd8b405f5d30b7b26bb2ca4d84a8fa8"/><section>
    <title>applyTimezone()</title>
<indexterm><primary>applyTimezone</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>applyTimezone</secondary></indexterm>
<para><computeroutput><link linkend="_struct_date_time">DateTime</link> DS3231::applyTimezone (const <link linkend="_struct_date_time">DateTime</link> &amp; utc, int16_t offsetMinutes)<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00175">175</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a389e756fdd8f645d6025906bbce5abd8"/><section>
    <title>bcd2bin()</title>
<indexterm><primary>bcd2bin</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>bcd2bin</secondary></indexterm>
<para><computeroutput>uint8_t DS3231::bcd2bin (uint8_t val)<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00072">72</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a41f5aabf74e5a66093116999648806ab"/><section>
    <title>bin2bcd()</title>
<indexterm><primary>bin2bcd</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>bin2bcd</secondary></indexterm>
<para><computeroutput>uint8_t DS3231::bin2bcd (uint8_t val)<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00076">76</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1ae6c4f2144a772c44f7adbace7f86dfa1"/><section>
    <title>dateTimeToUnix()</title>
<indexterm><primary>dateTimeToUnix</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>dateTimeToUnix</secondary></indexterm>
<para><computeroutput>uint32_t DS3231::dateTimeToUnix (const <link linkend="_struct_date_time">DateTime</link> &amp; dt)<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00138">138</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a546ac8331853889ebce90bda8edbb9d9"/><section>
    <title>getClockDrift()</title>
<indexterm><primary>getClockDrift</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getClockDrift</secondary></indexterm>
<para><computeroutput>float DS3231::getClockDrift ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00053">53</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a82a03a071b6b21c5271d9856f7c9396e"/><section>
    <title>getClockSyncInterval()</title>
<indexterm><primary>getClockSyncInterval</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getClockSyncInterval</secondary></indexterm>
<para><computeroutput>uint32_t DS3231::getClockSyncInterval ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00047">47</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1aa19b08f3978eea489bc8af3a84d67e59"/><section>
    <title>getDateTime()</title>
<indexterm><primary>getDateTime</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getDateTime</secondary></indexterm>
<para><computeroutput><link linkend="_struct_date_time">DateTime</link> DS3231::getDateTime ( )</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00104">104</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a4b893299918613d8fb3521793b848d6d"/><section>
    <title>getDateTimeLocal()</title>
<indexterm><primary>getDateTimeLocal</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getDateTimeLocal</secondary></indexterm>
<para><computeroutput><link linkend="_struct_date_time">DateTime</link> DS3231::getDateTimeLocal ( )</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00170">170</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a564eaf6a11ee0f1a8c8aad30cd49af6f"/><section>
    <title>getLastSyncTime()</title>
<indexterm><primary>getLastSyncTime</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getLastSyncTime</secondary></indexterm>
<para><computeroutput>uint32_t DS3231::getLastSyncTime ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00050">50</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1aedd5fa550aa8b38fabe4d44d9ba5a0af"/><section>
    <title>getTime()</title>
<indexterm><primary>getTime</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getTime</secondary></indexterm>
<para><computeroutput>bool DS3231::getTime (uint8_t &amp; sec, uint8_t &amp; min, uint8_t &amp; hour, std::string &amp; weekday, uint8_t &amp; day, uint8_t &amp; month, uint16_t &amp; year)</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00029">29</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1ac5680bedcb5cd48da26a4c0afcddb830"/><section>
    <title>getTimeInteger()</title>
<indexterm><primary>getTimeInteger</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getTimeInteger</secondary></indexterm>
<para><computeroutput>uint64_t DS3231::getTimeInteger ( )</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00128">128</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1af7eb8bade221416e4035f1e7139b6154"/><section>
    <title>getTimeString()</title>
<indexterm><primary>getTimeString</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getTimeString</secondary></indexterm>
<para><computeroutput>std::string DS3231::getTimeString ( )</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00053">53</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a93399e0145a53c558e316f6f95a20679"/><section>
    <title>getTimeUnix()</title>
<indexterm><primary>getTimeUnix</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getTimeUnix</secondary></indexterm>
<para><computeroutput>uint32_t DS3231::getTimeUnix ( )</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00099">99</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1ad95e3e60f1d82c37e7c03fac84249bc6"/><section>
    <title>getTimeUnixLocal()</title>
<indexterm><primary>getTimeUnixLocal</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getTimeUnixLocal</secondary></indexterm>
<para><computeroutput>uint32_t DS3231::getTimeUnixLocal ( )</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00165">165</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1afb09486c2788bfc7773295e6af83cb21"/><section>
    <title>getTimezoneOffset()</title>
<indexterm><primary>getTimezoneOffset</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>getTimezoneOffset</secondary></indexterm>
<para><computeroutput>int16_t DS3231::getTimezoneOffset ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00041">41</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a8674f4e63775d5d5ea7e597d0f2ab2c9"/><section>
    <title>needsSync()</title>
<indexterm><primary>needsSync</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>needsSync</secondary></indexterm>
<para><computeroutput>bool DS3231::needsSync ( )</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00180">180</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1ada371a466a46dd550e6eded5217627b5"/><section>
    <title>preZero()</title>
<indexterm><primary>preZero</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>preZero</secondary></indexterm>
<para><computeroutput>std::string DS3231::preZero (uint8_t val)<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00080">80</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a5dc268764fd4d0afe785aed25d97669e"/><section>
    <title>setClockDrift()</title>
<indexterm><primary>setClockDrift</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>setClockDrift</secondary></indexterm>
<para><computeroutput>void DS3231::setClockDrift (float ppmDrift)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00052">52</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a2f052be5b03cb0c5fea045f49b770cc8"/><section>
    <title>setClockSyncInterval()</title>
<indexterm><primary>setClockSyncInterval</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>setClockSyncInterval</secondary></indexterm>
<para><computeroutput>void DS3231::setClockSyncInterval (uint32_t intervalSeconds)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00046">46</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a902d42a635136368ad7987d7d6d84f19"/><section>
    <title>setLastSyncTime()</title>
<indexterm><primary>setLastSyncTime</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>setLastSyncTime</secondary></indexterm>
<para><computeroutput>void DS3231::setLastSyncTime (uint32_t unixTime)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00049">49</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a6ead725bcb29001cfbf4279f249d6983"/><section>
    <title>setTime()</title>
<indexterm><primary>setTime</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>setTime</secondary></indexterm>
<para><computeroutput>bool DS3231::setTime (uint8_t sec, uint8_t min, uint8_t hour, uint8_t weekday, uint8_t day, uint8_t month, uint16_t year)</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00012">12</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a569f69050349e21823276ef29ff07a76"/><section>
    <title>setTimeUnix()</title>
<indexterm><primary>setTimeUnix</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>setTimeUnix</secondary></indexterm>
<para><computeroutput>bool DS3231::setTimeUnix (uint32_t unixTime)</computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00087">87</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a36868c55914308805cd333742bb2ee20"/><section>
    <title>setTimezoneOffset()</title>
<indexterm><primary>setTimezoneOffset</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>setTimezoneOffset</secondary></indexterm>
<para><computeroutput>void DS3231::setTimezoneOffset (int16_t offsetMinutes)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00040">40</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a40a965b965496e5b0e7758040c5d9ce7"/><section>
    <title>unixToDateTime()</title>
<indexterm><primary>unixToDateTime</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>unixToDateTime</secondary></indexterm>
<para><computeroutput><link linkend="_struct_date_time">DateTime</link> DS3231::unixToDateTime (uint32_t unixTime)<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8cpp_source_1l00149">149</link> of file <link linkend="__d_s3231_8cpp_source">DS3231.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_d_s3231_1a220290093650973f7ba16872e33b8b96"/><section>
    <title>address</title>
<indexterm><primary>address</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>address</secondary></indexterm>
<para><computeroutput>uint8_t DS3231::address<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00060">60</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a1d9b76de3a1a01b5b08464f23481c004"/><section>
    <title>clockDrift</title>
<indexterm><primary>clockDrift</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>clockDrift</secondary></indexterm>
<para><computeroutput>float DS3231::clockDrift = 0.0f<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00066">66</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1afff19e512928fce8a6f9b50885df3732"/><section>
    <title>i2c</title>
<indexterm><primary>i2c</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>i2c</secondary></indexterm>
<para><computeroutput>i2c_inst_t* DS3231::i2c<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00059">59</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1ab05e9cb92a0de071fc81a3d8e6488b73"/><section>
    <title>lastSyncTime</title>
<indexterm><primary>lastSyncTime</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>lastSyncTime</secondary></indexterm>
<para><computeroutput>uint32_t DS3231::lastSyncTime = 0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00065">65</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1af87c9b9232490e63de80b4e4c8aec81f"/><section>
    <title>RTC_REGISTER</title>
<indexterm><primary>RTC_REGISTER</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>RTC_REGISTER</secondary></indexterm>
<para><computeroutput>uint8_t DS3231::RTC_REGISTER = 0x00<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00061">61</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a1a30fcf3e2d4b9c4951129ac09c1ce4c"/><section>
    <title>syncInterval</title>
<indexterm><primary>syncInterval</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>syncInterval</secondary></indexterm>
<para><computeroutput>uint32_t DS3231::syncInterval = 86400<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00064">64</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1a330fb98438d9762df3d7da7ed2f38d25"/><section>
    <title>timezoneOffset</title>
<indexterm><primary>timezoneOffset</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>timezoneOffset</secondary></indexterm>
<para><computeroutput>int16_t DS3231::timezoneOffset = 0<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00063">63</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<anchor xml:id="_class_d_s3231_1aaecfb4d1dafaed2f892bf579aadbd7a3"/><section>
    <title>WEEKDAYS</title>
<indexterm><primary>WEEKDAYS</primary><secondary>DS3231</secondary></indexterm>
<indexterm><primary>DS3231</primary><secondary>WEEKDAYS</secondary></indexterm>
<para><computeroutput>const std::array&lt; std::string, 7 &gt; DS3231::WEEKDAYS<computeroutput>[static]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;{
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;SUN&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;MON&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;TUE&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;WED&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;THU&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;FRI&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;SAT&quot;</emphasis>
}
</programlisting><para>
Definition at line <link linkend="__d_s3231_8h_source_1l00005">5</link> of file <link linkend="__d_s3231_8h_source">DS3231.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
lib/DS3231/<link linkend="__d_s3231_8h">DS3231.h</link>lib/DS3231/<link linkend="__d_s3231_8cpp">DS3231.cpp</link></section>
</section>
