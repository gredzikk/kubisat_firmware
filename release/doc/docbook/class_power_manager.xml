<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_power_manager" xml:lang="en-US">
<title>PowerManager Class Reference</title>
<indexterm><primary>PowerManager</primary></indexterm>
<para>
<computeroutput>#include &lt;PowerManager.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_power_manager_1aa9ea91634936a20fb03d65ff8878867e">PowerManager</link> (i2c_inst_t *i2c)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_power_manager_1a217939b880543bfff917203a06d45258">initialize</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_power_manager_1a885c7374cb22e940ef77c0453da5f622">readIDs</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a">getCurrentChargeSolar</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_class_power_manager_1a3f9587ee81469642a2e595ef3805e801">getCurrentChargeUSB</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_class_power_manager_1acad2f0f2daff3bd609952530d202c78b">getCurrentChargeTotal</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_class_power_manager_1a1ebc18dd508b23614c4c7193fbddd962">getCurrentDraw</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_class_power_manager_1af0d877a74a39cf29cb94d34088641ff9">getVoltageBattery</link> ()</para>
</listitem>
            <listitem><para>float <link linkend="_class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd">getVoltage5V</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_power_manager_1ae61a45a190d5293029e17c751f88bcd0">configure</link> (const std::map&lt; std::string, std::string &gt; &amp;config)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083">isSolarActive</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8">isUSBConnected</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static constexpr float <link linkend="_class_power_manager_1aeb488c42ec47e1a8de0446717d339cce">SOLAR_CURRENT_THRESHOLD</link> = 50.0f</para>
</listitem>
            <listitem><para>static constexpr float <link linkend="_class_power_manager_1afc4246cc3b434053c59cf2dcccf4bc64">USB_CURRENT_THRESHOLD</link> = 50.0f</para>
</listitem>
            <listitem><para>static constexpr float <link linkend="_class_power_manager_1a426dcedc762549ed6c408708bd61b94e">VOLTAGE_LOW_THRESHOLD</link> = 4.7f</para>
</listitem>
            <listitem><para>static constexpr float <link linkend="_class_power_manager_1a4e28f40bee3fd8e6df12178663159783">VOLTAGE_OVERCHARGE_THRESHOLD</link> = 5.3f</para>
</listitem>
            <listitem><para>static constexpr float <link linkend="_class_power_manager_1aae449340ac8e77b181ef2f0abd2d96ed">FALL_RATE_THRESHOLD</link> = -0.02f</para>
</listitem>
            <listitem><para>static constexpr int <link linkend="_class_power_manager_1a17e01551bc0f14820b2430d697c4c6d2">FALLING_TREND_REQUIRED</link> = 3</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_i_n_a3221">INA3221</link> <link linkend="_class_power_manager_1a5917758068dfeead4ae68840f5bfb493">ina3221</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1">initialized</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_power_manager_1a521e99a9e28cca2525988f572379c936">solarActive</link> = false</para>
</listitem>
            <listitem><para>bool <link linkend="_class_power_manager_1a3676187deac57a79034f59f58ac4b746">usbConnected</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__power_manager_8h_source_1l00011">11</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_power_manager_1aa9ea91634936a20fb03d65ff8878867e"/><section>
    <title>PowerManager()</title>
<indexterm><primary>PowerManager</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>PowerManager</secondary></indexterm>
<para><computeroutput>PowerManager::PowerManager (i2c_inst_t * i2c)</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00004">4</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_power_manager_1ae61a45a190d5293029e17c751f88bcd0"/><section>
    <title>configure()</title>
<indexterm><primary>configure</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>configure</secondary></indexterm>
<para><computeroutput>void PowerManager::configure (const std::map&lt; std::string, std::string &gt; &amp; config)</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00049">49</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a"/><section>
    <title>getCurrentChargeSolar()</title>
<indexterm><primary>getCurrentChargeSolar</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>getCurrentChargeSolar</secondary></indexterm>
<para><computeroutput>float PowerManager::getCurrentChargeSolar ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00039">39</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1acad2f0f2daff3bd609952530d202c78b"/><section>
    <title>getCurrentChargeTotal()</title>
<indexterm><primary>getCurrentChargeTotal</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>getCurrentChargeTotal</secondary></indexterm>
<para><computeroutput>float PowerManager::getCurrentChargeTotal ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00044">44</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a3f9587ee81469642a2e595ef3805e801"/><section>
    <title>getCurrentChargeUSB()</title>
<indexterm><primary>getCurrentChargeUSB</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>getCurrentChargeUSB</secondary></indexterm>
<para><computeroutput>float PowerManager::getCurrentChargeUSB ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00029">29</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a1ebc18dd508b23614c4c7193fbddd962"/><section>
    <title>getCurrentDraw()</title>
<indexterm><primary>getCurrentDraw</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>getCurrentDraw</secondary></indexterm>
<para><computeroutput>float PowerManager::getCurrentDraw ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00034">34</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd"/><section>
    <title>getVoltage5V()</title>
<indexterm><primary>getVoltage5V</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>getVoltage5V</secondary></indexterm>
<para><computeroutput>float PowerManager::getVoltage5V ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00024">24</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1af0d877a74a39cf29cb94d34088641ff9"/><section>
    <title>getVoltageBattery()</title>
<indexterm><primary>getVoltageBattery</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>getVoltageBattery</secondary></indexterm>
<para><computeroutput>float PowerManager::getVoltageBattery ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00019">19</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a217939b880543bfff917203a06d45258"/><section>
    <title>initialize()</title>
<indexterm><primary>initialize</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>initialize</secondary></indexterm>
<para><computeroutput>bool PowerManager::initialize ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00007">7</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083"/><section>
    <title>isSolarActive()</title>
<indexterm><primary>isSolarActive</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>isSolarActive</secondary></indexterm>
<para><computeroutput>bool PowerManager::isSolarActive ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00076">76</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8"/><section>
    <title>isUSBConnected()</title>
<indexterm><primary>isUSBConnected</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>isUSBConnected</secondary></indexterm>
<para><computeroutput>bool PowerManager::isUSBConnected ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00081">81</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a885c7374cb22e940ef77c0453da5f622"/><section>
    <title>readIDs()</title>
<indexterm><primary>readIDs</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>readIDs</secondary></indexterm>
<para><computeroutput>std::string PowerManager::readIDs ( )</computeroutput></para><para>
Definition at line <link linkend="__power_manager_8cpp_source_1l00012">12</link> of file <link linkend="__power_manager_8cpp_source">PowerManager.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_power_manager_1aae449340ac8e77b181ef2f0abd2d96ed"/><section>
    <title>FALL_RATE_THRESHOLD</title>
<indexterm><primary>FALL_RATE_THRESHOLD</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>FALL_RATE_THRESHOLD</secondary></indexterm>
<para><computeroutput>float PowerManager::FALL_RATE_THRESHOLD = -0.02f<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00030">30</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a17e01551bc0f14820b2430d697c4c6d2"/><section>
    <title>FALLING_TREND_REQUIRED</title>
<indexterm><primary>FALLING_TREND_REQUIRED</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>FALLING_TREND_REQUIRED</secondary></indexterm>
<para><computeroutput>int PowerManager::FALLING_TREND_REQUIRED = 3<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00031">31</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a5917758068dfeead4ae68840f5bfb493"/><section>
    <title>ina3221</title>
<indexterm><primary>ina3221</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>ina3221</secondary></indexterm>
<para><computeroutput><link linkend="_class_i_n_a3221">INA3221</link> PowerManager::ina3221<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00034">34</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1"/><section>
    <title>initialized</title>
<indexterm><primary>initialized</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>initialized</secondary></indexterm>
<para><computeroutput>bool PowerManager::initialized<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00035">35</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1aeb488c42ec47e1a8de0446717d339cce"/><section>
    <title>SOLAR_CURRENT_THRESHOLD</title>
<indexterm><primary>SOLAR_CURRENT_THRESHOLD</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>SOLAR_CURRENT_THRESHOLD</secondary></indexterm>
<para><computeroutput>float PowerManager::SOLAR_CURRENT_THRESHOLD = 50.0f<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00026">26</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a521e99a9e28cca2525988f572379c936"/><section>
    <title>solarActive</title>
<indexterm><primary>solarActive</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>solarActive</secondary></indexterm>
<para><computeroutput>bool PowerManager::solarActive = false<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00037">37</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1afc4246cc3b434053c59cf2dcccf4bc64"/><section>
    <title>USB_CURRENT_THRESHOLD</title>
<indexterm><primary>USB_CURRENT_THRESHOLD</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>USB_CURRENT_THRESHOLD</secondary></indexterm>
<para><computeroutput>float PowerManager::USB_CURRENT_THRESHOLD = 50.0f<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00027">27</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a3676187deac57a79034f59f58ac4b746"/><section>
    <title>usbConnected</title>
<indexterm><primary>usbConnected</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>usbConnected</secondary></indexterm>
<para><computeroutput>bool PowerManager::usbConnected = false<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00038">38</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a426dcedc762549ed6c408708bd61b94e"/><section>
    <title>VOLTAGE_LOW_THRESHOLD</title>
<indexterm><primary>VOLTAGE_LOW_THRESHOLD</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>VOLTAGE_LOW_THRESHOLD</secondary></indexterm>
<para><computeroutput>float PowerManager::VOLTAGE_LOW_THRESHOLD = 4.7f<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00028">28</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<anchor xml:id="_class_power_manager_1a4e28f40bee3fd8e6df12178663159783"/><section>
    <title>VOLTAGE_OVERCHARGE_THRESHOLD</title>
<indexterm><primary>VOLTAGE_OVERCHARGE_THRESHOLD</primary><secondary>PowerManager</secondary></indexterm>
<indexterm><primary>PowerManager</primary><secondary>VOLTAGE_OVERCHARGE_THRESHOLD</secondary></indexterm>
<para><computeroutput>float PowerManager::VOLTAGE_OVERCHARGE_THRESHOLD = 5.3f<computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__power_manager_8h_source_1l00029">29</link> of file <link linkend="__power_manager_8h_source">PowerManager.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
lib/PowerManager/<link linkend="__power_manager_8h">PowerManager.h</link>lib/PowerManager/<link linkend="__power_manager_8cpp">PowerManager.cpp</link></section>
</section>
