<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_clock__commands_8cpp_source" xml:lang="en-US">
<title>clock_commands.cpp</title>
<indexterm><primary>commands/clock_commands.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_clock__commands_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_communication_8h">communication.h</link>&quot;</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;time.h&gt;</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_s3231_8h">DS3231.h</link>&quot;</emphasis>&#32;<emphasis role="comment">//&#32;Include&#32;the&#32;DS3231&#32;header</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00004"/>00004 
<anchor xml:id="_clock__commands_8cpp_source_1l00005"/>00005 <emphasis role="comment">//&#32;Declare&#32;the&#32;systemClock&#32;as&#32;extern</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00006"/>00006 <emphasis role="keyword">extern</emphasis>&#32;<link linkend="_class_d_s3231">DS3231</link>&#32;<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>;
<anchor xml:id="_clock__commands_8cpp_source_1l00007"/>00007 
<anchor xml:id="_clock__commands_8cpp_source_1l00008"/><link linkend="_clock__commands_8cpp_1a1eefb8c4d539d50c787b4db3f6ebb093">00008</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_clock__commands_8cpp_1a1eefb8c4d539d50c787b4db3f6ebb093">handleTime</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;==&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164">OperationType::SET</link>&#32;&amp;&amp;&#32;param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;0,&#32;<emphasis role="stringliteral">&quot;PARAM&#32;REQUIRED&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00012"/>00012 
<anchor xml:id="_clock__commands_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;==&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8">OperationType::GET</link>&#32;&amp;&amp;&#32;!param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;0,&#32;<emphasis role="stringliteral">&quot;PARAM&#32;UNNECESSARY&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00016"/>00016 
<anchor xml:id="_clock__commands_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(operationType&#32;==&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8">OperationType::GET</link>&#32;||&#32;operationType&#32;==&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164">OperationType::SET</link>))&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;0,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;OPERATION&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00020"/>00020 
<anchor xml:id="_clock__commands_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;==&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164">OperationType::SET</link>)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time_t&#32;newTime&#32;=&#32;std::stoll(param);
<anchor xml:id="_clock__commands_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>tm*&#32;timeinfo&#32;=&#32;localtime(&amp;newTime);
<anchor xml:id="_clock__commands_8cpp_source_1l00025"/>00025 
<anchor xml:id="_clock__commands_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(timeinfo&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;the&#32;time&#32;on&#32;the&#32;RTC</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.setTime(timeinfo-&gt;tm_sec,&#32;timeinfo-&gt;tm_min,&#32;timeinfo-&gt;tm_hour,
<anchor xml:id="_clock__commands_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timeinfo-&gt;tm_wday,&#32;timeinfo-&gt;tm_mday,&#32;timeinfo-&gt;tm_mon&#32;+&#32;1,&#32;timeinfo-&gt;tm_year&#32;+&#32;1900);
<anchor xml:id="_clock__commands_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7aca6c44800b2dc123e0d4389a867e8686">EventGroup::CLOCK</link>,&#32;<link linkend="_event__manager_8h_1a163ce349de3451c81f50080e5fbe62a2ae6b94e58bfd13b21bc786578d9f8ba4a">ClockEvent::CHANGED</link>);
<anchor xml:id="_clock__commands_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;0,&#32;<emphasis role="stringliteral">&quot;Time&#32;set&#32;successfully&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;0,&#32;<emphasis role="stringliteral">&quot;FAILED&#32;TO&#32;SET&#32;TIME&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(...)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;0,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;TIME&#32;FORMAT&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00039"/>00039 
<anchor xml:id="_clock__commands_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GET&#32;operation</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;uint8_t&#32;sec,&#32;min,&#32;hour,&#32;day,&#32;month;
<anchor xml:id="_clock__commands_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;uint16_t&#32;year;
<anchor xml:id="_clock__commands_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;std::string&#32;weekday;
<anchor xml:id="_clock__commands_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.getTime(sec,&#32;min,&#32;hour,&#32;weekday,&#32;day,&#32;month,&#32;year))&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::stringstream&#32;ss;
<anchor xml:id="_clock__commands_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ss&#32;&lt;&lt;&#32;std::setw(2)&#32;&lt;&lt;&#32;std::setfill(&apos;0&apos;)&#32;&lt;&lt;&#32;static_cast&lt;int&gt;(hour)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(2)&#32;&lt;&lt;&#32;std::setfill(<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(min)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(2)&#32;&lt;&lt;&#32;std::setfill(<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(sec)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;weekday&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(2)&#32;&lt;&lt;&#32;std::setfill(<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(day)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(2)&#32;&lt;&lt;&#32;std::setfill(<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(month)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;year;
<anchor xml:id="_clock__commands_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;0,&#32;ss.str());
<anchor xml:id="_clock__commands_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;0,&#32;<emphasis role="stringliteral">&quot;FAILED&#32;TO&#32;GET&#32;TIME&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00057"/>00057 }
<anchor xml:id="_clock__commands_8cpp_source_1l00058"/>00058 
<anchor xml:id="_clock__commands_8cpp_source_1l00059"/><link linkend="_clock__commands_8cpp_1acc9239d946ee18d2ff19af2c6a2177f0">00059</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_clock__commands_8cpp_1acc9239d946ee18d2ff19af2c6a2177f0">handleGetTimezoneOffset</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;!=&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8">OperationType::GET</link>&#32;||&#32;!param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;1,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;REQUEST&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;1,&#32;
<anchor xml:id="_clock__commands_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::to_string(<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.getTimezoneOffset()));
<anchor xml:id="_clock__commands_8cpp_source_1l00065"/>00065 }
<anchor xml:id="_clock__commands_8cpp_source_1l00066"/>00066 
<anchor xml:id="_clock__commands_8cpp_source_1l00067"/><link linkend="_clock__commands_8cpp_1a9e802e312d0779aab74966074e81eb30">00067</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_clock__commands_8cpp_1a9e802e312d0779aab74966074e81eb30">handleSetTimezoneOffset</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;!=&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164">OperationType::SET</link>&#32;||&#32;param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;2,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;REQUEST&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int16_t&#32;offset&#32;=&#32;std::stoi(param);
<anchor xml:id="_clock__commands_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset&#32;&lt;&#32;-720&#32;||&#32;offset&#32;&gt;&#32;720)&#32;{&#32;<emphasis role="comment">//&#32;±12&#32;hours&#32;in&#32;minutes</emphasis>
<anchor xml:id="_clock__commands_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;2,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;OFFSET&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.setTimezoneOffset(offset);
<anchor xml:id="_clock__commands_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;2,&#32;param);
<anchor xml:id="_clock__commands_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(...)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;2,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;PARAMETER&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00081"/>00081 }
<anchor xml:id="_clock__commands_8cpp_source_1l00082"/>00082 
<anchor xml:id="_clock__commands_8cpp_source_1l00083"/><link linkend="_clock__commands_8cpp_1add8778da60c0dc5c0add2c7b2ccdc57e">00083</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_clock__commands_8cpp_1add8778da60c0dc5c0add2c7b2ccdc57e">handleGetClockSyncInterval</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;!=&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8">OperationType::GET</link>&#32;||&#32;!param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;3,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;REQUEST&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;3,&#32;
<anchor xml:id="_clock__commands_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::to_string(<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.getClockSyncInterval()));
<anchor xml:id="_clock__commands_8cpp_source_1l00089"/>00089 }
<anchor xml:id="_clock__commands_8cpp_source_1l00090"/>00090 
<anchor xml:id="_clock__commands_8cpp_source_1l00091"/><link linkend="_clock__commands_8cpp_1a00137f0d4c6a83ee5c0df49c7370fe65">00091</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_clock__commands_8cpp_1a00137f0d4c6a83ee5c0df49c7370fe65">handleSetClockSyncInterval</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;!=&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164">OperationType::SET</link>&#32;||&#32;param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;4,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;REQUEST&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_communication_8cpp_1aaaceac04637cd33a7f3fffdd1711e6c5">interval</link>&#32;=&#32;std::stoul(param);
<anchor xml:id="_clock__commands_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.setClockSyncInterval(<link linkend="_communication_8cpp_1aaaceac04637cd33a7f3fffdd1711e6c5">interval</link>);
<anchor xml:id="_clock__commands_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;4,&#32;param);
<anchor xml:id="_clock__commands_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(...)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;4,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;PARAMETER&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00102"/>00102 }
<anchor xml:id="_clock__commands_8cpp_source_1l00103"/>00103 
<anchor xml:id="_clock__commands_8cpp_source_1l00104"/><link linkend="_clock__commands_8cpp_1a6def0bf9e591d66bd98b752f731d44ba">00104</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_clock__commands_8cpp_1a6def0bf9e591d66bd98b752f731d44ba">handleGetClockDrift</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;!=&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8">OperationType::GET</link>&#32;||&#32;!param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;5,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;REQUEST&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;5,&#32;
<anchor xml:id="_clock__commands_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::to_string(<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.getClockDrift()));
<anchor xml:id="_clock__commands_8cpp_source_1l00110"/>00110 }
<anchor xml:id="_clock__commands_8cpp_source_1l00111"/>00111 
<anchor xml:id="_clock__commands_8cpp_source_1l00112"/><link linkend="_clock__commands_8cpp_1ae4cd7f745d6f9e2cadef70e21d8a9fcb">00112</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_clock__commands_8cpp_1ae4cd7f745d6f9e2cadef70e21d8a9fcb">handleSetClockDrift</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;!=&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164">OperationType::SET</link>&#32;||&#32;param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;6,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;REQUEST&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;drift&#32;=&#32;std::stof(param);
<anchor xml:id="_clock__commands_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.setClockDrift(drift);
<anchor xml:id="_clock__commands_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;6,&#32;param);
<anchor xml:id="_clock__commands_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(...)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;6,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;PARAMETER&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00123"/>00123 }
<anchor xml:id="_clock__commands_8cpp_source_1l00124"/>00124 
<anchor xml:id="_clock__commands_8cpp_source_1l00125"/><link linkend="_clock__commands_8cpp_1a17274560343c34119630b27d88ef475e">00125</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_clock__commands_8cpp_1a17274560343c34119630b27d88ef475e">handleGetLastSyncTime</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;!=&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8">OperationType::GET</link>&#32;||&#32;!param.empty())&#32;{
<anchor xml:id="_clock__commands_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;3,&#32;7,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;REQUEST&quot;</emphasis>);
<anchor xml:id="_clock__commands_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;}
<anchor xml:id="_clock__commands_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;3,&#32;7,&#32;
<anchor xml:id="_clock__commands_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::to_string(<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.getLastSyncTime()));
<anchor xml:id="_clock__commands_8cpp_source_1l00131"/>00131 }
</programlisting></section>
