<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_commands_8h" xml:lang="en-US">
<title>commands/commands.h File Reference</title>
<indexterm><primary>commands/commands.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;string&gt;<?linebreak?>#include &lt;functional&gt;<?linebreak?>#include &lt;map&gt;<?linebreak?>#include &quot;protocol.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1a1eefb8c4d539d50c787b4db3f6ebb093">handleTime</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1acc9239d946ee18d2ff19af2c6a2177f0">handleGetTimezoneOffset</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1a9e802e312d0779aab74966074e81eb30">handleSetTimezoneOffset</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1add8778da60c0dc5c0add2c7b2ccdc57e">handleGetClockSyncInterval</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1a00137f0d4c6a83ee5c0df49c7370fe65">handleSetClockSyncInterval</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1a6def0bf9e591d66bd98b752f731d44ba">handleGetClockDrift</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1ae4cd7f745d6f9e2cadef70e21d8a9fcb">handleSetClockDrift</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1a17274560343c34119630b27d88ef475e">handleGetLastSyncTime</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___diagnostic_commands_1gade74b82cf2c20d93c5e0ce624cd7ca77">handleListCommands</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for listing all available commands on UART. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___diagnostic_commands_1ga5ebac5711334cb3584974b2b74556543">handleGetBuildVersion</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Get firmware build version. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1a7a7ebcb893bb8e5bb8b66c1d8db539b1">handleGetCommandsTimestamp</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___diagnostic_commands_1ga3a6c6092cd01fd9c13ab429f4a34326d">handleEnterBootloaderMode</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Reboot system to USB firmware loader. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___g_p_s_commands_1gaa4c13d7d324ffb354badf45e9ceffb1c">handleGPSPowerStatus</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for controlling GPS module power state. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___g_p_s_commands_1gad12f2e18bdfecbd5b6e8d8a84bb9cd77">handleEnableGPSTransparentMode</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for enabling GPS transparent mode (UART pass-through) </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___g_p_s_commands_1ga71881bd1a0a285e4149db732a3f1b533">handleGetRMCData</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for retrieving GPS RMC (Recommended Minimum Navigation) data. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___g_p_s_commands_1gaf1f6c0fb4266518353e088e8781ed143">handleGetGGAData</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for retrieving GPS GGA (Global Positioning System Fix Data) data. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___power_commands_1gafef922e13071e5fb67da78207a9f22a4">handleGetPowerManagerIDs</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for retrieving Power Manager IDs. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___power_commands_1gad301b8c13cafa148a6f3e80e9b0bcf1a">handleGetVoltageBattery</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for getting battery voltage. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___power_commands_1ga9f2b608f46080fcdae38a1a8454938b8">handleGetVoltage5V</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for getting 5V rail voltage. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___power_commands_1ga3f38c538065bf67dbec1142fdb866d16">handleGetCurrentChargeUSB</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for getting USB charge current. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___power_commands_1ga6fbaf484e68c9561ad7fabef21def37b">handleGetCurrentChargeSolar</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for getting solar panel charge current. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___power_commands_1ga83596ea837df6cf7b15e673b95bf524f">handleGetCurrentChargeTotal</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for getting total charge current. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___power_commands_1gabd6610f557fe9deaa9f80d9405738226">handleGetCurrentDraw</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for getting system current draw. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___event_commands_1gad921fe7254d7ec43f16a6fb21f5c385a">handleGetLastEvents</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for retrieving last N events from the event log. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_group___event_commands_1ga6f817db327c7b16cf49575635e595004">handleGetEventCount</link> (const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>

<para>Handler for getting total number of events in the log. </para>
</listitem>
            <listitem><para><link linkend="_struct_frame">Frame</link> <link linkend="_commands_8h_1a1907d400d2c8d8d054ba95bcf43276ea">executeCommand</link> (uint32_t commandKey, const std::string &amp;param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>std::map&lt; uint32_t, std::function&lt; <link linkend="_struct_frame">Frame</link>(const std::string &amp;, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>)&gt; &gt; <link linkend="_commands_8h_1acbfd6523ceea62dad855ea65b52eb5b1">commandHandlers</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_commands_8h_1a1907d400d2c8d8d054ba95bcf43276ea"/><section>
    <title>executeCommand()</title>
<indexterm><primary>executeCommand</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>executeCommand</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> executeCommand (uint32_t commandKey, const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_commands_8cpp_source_1l00037">37</link> of file <link linkend="_commands_8cpp_source">commands.cpp</link>.</para>
</section>
<anchor xml:id="_commands_8h_1a6def0bf9e591d66bd98b752f731d44ba"/><section>
    <title>handleGetClockDrift()</title>
<indexterm><primary>handleGetClockDrift</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleGetClockDrift</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleGetClockDrift (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_clock__commands_8cpp_source_1l00104">104</link> of file <link linkend="_clock__commands_8cpp_source">clock_commands.cpp</link>.</para>
</section>
<anchor xml:id="_commands_8h_1add8778da60c0dc5c0add2c7b2ccdc57e"/><section>
    <title>handleGetClockSyncInterval()</title>
<indexterm><primary>handleGetClockSyncInterval</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleGetClockSyncInterval</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleGetClockSyncInterval (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_clock__commands_8cpp_source_1l00083">83</link> of file <link linkend="_clock__commands_8cpp_source">clock_commands.cpp</link>.</para>
</section>
<anchor xml:id="_commands_8h_1a7a7ebcb893bb8e5bb8b66c1d8db539b1"/><section>
    <title>handleGetCommandsTimestamp()</title>
<indexterm><primary>handleGetCommandsTimestamp</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleGetCommandsTimestamp</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleGetCommandsTimestamp (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para></section>
<anchor xml:id="_commands_8h_1a17274560343c34119630b27d88ef475e"/><section>
    <title>handleGetLastSyncTime()</title>
<indexterm><primary>handleGetLastSyncTime</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleGetLastSyncTime</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleGetLastSyncTime (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_clock__commands_8cpp_source_1l00125">125</link> of file <link linkend="_clock__commands_8cpp_source">clock_commands.cpp</link>.</para>
</section>
<anchor xml:id="_commands_8h_1acc9239d946ee18d2ff19af2c6a2177f0"/><section>
    <title>handleGetTimezoneOffset()</title>
<indexterm><primary>handleGetTimezoneOffset</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleGetTimezoneOffset</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleGetTimezoneOffset (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_clock__commands_8cpp_source_1l00059">59</link> of file <link linkend="_clock__commands_8cpp_source">clock_commands.cpp</link>.</para>
</section>
<anchor xml:id="_commands_8h_1ae4cd7f745d6f9e2cadef70e21d8a9fcb"/><section>
    <title>handleSetClockDrift()</title>
<indexterm><primary>handleSetClockDrift</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleSetClockDrift</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleSetClockDrift (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_clock__commands_8cpp_source_1l00112">112</link> of file <link linkend="_clock__commands_8cpp_source">clock_commands.cpp</link>.</para>
</section>
<anchor xml:id="_commands_8h_1a00137f0d4c6a83ee5c0df49c7370fe65"/><section>
    <title>handleSetClockSyncInterval()</title>
<indexterm><primary>handleSetClockSyncInterval</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleSetClockSyncInterval</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleSetClockSyncInterval (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_clock__commands_8cpp_source_1l00091">91</link> of file <link linkend="_clock__commands_8cpp_source">clock_commands.cpp</link>.</para>
</section>
<anchor xml:id="_commands_8h_1a9e802e312d0779aab74966074e81eb30"/><section>
    <title>handleSetTimezoneOffset()</title>
<indexterm><primary>handleSetTimezoneOffset</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleSetTimezoneOffset</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleSetTimezoneOffset (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_clock__commands_8cpp_source_1l00067">67</link> of file <link linkend="_clock__commands_8cpp_source">clock_commands.cpp</link>.</para>
</section>
<anchor xml:id="_commands_8h_1a1eefb8c4d539d50c787b4db3f6ebb093"/><section>
    <title>handleTime()</title>
<indexterm><primary>handleTime</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>handleTime</secondary></indexterm>
<para><computeroutput><link linkend="_struct_frame">Frame</link> handleTime (const std::string &amp; param, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link> operationType)</computeroutput></para><para>
Definition at line <link linkend="_clock__commands_8cpp_source_1l00008">8</link> of file <link linkend="_clock__commands_8cpp_source">clock_commands.cpp</link>.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_commands_8h_1acbfd6523ceea62dad855ea65b52eb5b1"/><section>
    <title>commandHandlers</title>
<indexterm><primary>commandHandlers</primary><secondary>commands.h</secondary></indexterm>
<indexterm><primary>commands.h</primary><secondary>commandHandlers</secondary></indexterm>
<para><computeroutput>std::map&lt;uint32_t, std::function&lt;<link linkend="_struct_frame">Frame</link>(const std::string&amp;, <link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>)&gt; &gt; commandHandlers<computeroutput>[extern]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_commands_8cpp_source_1l00009">9</link> of file <link linkend="_commands_8cpp_source">commands.cpp</link>.</para>
</section>
</section>
</section>
