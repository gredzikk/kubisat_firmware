<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_commands_8h_source" xml:lang="en-US">
<title>commands.h</title>
<indexterm><primary>commands/commands.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_commands_8h_source_1l00001"/>00001 <emphasis role="comment">//&#32;commands/commands.h</emphasis>
<anchor xml:id="_commands_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#ifndef&#32;COMMANDS_H</emphasis>
<anchor xml:id="_commands_8h_source_1l00003"/>00003 <emphasis role="preprocessor">#define&#32;COMMANDS_H</emphasis>
<anchor xml:id="_commands_8h_source_1l00004"/>00004 
<anchor xml:id="_commands_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_commands_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;functional&gt;</emphasis>
<anchor xml:id="_commands_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
<anchor xml:id="_commands_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_protocol_8h">protocol.h</link>&quot;</emphasis>
<anchor xml:id="_commands_8h_source_1l00009"/>00009 
<anchor xml:id="_commands_8h_source_1l00010"/>00010 <emphasis role="comment">//&#32;CLOCK</emphasis>
<anchor xml:id="_commands_8h_source_1l00011"/>00011 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1a1eefb8c4d539d50c787b4db3f6ebb093">handleTime</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00012"/>00012 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1acc9239d946ee18d2ff19af2c6a2177f0">handleGetTimezoneOffset</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00013"/>00013 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1a9e802e312d0779aab74966074e81eb30">handleSetTimezoneOffset</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00014"/>00014 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1add8778da60c0dc5c0add2c7b2ccdc57e">handleGetClockSyncInterval</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00015"/>00015 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1a00137f0d4c6a83ee5c0df49c7370fe65">handleSetClockSyncInterval</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00016"/>00016 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1a6def0bf9e591d66bd98b752f731d44ba">handleGetClockDrift</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00017"/>00017 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1ae4cd7f745d6f9e2cadef70e21d8a9fcb">handleSetClockDrift</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00018"/>00018 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1a17274560343c34119630b27d88ef475e">handleGetLastSyncTime</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00019"/>00019 
<anchor xml:id="_commands_8h_source_1l00020"/>00020 <emphasis role="comment">//&#32;DIAG</emphasis>
<anchor xml:id="_commands_8h_source_1l00021"/>00021 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___diagnostic_commands_1gade74b82cf2c20d93c5e0ce624cd7ca77">handleListCommands</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00022"/>00022 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___diagnostic_commands_1ga5ebac5711334cb3584974b2b74556543">handleGetBuildVersion</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00023"/><link linkend="_commands_8h_1a7a7ebcb893bb8e5bb8b66c1d8db539b1">00023</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1a7a7ebcb893bb8e5bb8b66c1d8db539b1">handleGetCommandsTimestamp</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00024"/>00024 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___diagnostic_commands_1ga3a6c6092cd01fd9c13ab429f4a34326d">handleEnterBootloaderMode</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00025"/>00025 
<anchor xml:id="_commands_8h_source_1l00026"/>00026 <emphasis role="comment">//&#32;GPS</emphasis>
<anchor xml:id="_commands_8h_source_1l00027"/>00027 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___g_p_s_commands_1gaa4c13d7d324ffb354badf45e9ceffb1c">handleGPSPowerStatus</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00028"/>00028 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___g_p_s_commands_1gad12f2e18bdfecbd5b6e8d8a84bb9cd77">handleEnableGPSTransparentMode</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00029"/>00029 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___g_p_s_commands_1ga71881bd1a0a285e4149db732a3f1b533">handleGetRMCData</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00030"/>00030 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___g_p_s_commands_1gaf1f6c0fb4266518353e088e8781ed143">handleGetGGAData</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00031"/>00031 
<anchor xml:id="_commands_8h_source_1l00032"/>00032 <emphasis role="comment">//&#32;POWER</emphasis>
<anchor xml:id="_commands_8h_source_1l00033"/>00033 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___power_commands_1gafef922e13071e5fb67da78207a9f22a4">handleGetPowerManagerIDs</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00034"/>00034 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___power_commands_1gad301b8c13cafa148a6f3e80e9b0bcf1a">handleGetVoltageBattery</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00035"/>00035 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___power_commands_1ga9f2b608f46080fcdae38a1a8454938b8">handleGetVoltage5V</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00036"/>00036 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___power_commands_1ga3f38c538065bf67dbec1142fdb866d16">handleGetCurrentChargeUSB</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00037"/>00037 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___power_commands_1ga6fbaf484e68c9561ad7fabef21def37b">handleGetCurrentChargeSolar</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00038"/>00038 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___power_commands_1ga83596ea837df6cf7b15e673b95bf524f">handleGetCurrentChargeTotal</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00039"/>00039 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___power_commands_1gabd6610f557fe9deaa9f80d9405738226">handleGetCurrentDraw</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00040"/>00040 
<anchor xml:id="_commands_8h_source_1l00041"/>00041 <emphasis role="comment">//&#32;EVENT</emphasis>
<anchor xml:id="_commands_8h_source_1l00042"/>00042 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___event_commands_1gad921fe7254d7ec43f16a6fb21f5c385a">handleGetLastEvents</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00043"/>00043 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___event_commands_1ga6f817db327c7b16cf49575635e595004">handleGetEventCount</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00044"/>00044 
<anchor xml:id="_commands_8h_source_1l00045"/>00045 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_commands_8h_1a1907d400d2c8d8d054ba95bcf43276ea">executeCommand</link>(uint32_t&#32;commandKey,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_commands_8h_source_1l00046"/>00046 <emphasis role="keyword">extern</emphasis>&#32;std::map&lt;uint32_t,&#32;std::function&lt;<link linkend="_struct_frame">Frame</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>)&gt;&gt;&#32;<link linkend="_commands_8cpp_1a04a0515603ba347ef314678876f3fa26">commandHandlers</link>;
<anchor xml:id="_commands_8h_source_1l00047"/>00047 
<anchor xml:id="_commands_8h_source_1l00048"/>00048 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
