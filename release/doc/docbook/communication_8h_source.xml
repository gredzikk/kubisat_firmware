<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_communication_8h_source" xml:lang="en-US">
<title>communication.h</title>
<indexterm><primary>frame_model/communication.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_communication_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;COMMUNICATION_H</emphasis>
<anchor xml:id="_communication_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;COMMUNICATION_H</emphasis>
<anchor xml:id="_communication_8h_source_1l00003"/>00003 
<anchor xml:id="_communication_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_communication_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_communication_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_protocol_8h">protocol.h</link>&quot;</emphasis>
<anchor xml:id="_communication_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_event__manager_8h">event_manager.h</link>&quot;</emphasis>
<anchor xml:id="_communication_8h_source_1l00008"/>00008 
<anchor xml:id="_communication_8h_source_1l00009"/>00009 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_communication_8h_1a520df448c1dc359f42111ac240081975">initializeRadio</link>();
<anchor xml:id="_communication_8h_source_1l00010"/><link linkend="_communication_8h_1a877f9c1d3485cf1521bc13996d39c1fb">00010</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a877f9c1d3485cf1521bc13996d39c1fb">sendMessage</link>(std::string&#32;<link linkend="_communication_8cpp_1a13c45747091f32644e83d65348c61232">outgoing</link>);
<anchor xml:id="_communication_8h_source_1l00011"/>00011 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a252a4ea5f222c6879d281cc2f9357b46">sendLargePacket</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;data,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
<anchor xml:id="_communication_8h_source_1l00012"/>00012 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a54817002e33761dc61558b1138749dfb">onReceive</link>(<emphasis role="keywordtype">int</emphasis>&#32;packetSize);
<anchor xml:id="_communication_8h_source_1l00013"/>00013 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1ac5e175a6a1482f700f9aee0b727b924f">handleUartInput</link>();
<anchor xml:id="_communication_8h_source_1l00014"/>00014 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a8b9407b2f579031cf4b705f1ac03ac31">processFrameData</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;data);
<anchor xml:id="_communication_8h_source_1l00015"/>00015 
<anchor xml:id="_communication_8h_source_1l00016"/>00016 
<anchor xml:id="_communication_8h_source_1l00017"/><link linkend="_communication_8h_1a3ea1f464aef22cd9918b6fe75659c535">00017</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a3ea1f464aef22cd9918b6fe75659c535">handleCommandFrame</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_frame">Frame</link>&amp;&#32;frame);
<anchor xml:id="_communication_8h_source_1l00018"/>00018 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_communication_8h_1a1907d400d2c8d8d054ba95bcf43276ea">executeCommand</link>(uint32_t&#32;commandKey,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType);
<anchor xml:id="_communication_8h_source_1l00019"/>00019 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a6005ddd6320bebe2a680fa6b8efff6dd">sendEventRegister</link>();
<anchor xml:id="_communication_8h_source_1l00020"/>00020 
<anchor xml:id="_communication_8h_source_1l00021"/>00021 
<anchor xml:id="_communication_8h_source_1l00022"/>00022 std::string&#32;<link linkend="_communication_8h_1ab53898fb6f45dfc657837a665a070959">encodeFrame</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_frame">Frame</link>&amp;&#32;frame);
<anchor xml:id="_communication_8h_source_1l00023"/>00023 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_communication_8h_1a8f34bc31494430539db21206f084d39d">decodeFrame</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;data);
<anchor xml:id="_communication_8h_source_1l00024"/>00024 
<anchor xml:id="_communication_8h_source_1l00025"/>00025 <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1">ExecutionResult</link>&#32;result,&#32;uint8_t&#32;<link linkend="_event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741">group</link>,&#32;uint8_t&#32;command,<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;value,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_protocol_8h_1a2d96449e2b52d45b5726af92084e0d8f">ValueUnit</link>&#32;unitType&#32;&#32;=&#32;<link linkend="_protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa0db45d2a4141101bdfe48e3314cfbca3">ValueUnit::UNDEFINED</link>);
<anchor xml:id="_communication_8h_source_1l00026"/><link linkend="_communication_8h_1a6272bef4a482127bfe7c1b50d723d69d">00026</link> std::string&#32;<link linkend="_communication_8h_1a6272bef4a482127bfe7c1b50d723d69d">determineUnit</link>(uint8_t&#32;<link linkend="_event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741">group</link>,&#32;uint8_t&#32;command);
<anchor xml:id="_communication_8h_source_1l00027"/>00027 
<anchor xml:id="_communication_8h_source_1l00028"/>00028 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a877f9c1d3485cf1521bc13996d39c1fb">sendMessage</link>(std::string&#32;<link linkend="_communication_8cpp_1a13c45747091f32644e83d65348c61232">outgoing</link>);
<anchor xml:id="_communication_8h_source_1l00029"/>00029 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a752e7cc27f52d4ba064e691b3e240ed8">sendFrame</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_frame">Frame</link>&amp;&#32;frame);
<anchor xml:id="_communication_8h_source_1l00030"/>00030 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a252a4ea5f222c6879d281cc2f9357b46">sendLargePacket</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;data,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
<anchor xml:id="_communication_8h_source_1l00031"/>00031 
<anchor xml:id="_communication_8h_source_1l00032"/>00032 
<anchor xml:id="_communication_8h_source_1l00033"/>00033 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a54817002e33761dc61558b1138749dfb">onReceive</link>(<emphasis role="keywordtype">int</emphasis>&#32;packetSize);
<anchor xml:id="_communication_8h_source_1l00034"/>00034 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1ac5e175a6a1482f700f9aee0b727b924f">handleUartInput</link>();
<anchor xml:id="_communication_8h_source_1l00035"/>00035 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_communication_8h_1a8b9407b2f579031cf4b705f1ac03ac31">processFrameData</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;data);
<anchor xml:id="_communication_8h_source_1l00036"/>00036 
<anchor xml:id="_communication_8h_source_1l00037"/>00037 
<anchor xml:id="_communication_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
