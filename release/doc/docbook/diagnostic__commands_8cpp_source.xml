<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_diagnostic__commands_8cpp_source" xml:lang="en-US">
<title>diagnostic_commands.cpp</title>
<indexterm><primary>commands/diagnostic_commands.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_diagnostic__commands_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_communication_8h">communication.h</link>&quot;</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_commands_8h">commands.h</link>&quot;</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;pico/stdlib.h&quot;</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;pico/bootrom.h&quot;</emphasis>&#32;
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00005"/>00005 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00010"/>00010 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00019"/><link linkend="_group___diagnostic_commands_1gade74b82cf2c20d93c5e0ce624cd7ca77">00019</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___diagnostic_commands_1gade74b82cf2c20d93c5e0ce624cd7ca77">handleListCommands</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!param.empty())&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;1,&#32;0,&#32;<emphasis role="stringliteral">&quot;PARAM&#32;UNNECESSARY&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00023"/>00023 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(operationType&#32;==&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8">OperationType::GET</link>))&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;1,&#32;0,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;OPERATION&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;}
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00027"/>00027 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;std::stringstream&#32;ss;
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;entry&#32;:&#32;<link linkend="_commands_8cpp_1a04a0515603ba347ef314678876f3fa26">commandHandlers</link>)&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;commandKey&#32;=&#32;entry.first;
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741">group</link>&#32;=&#32;(commandKey&#32;&gt;&gt;&#32;8)&#32;&amp;&#32;0xFF;
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;command&#32;=&#32;commandKey&#32;&amp;&#32;0xFF;
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00033"/>00033 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ss&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Group:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741">group</link>)
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;Command:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(command)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;}
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00037"/>00037 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;std::string&#32;commandList&#32;=&#32;ss.str();
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(commandList,&#32;<emphasis role="keyword">true</emphasis>);&#32;<emphasis role="comment">//&#32;Print&#32;to&#32;UART</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00040"/>00040 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;1,&#32;0,&#32;<emphasis role="stringliteral">&quot;Commands&#32;listed&#32;on&#32;UART&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00042"/>00042 }
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00043"/>00043 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00052"/><link linkend="_group___diagnostic_commands_1ga5ebac5711334cb3584974b2b74556543">00052</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___diagnostic_commands_1ga5ebac5711334cb3584974b2b74556543">handleGetBuildVersion</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!param.empty())&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;1,&#32;1,&#32;<emphasis role="stringliteral">&quot;PARAM&#32;UNECESSARY&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;==&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8">OperationType::GET</link>)&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;1,&#32;1,&#32;std::to_string(<link linkend="_build__number_8h_1ae7f90861d8c4d5b1cbdcf71d325feea2">BUILD_NUMBER</link>));
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;1,&#32;1,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;OPERATION&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00060"/>00060 }
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00061"/>00061 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00070"/><link linkend="_group___diagnostic_commands_1ga3a6c6092cd01fd9c13ab429f4a34326d">00070</link> <link linkend="_struct_frame">Frame</link>&#32;<link linkend="_group___diagnostic_commands_1ga3a6c6092cd01fd9c13ab429f4a34326d">handleEnterBootloaderMode</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;param,&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047">OperationType</link>&#32;operationType)&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!param.empty())&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;1,&#32;9,&#32;<emphasis role="stringliteral">&quot;PARAM&#32;UNNECESSARY&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;}
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00074"/>00074 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(operationType&#32;!=&#32;<link linkend="_protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164">OperationType::SET</link>)&#32;{
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5">ExecutionResult::ERROR</link>,&#32;1,&#32;9,&#32;<emphasis role="stringliteral">&quot;INVALID&#32;OPERATION&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;}
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00078"/>00078 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Build&#32;the&#32;success&#32;frame&#32;*before*&#32;resetting</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<link linkend="_struct_frame">Frame</link>&#32;successFrame&#32;=&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;1,&#32;9,&#32;<emphasis role="stringliteral">&quot;REBOOT&#32;BOOTSEL&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00081"/>00081 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;the&#32;success&#32;frame</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Sending&#32;BOOTSEL&#32;confirmation...&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<link linkend="_communication_8h_1a752e7cc27f52d4ba064e691b3e240ed8">sendFrame</link>(successFrame);&#32;<emphasis role="comment">//&#32;Assuming&#32;you&#32;have&#32;a&#32;sendFrame&#32;function</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00085"/>00085 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Delay&#32;to&#32;ensure&#32;the&#32;frame&#32;is&#32;sent</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00088"/>00088 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Entering&#32;BOOTSEL&#32;mode...&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;reset_usb_boot(0,&#32;0);&#32;<emphasis role="comment">//&#32;Trigger&#32;BOOTSEL&#32;mode</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00091"/>00091 
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;code&#32;will&#32;never&#32;reach&#32;here&#32;because&#32;the&#32;Pico&#32;will&#32;reset</emphasis>
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_communication_8h_1a54afeb73435419551a1b51a3fd5c3266">buildFrame</link>(<link linkend="_protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c">ExecutionResult::SUCCESS</link>,&#32;1,&#32;9,&#32;<emphasis role="stringliteral">&quot;Entering&#32;BOOTSEL&#32;mode&quot;</emphasis>);
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00094"/>00094 }
<anchor xml:id="_diagnostic__commands_8cpp_source_1l00095"/>00095 &#32;
</programlisting></section>
