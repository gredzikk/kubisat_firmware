<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_event__manager_8cpp_source" xml:lang="en-US">
<title>event_manager.cpp</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_event__manager_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_event__manager_8h">event_manager.h</link>&quot;</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;cstdio&gt;</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_protocol_8h">protocol.h</link>&quot;</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;pico/multicore.h&quot;</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_communication_8h">communication.h</link>&quot;</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_utils_8h">utils.h</link>&quot;</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_s3231_8h">DS3231.h</link>&quot;</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00008"/>00008 
<anchor xml:id="_event__manager_8cpp_source_1l00009"/><link linkend="_event__manager_8cpp_1ab144678e47784f421d98c3dfdbb53dc8">00009</link> <emphasis role="keyword">volatile</emphasis>&#32;uint16_t&#32;<link linkend="_event__manager_8cpp_1ab144678e47784f421d98c3dfdbb53dc8">eventLogId</link>&#32;=&#32;0;
<anchor xml:id="_event__manager_8cpp_source_1l00010"/>00010 
<anchor xml:id="_event__manager_8cpp_source_1l00011"/><link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">00011</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6">PowerEvent</link>&#32;<link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">lastPowerState</link>&#32;=&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a36d76a2d86f6dbf2035366b3572f025c">PowerEvent::LOW_BATTERY</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00012"/>00012 
<anchor xml:id="_event__manager_8cpp_source_1l00013"/><link linkend="_event__manager_8cpp_1a234988dfb88db38997bd921cd5c32457">00013</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_event__manager_8cpp_1a234988dfb88db38997bd921cd5c32457">FALL_RATE_THRESHOLD</link>&#32;=&#32;-0.02f;
<anchor xml:id="_event__manager_8cpp_source_1l00014"/><link linkend="_event__manager_8cpp_1ae4e7da8cdf52e447acd5705d930759cf">00014</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_event__manager_8cpp_1ae4e7da8cdf52e447acd5705d930759cf">FALLING_TREND_REQUIRED</link>&#32;=&#32;3;
<anchor xml:id="_event__manager_8cpp_source_1l00015"/><link linkend="_event__manager_8cpp_1aa1095ab71c42b3eaed0492aec0941972">00015</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_event__manager_8cpp_1aa1095ab71c42b3eaed0492aec0941972">VOLTAGE_LOW_THRESHOLD</link>&#32;=&#32;4.7f;
<anchor xml:id="_event__manager_8cpp_source_1l00016"/>00016 
<anchor xml:id="_event__manager_8cpp_source_1l00017"/><link linkend="_event__manager_8cpp_1a98ed7b83dd5e1a54a096ca9bb3456163">00017</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_event__manager_8cpp_1a98ed7b83dd5e1a54a096ca9bb3456163">VOLTAGE_OVERCHARGE_THRESHOLD</link>&#32;=&#32;5.3f;
<anchor xml:id="_event__manager_8cpp_source_1l00018"/>00018 
<anchor xml:id="_event__manager_8cpp_source_1l00019"/><link linkend="_event__manager_8cpp_1ad4a2e48e0a0e0d5aa49dd6c2aa12d8fb">00019</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_event__manager_8cpp_1ad4a2e48e0a0e0d5aa49dd6c2aa12d8fb">fallingTrendCount</link>&#32;=&#32;0;
<anchor xml:id="_event__manager_8cpp_source_1l00020"/>00020 
<anchor xml:id="_event__manager_8cpp_source_1l00021"/><link linkend="_event__manager_8cpp_1a908d9cb4eb9ec61d273f6770660bbb8e">00021</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_event__manager_8cpp_1a908d9cb4eb9ec61d273f6770660bbb8e">lastSolarState</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_event__manager_8cpp_source_1l00022"/><link linkend="_event__manager_8cpp_1a0592f758055ae8683676ff86ae7ae9e1">00022</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_event__manager_8cpp_1a0592f758055ae8683676ff86ae7ae9e1">lastUSBState</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_event__manager_8cpp_source_1l00023"/>00023 
<anchor xml:id="_event__manager_8cpp_source_1l00024"/>00024 <emphasis role="keyword">extern</emphasis>&#32;<link linkend="_class_d_s3231">DS3231</link>&#32;<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00025"/>00025 
<anchor xml:id="_event__manager_8cpp_source_1l00026"/><link linkend="_event__manager_8cpp_1a2a686792b51ec2b9e1b7bfc9faef92f7">00026</link> <link linkend="_class_event_manager_impl">EventManagerImpl</link>&#32;<link linkend="_event__manager_8cpp_1a2a686792b51ec2b9e1b7bfc9faef92f7">eventManager</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00027"/>00027 
<anchor xml:id="_event__manager_8cpp_source_1l00028"/><link linkend="_class_event_manager_1ae73a56091dc8713bb86a11abb6742a14">00028</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_event_manager_1ae73a56091dc8713bb86a11abb6742a14">EventManager::logEvent</link>(uint8_t&#32;<link linkend="_event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741">group</link>,&#32;uint8_t&#32;<link linkend="_event__manager_8h_1aeef6900f411bc223febdd92c9435693b">event</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;mutex_enter_blocking(&amp;<link linkend="_class_event_manager_1a970381a54ae432d262830ad74048c94e">eventMutex</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00030"/>00030 
<anchor xml:id="_event__manager_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<link linkend="_class_event_log">EventLog</link>&amp;&#32;log&#32;=&#32;<link linkend="_class_event_manager_1a9d82f66074e141f352bb852654673536">events</link>[<link linkend="_class_event_manager_1ad97f788895da6e30b3237982a7bcd810">writeIndex</link>];
<anchor xml:id="_event__manager_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;log.<link linkend="_class_event_log_1a5e0923e12450e6b7c782c7f6630f4563">id</link>&#32;=&#32;<link linkend="_class_event_manager_1a31b1b079c272a1d7022ed84b01927186">nextEventId</link>++;
<anchor xml:id="_event__manager_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;log.<link linkend="_class_event_log_1aea248a425dedf15b5cee31ce2884db40">timestamp</link>&#32;=&#32;<link linkend="_clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</link>.getTimeUnix();
<anchor xml:id="_event__manager_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;log.<link linkend="_class_event_log_1a5209ffdb8dc4bf7f87f3ec44b2ae63e3">group</link>&#32;=&#32;<link linkend="_event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741">group</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;log.<link linkend="_class_event_log_1a4ba1b6d820bf66740aac49fd299f1ea2">event</link>&#32;=&#32;<link linkend="_event__manager_8h_1aeef6900f411bc223febdd92c9435693b">event</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00036"/>00036 
<anchor xml:id="_event__manager_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Print&#32;event&#32;immediately</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(log.<link linkend="_class_event_log_1adb17c412276c8678289395607c493e7e">toString</link>());
<anchor xml:id="_event__manager_8cpp_source_1l00039"/>00039 
<anchor xml:id="_event__manager_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<link linkend="_class_event_manager_1ad97f788895da6e30b3237982a7bcd810">writeIndex</link>&#32;=&#32;(<link linkend="_class_event_manager_1ad97f788895da6e30b3237982a7bcd810">writeIndex</link>&#32;+&#32;1)&#32;%&#32;<link linkend="_event__manager_8h_1acc4dda1aaabc9862fe79fd94e0b722bf">EVENT_BUFFER_SIZE</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_event_manager_1ab74418c8064525f34692dff74dd28d82">eventCount</link>&#32;&lt;&#32;<link linkend="_event__manager_8h_1acc4dda1aaabc9862fe79fd94e0b722bf">EVENT_BUFFER_SIZE</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_manager_1ab74418c8064525f34692dff74dd28d82">eventCount</link>++;
<anchor xml:id="_event__manager_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00044"/>00044 
<anchor xml:id="_event__manager_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;persistence&#32;flag&#32;on&#32;buffer&#32;full&#32;or&#32;power&#32;events</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_event_manager_1ab74418c8064525f34692dff74dd28d82">eventCount</link>&#32;==&#32;<link linkend="_event__manager_8h_1acc4dda1aaabc9862fe79fd94e0b722bf">EVENT_BUFFER_SIZE</link>&#32;||&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741">group</link>&#32;==&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>)&#32;&amp;&amp;&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8h_1aeef6900f411bc223febdd92c9435693b">event</link>&#32;==&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a8700d6b962e860d93b3c89489b9aac21">PowerEvent::POWER_FALLING</link>)))&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_manager_1aed2eb3a8bc611f5594eb62304c7b4754">needsPersistence</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_event__manager_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_manager_1ad369ac9b7ab0251070e0075745836a40">saveToStorage</link>();
<anchor xml:id="_event__manager_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00052"/>00052 
<anchor xml:id="_event__manager_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;mutex_exit(&amp;<link linkend="_class_event_manager_1a970381a54ae432d262830ad74048c94e">eventMutex</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00054"/>00054 }
<anchor xml:id="_event__manager_8cpp_source_1l00055"/>00055 
<anchor xml:id="_event__manager_8cpp_source_1l00056"/><link linkend="_class_event_manager_1a00648cfe8c39fbd59cc4c593113e5573">00056</link> <emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_event_log">EventLog</link>&amp;&#32;<link linkend="_class_event_manager_1a00648cfe8c39fbd59cc4c593113e5573">EventManager::getEvent</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_event__manager_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_event_log">EventLog</link>&#32;emptyEvent&#32;=&#32;{0,&#32;0,&#32;0,&#32;0};&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;{id,&#32;timestamp,&#32;group,&#32;event}</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&gt;=&#32;<link linkend="_class_event_manager_1ab74418c8064525f34692dff74dd28d82">eventCount</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;emptyEvent;
<anchor xml:id="_event__manager_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;actual&#32;index&#32;in&#32;circular&#32;buffer</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;actualIndex;
<anchor xml:id="_event__manager_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_event_manager_1ab74418c8064525f34692dff74dd28d82">eventCount</link>&#32;==&#32;<link linkend="_event__manager_8h_1acc4dda1aaabc9862fe79fd94e0b722bf">EVENT_BUFFER_SIZE</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actualIndex&#32;=&#32;(<link linkend="_class_event_manager_1ad97f788895da6e30b3237982a7bcd810">writeIndex</link>&#32;+&#32;index)&#32;%&#32;<link linkend="_event__manager_8h_1acc4dda1aaabc9862fe79fd94e0b722bf">EVENT_BUFFER_SIZE</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actualIndex&#32;=&#32;index;
<anchor xml:id="_event__manager_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_event_manager_1a9d82f66074e141f352bb852654673536">events</link>[actualIndex];
<anchor xml:id="_event__manager_8cpp_source_1l00071"/>00071 }
<anchor xml:id="_event__manager_8cpp_source_1l00072"/>00072 
<anchor xml:id="_event__manager_8cpp_source_1l00077"/><link linkend="_event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433">00077</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433">checkPowerEvents</link>(<link linkend="_class_power_manager">PowerManager</link>&amp;&#32;pm)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currentVoltage&#32;=&#32;pm.<link linkend="_class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd">getVoltage5V</link>();
<anchor xml:id="_event__manager_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;previousVoltage&#32;=&#32;0.0f;
<anchor xml:id="_event__manager_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;delta&#32;=&#32;currentVoltage&#32;-&#32;previousVoltage;
<anchor xml:id="_event__manager_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;previousVoltage&#32;=&#32;currentVoltage;
<anchor xml:id="_event__manager_8cpp_source_1l00082"/>00082 
<anchor xml:id="_event__manager_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delta&#32;&lt;&#32;<link linkend="_event__manager_8cpp_1a234988dfb88db38997bd921cd5c32457">FALL_RATE_THRESHOLD</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1ad4a2e48e0a0e0d5aa49dd6c2aa12d8fb">fallingTrendCount</link>++;
<anchor xml:id="_event__manager_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1ad4a2e48e0a0e0d5aa49dd6c2aa12d8fb">fallingTrendCount</link>&#32;=&#32;0;
<anchor xml:id="_event__manager_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00088"/>00088 
<anchor xml:id="_event__manager_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_event__manager_8cpp_1ad4a2e48e0a0e0d5aa49dd6c2aa12d8fb">fallingTrendCount</link>&#32;&gt;=&#32;<link linkend="_event__manager_8cpp_1ae4e7da8cdf52e447acd5705d930759cf">FALLING_TREND_REQUIRED</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Power&#32;falling&#32;detected!&quot;</emphasis>);
<anchor xml:id="_event__manager_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">lastPowerState</link>&#32;=&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a8700d6b962e860d93b3c89489b9aac21">PowerEvent::POWER_FALLING</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>,&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a8700d6b962e860d93b3c89489b9aac21">PowerEvent::POWER_FALLING</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00094"/>00094 
<anchor xml:id="_event__manager_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentVoltage&#32;&lt;&#32;<link linkend="_class_power_manager_1a426dcedc762549ed6c408708bd61b94e">PowerManager::VOLTAGE_LOW_THRESHOLD</link>&#32;&amp;&amp;&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">lastPowerState</link>&#32;!=&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a36d76a2d86f6dbf2035366b3572f025c">PowerEvent::LOW_BATTERY</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Low&#32;battery&#32;detected!&quot;</emphasis>);
<anchor xml:id="_event__manager_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">lastPowerState</link>&#32;=&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a36d76a2d86f6dbf2035366b3572f025c">PowerEvent::LOW_BATTERY</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>,&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a36d76a2d86f6dbf2035366b3572f025c">PowerEvent::LOW_BATTERY</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentVoltage&#32;&gt;&#32;<link linkend="_class_power_manager_1a4e28f40bee3fd8e6df12178663159783">PowerManager::VOLTAGE_OVERCHARGE_THRESHOLD</link>&#32;&amp;&amp;&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">lastPowerState</link>&#32;!=&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a575fea54d116603bb4c778db18fbde98">PowerEvent::OVERCHARGE</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Overcharge&#32;detected!&quot;</emphasis>);
<anchor xml:id="_event__manager_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">lastPowerState</link>&#32;=&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a575fea54d116603bb4c778db18fbde98">PowerEvent::OVERCHARGE</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>,&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a575fea54d116603bb4c778db18fbde98">PowerEvent::OVERCHARGE</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentVoltage&#32;&gt;=&#32;<link linkend="_class_power_manager_1a426dcedc762549ed6c408708bd61b94e">PowerManager::VOLTAGE_LOW_THRESHOLD</link>&#32;&amp;&amp;&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentVoltage&#32;&lt;=&#32;<link linkend="_class_power_manager_1a4e28f40bee3fd8e6df12178663159783">PowerManager::VOLTAGE_OVERCHARGE_THRESHOLD</link>&#32;&amp;&amp;&#32;
<anchor xml:id="_event__manager_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">lastPowerState</link>&#32;!=&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a91d809be807947101ea242de92b64a87">PowerEvent::POWER_NORMAL</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Power&#32;back&#32;to&#32;normal!&quot;</emphasis>);
<anchor xml:id="_event__manager_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a2d4329f1e2606ca8f8535dae8c08afe5">lastPowerState</link>&#32;=&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a91d809be807947101ea242de92b64a87">PowerEvent::POWER_NORMAL</link>;
<anchor xml:id="_event__manager_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>,&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a91d809be807947101ea242de92b64a87">PowerEvent::POWER_NORMAL</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00114"/>00114 
<anchor xml:id="_event__manager_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;solar&#32;charging&#32;state</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;currentSolarState&#32;=&#32;pm.<link linkend="_class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083">isSolarActive</link>();
<anchor xml:id="_event__manager_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentSolarState&#32;!=&#32;<link linkend="_event__manager_8cpp_1a908d9cb4eb9ec61d273f6770660bbb8e">lastSolarState</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentSolarState)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Solar&#32;charging&#32;active!&quot;</emphasis>);
<anchor xml:id="_event__manager_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>,&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6aa45a91985c176d6b5d3669bdf41b7e3b">PowerEvent::SOLAR_ACTIVE</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Solar&#32;charging&#32;inactive!&quot;</emphasis>);
<anchor xml:id="_event__manager_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>,&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a35899506cd4cd1e676d022eb14ecb669">PowerEvent::SOLAR_INACTIVE</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a908d9cb4eb9ec61d273f6770660bbb8e">lastSolarState</link>&#32;=&#32;currentSolarState;
<anchor xml:id="_event__manager_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00127"/>00127 
<anchor xml:id="_event__manager_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;USB&#32;connection&#32;state</emphasis>
<anchor xml:id="_event__manager_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;currentUSBState&#32;=&#32;pm.<link linkend="_class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8">isUSBConnected</link>();
<anchor xml:id="_event__manager_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentUSBState&#32;!=&#32;<link linkend="_event__manager_8cpp_1a0592f758055ae8683676ff86ae7ae9e1">lastUSBState</link>)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentUSBState)&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;USB&#32;connected!&quot;</emphasis>);
<anchor xml:id="_event__manager_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>,&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6aea2afd0110180e8af5bf95a583f9dd13">PowerEvent::USB_CONNECTED</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_event__manager_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;USB&#32;disconnected!&quot;</emphasis>);
<anchor xml:id="_event__manager_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_event_emitter_1a539d733505f9a793439a9cfc4f2af079">EventEmitter::emit</link>(<link linkend="_event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6">EventGroup::POWER</link>,&#32;<link linkend="_event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a3a026550c6805c690d88a618aff891c9">PowerEvent::USB_DISCONNECTED</link>);
<anchor xml:id="_event__manager_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_event__manager_8cpp_1a0592f758055ae8683676ff86ae7ae9e1">lastUSBState</link>&#32;=&#32;currentUSBState;
<anchor xml:id="_event__manager_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__manager_8cpp_source_1l00140"/>00140 }
</programlisting></section>
