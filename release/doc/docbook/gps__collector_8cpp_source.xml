<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_gps__collector_8cpp_source" xml:lang="en-US">
<title>gps_collector.cpp</title>
<indexterm><primary>lib/GPS/gps_collector.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_gps__collector_8cpp_source_1l00001"/>00001 <emphasis role="comment">//&#32;filepath:&#32;/c:/Users/Kuba/Desktop/inz/kubisat/software/kubisat_firmware/lib/GPS/gps_collector.cpp</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_gps__collector_8h">lib/GPS/gps_collector.h</link>&quot;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_utils_8h">utils.h</link>&quot;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;pico/time.h&quot;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__n_m_e_a__data_8h">lib/GPS/NMEA/nmea_data.h</link>&quot;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_event__manager_8h">event_manager.h</link>&quot;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;ctime&gt;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;cstring&gt;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_s3231_8h">DS3231.h</link>&quot;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;sstream&gt;</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00012"/>00012 
<anchor xml:id="_gps__collector_8cpp_source_1l00013"/><link linkend="_gps__collector_8cpp_1a72dde6c82b28027b8cc37e6a827306a7">00013</link> <emphasis role="preprocessor">#define&#32;MAX_RAW_DATA_LENGTH&#32;1024</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00014"/>00014 
<anchor xml:id="_gps__collector_8cpp_source_1l00015"/>00015 <emphasis role="keyword">extern</emphasis>&#32;<link linkend="_class_n_m_e_a_data">NMEAData</link>&#32;<link linkend="_gps__collector_8cpp_1af2b979012abe80d338fef98209f87b78">nmea_data</link>;
<anchor xml:id="_gps__collector_8cpp_source_1l00016"/>00016 
<anchor xml:id="_gps__collector_8cpp_source_1l00017"/><link linkend="_gps__collector_8cpp_1a0509cbb838eb47985372ff8889e507f5">00017</link> std::vector&lt;std::string&gt;&#32;<link linkend="_gps__collector_8cpp_1a0509cbb838eb47985372ff8889e507f5">splitString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;str,&#32;<emphasis role="keywordtype">char</emphasis>&#32;delimiter)&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;tokens;
<anchor xml:id="_gps__collector_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;std::stringstream&#32;ss(str);
<anchor xml:id="_gps__collector_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;std::string&#32;token;
<anchor xml:id="_gps__collector_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(std::getline(ss,&#32;token,&#32;delimiter))&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens.push_back(token);
<anchor xml:id="_gps__collector_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__collector_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tokens;
<anchor xml:id="_gps__collector_8cpp_source_1l00025"/>00025 }
<anchor xml:id="_gps__collector_8cpp_source_1l00026"/>00026 
<anchor xml:id="_gps__collector_8cpp_source_1l00027"/><link linkend="_gps__collector_8cpp_1abe46d88c89b1f730f6c9a230acac2a6a">00027</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_gps__collector_8cpp_1abe46d88c89b1f730f6c9a230acac2a6a">collectGPSData</link>()&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;raw_data_buffer[<link linkend="_gps__collector_8cpp_1a72dde6c82b28027b8cc37e6a827306a7">MAX_RAW_DATA_LENGTH</link>];
<anchor xml:id="_gps__collector_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;raw_data_index&#32;=&#32;0;
<anchor xml:id="_gps__collector_8cpp_source_1l00030"/>00030 
<anchor xml:id="_gps__collector_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(uart_is_readable(<link linkend="_pin__config_8h_1a31bae3288bdf1b7a767c494f2b049779">GPS_UART_PORT</link>))&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c&#32;=&#32;uart_getc(<link linkend="_pin__config_8h_1a31bae3288bdf1b7a767c494f2b049779">GPS_UART_PORT</link>);
<anchor xml:id="_gps__collector_8cpp_source_1l00033"/>00033 
<anchor xml:id="_gps__collector_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>&#32;||&#32;c&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>)&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;End&#32;of&#32;message</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(raw_data_index&#32;&gt;&#32;0)&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw_data_buffer[raw_data_index]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_gps__collector_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;message(raw_data_buffer);
<anchor xml:id="_gps__collector_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw_data_index&#32;=&#32;0;
<anchor xml:id="_gps__collector_8cpp_source_1l00040"/>00040 
<anchor xml:id="_gps__collector_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Split&#32;the&#32;message&#32;into&#32;tokens</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;tokens&#32;=&#32;<link linkend="_gps__collector_8cpp_1a0509cbb838eb47985372ff8889e507f5">splitString</link>(message,&#32;<emphasis role="charliteral">&apos;,&apos;</emphasis>);
<anchor xml:id="_gps__collector_8cpp_source_1l00043"/>00043 
<anchor xml:id="_gps__collector_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;the&#32;global&#32;vectors&#32;based&#32;on&#32;the&#32;sentence&#32;type</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(message.find(<emphasis role="stringliteral">&quot;$GPRMC&quot;</emphasis>)&#32;==&#32;0)&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gps__collector_8cpp_1af2b979012abe80d338fef98209f87b78">nmea_data</link>.updateRmcTokens(tokens);
<anchor xml:id="_gps__collector_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;RMC&#32;data&#32;received!&quot;</emphasis>);
<anchor xml:id="_gps__collector_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(message.c_str());
<anchor xml:id="_gps__collector_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(message.find(<emphasis role="stringliteral">&quot;$GPGGA&quot;</emphasis>)&#32;==&#32;0)&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gps__collector_8cpp_1af2b979012abe80d338fef98209f87b78">nmea_data</link>.updateGgaTokens(tokens);
<anchor xml:id="_gps__collector_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;GGA&#32;data&#32;received!&quot;</emphasis>);
<anchor xml:id="_gps__collector_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(message.c_str());
<anchor xml:id="_gps__collector_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__collector_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__collector_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Append&#32;to&#32;buffer</emphasis>
<anchor xml:id="_gps__collector_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(raw_data_index&#32;&lt;&#32;<link linkend="_gps__collector_8cpp_1a72dde6c82b28027b8cc37e6a827306a7">MAX_RAW_DATA_LENGTH</link>&#32;-&#32;1)&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw_data_buffer[raw_data_index++]&#32;=&#32;c;
<anchor xml:id="_gps__collector_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_gps__collector_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;GPS&#32;data&#32;overflow!&quot;</emphasis>);
<anchor xml:id="_gps__collector_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw_data_index&#32;=&#32;0;
<anchor xml:id="_gps__collector_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__collector_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__collector_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="_gps__collector_8cpp_source_1l00065"/>00065 }
</programlisting></section>
