<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_receive_8cpp_source" xml:lang="en-US">
<title>receive.cpp</title>
<indexterm><primary>frame_model/receive.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_receive_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_communication_8h">communication.h</link>&quot;</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00002"/>00002 
<anchor xml:id="_receive_8cpp_source_1l00003"/><link linkend="_communication_8h_1a54817002e33761dc61558b1138749dfb">00003</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_receive_8cpp_1a54817002e33761dc61558b1138749dfb">onReceive</link>(<emphasis role="keywordtype">int</emphasis>&#32;packetSize)&#32;{
<anchor xml:id="_receive_8cpp_source_1l00004"/>00004 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(packetSize&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_receive_8cpp_source_1l00005"/>00005 
<anchor xml:id="_receive_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[256];
<anchor xml:id="_receive_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bytesRead&#32;=&#32;0;
<anchor xml:id="_receive_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__lo_ra-_r_p2040_8cpp_1af4db0e30d2909faa29355167719f196c">LoRa</link>.available()&#32;&amp;&amp;&#32;bytesRead&#32;&lt;&#32;packetSize)&#32;{
<anchor xml:id="_receive_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[bytesRead++]&#32;=&#32;<link linkend="__lo_ra-_r_p2040_8cpp_1af4db0e30d2909faa29355167719f196c">LoRa</link>.read();
<anchor xml:id="_receive_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;}
<anchor xml:id="_receive_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Extract&#32;LoRa&#32;metadata</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;uint8_t&#32;receivedDestination&#32;=&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[0];
<anchor xml:id="_receive_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;uint8_t&#32;receivedLocalAddress&#32;=&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[1];
<anchor xml:id="_receive_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Validate&#32;metadata&#32;(optional,&#32;for&#32;security)</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(receivedDestination&#32;!=&#32;<link linkend="_pin__config_8cpp_1a91a4799f60e5d2bbf7a0ee600912f51f">localAddress</link>)&#32;{
<anchor xml:id="_receive_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Error:&#32;Destination&#32;address&#32;mismatch!&quot;</emphasis>);
<anchor xml:id="_receive_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_receive_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="_receive_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(receivedLocalAddress&#32;!=&#32;<link linkend="_pin__config_8cpp_1a42676c2cae17bc2fa151feea9e192342">destination</link>)&#32;{
<anchor xml:id="_receive_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Error:&#32;Local&#32;address&#32;mismatch!&quot;</emphasis>);
<anchor xml:id="_receive_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_receive_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;}
<anchor xml:id="_receive_8cpp_source_1l00027"/>00027 
<anchor xml:id="_receive_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;the&#32;starting&#32;index&#32;of&#32;the&#32;actual&#32;frame&#32;data</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;startIndex&#32;=&#32;2;&#32;<emphasis role="comment">//&#32;Start&#32;after&#32;the&#32;metadata</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Extract&#32;the&#32;frame&#32;data</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;std::string&#32;received&#32;=&#32;std::string(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keywordtype">char</emphasis>*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>&#32;+&#32;startIndex),&#32;bytesRead&#32;-&#32;startIndex);
<anchor xml:id="_receive_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(received.empty())&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_receive_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Debug:&#32;Print&#32;raw&#32;hex&#32;values</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;std::stringstream&#32;hexDump;
<anchor xml:id="_receive_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;hexDump&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Raw&#32;bytes:&#32;&quot;</emphasis>;
<anchor xml:id="_receive_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bytesRead;&#32;i++)&#32;{
<anchor xml:id="_receive_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hexDump&#32;&lt;&lt;&#32;std::hex&#32;&lt;&lt;&#32;std::setfill(<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&lt;&lt;&#32;std::setw(2)&#32;
<anchor xml:id="_receive_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>[i])&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>;
<anchor xml:id="_receive_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="_receive_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(hexDump.str());
<anchor xml:id="_receive_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;frame&#32;boundaries</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;headerPos&#32;=&#32;received.find(<link linkend="_protocol_8h_1aa6688ce7f01167c4ecb45cc4c741cca0">FRAME_BEGIN</link>);
<anchor xml:id="_receive_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;footerPos&#32;=&#32;received.find(<link linkend="_protocol_8h_1a38fcd5426cc3ba27b4260e4db4299072">FRAME_END</link>);
<anchor xml:id="_receive_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;
<anchor xml:id="_receive_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(headerPos&#32;!=&#32;std::string::npos&#32;&amp;&amp;&#32;footerPos&#32;!=&#32;std::string::npos&#32;&amp;&amp;&#32;footerPos&#32;&gt;&#32;headerPos)&#32;{
<anchor xml:id="_receive_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Extract&#32;frame&#32;between&#32;header&#32;and&#32;footer</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;frameData&#32;=&#32;received.substr(headerPos,&#32;footerPos&#32;+&#32;<link linkend="_protocol_8h_1a38fcd5426cc3ba27b4260e4db4299072">FRAME_END</link>.length()&#32;-&#32;headerPos);
<anchor xml:id="_receive_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Extracted&#32;frame&#32;(length=&quot;</emphasis>&#32;+&#32;std::to_string(frameData.length())&#32;+&#32;<emphasis role="stringliteral">&quot;):&#32;&quot;</emphasis>&#32;+&#32;frameData);
<anchor xml:id="_receive_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_communication_8h_1a8b9407b2f579031cf4b705f1ac03ac31">processFrameData</link>(frameData);
<anchor xml:id="_receive_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_receive_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;No&#32;valid&#32;frame&#32;found&#32;in&#32;received&#32;data&quot;</emphasis>);
<anchor xml:id="_receive_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="_receive_8cpp_source_1l00057"/>00057 }
<anchor xml:id="_receive_8cpp_source_1l00058"/>00058 
<anchor xml:id="_receive_8cpp_source_1l00059"/><link linkend="_communication_8h_1ac5e175a6a1482f700f9aee0b727b924f">00059</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_receive_8cpp_1ac5e175a6a1482f700f9aee0b727b924f">handleUartInput</link>()&#32;{
<anchor xml:id="_receive_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;std::string&#32;uartBuffer;&#32;<emphasis role="comment">//&#32;Static&#32;buffer&#32;to&#32;store&#32;UART&#32;input</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00061"/>00061 
<anchor xml:id="_receive_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(uart_is_readable(<link linkend="_pin__config_8h_1a1c9052d1656e86f50326fd275c54ca67">DEBUG_UART_PORT</link>))&#32;{
<anchor xml:id="_receive_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c&#32;=&#32;uart_getc(<link linkend="_pin__config_8h_1a1c9052d1656e86f50326fd275c54ca67">DEBUG_UART_PORT</link>);
<anchor xml:id="_receive_8cpp_source_1l00064"/>00064 
<anchor xml:id="_receive_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>&#32;||&#32;c&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>)&#32;{
<anchor xml:id="_receive_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706">uartPrint</link>(<emphasis role="stringliteral">&quot;Received&#32;UART&#32;string:&#32;&quot;</emphasis>&#32;+&#32;uartBuffer);
<anchor xml:id="_receive_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_communication_8h_1a8b9407b2f579031cf4b705f1ac03ac31">processFrameData</link>(uartBuffer);&#32;<emphasis role="comment">//&#32;Process&#32;the&#32;data</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uartBuffer.clear();&#32;<emphasis role="comment">//&#32;Clear&#32;the&#32;buffer&#32;for&#32;the&#32;next&#32;input</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_receive_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Append&#32;the&#32;character&#32;to&#32;the&#32;buffer</emphasis>
<anchor xml:id="_receive_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uartBuffer&#32;+=&#32;c;
<anchor xml:id="_receive_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_receive_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;}
<anchor xml:id="_receive_8cpp_source_1l00074"/>00074 }
</programlisting></section>
