<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_storage_8h_source" xml:lang="en-US">
<title>storage.h</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_storage_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;STORAGE_H</emphasis>
<anchor xml:id="_storage_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;STORAGE_H</emphasis>
<anchor xml:id="_storage_8h_source_1l00003"/>00003 
<anchor xml:id="_storage_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_storage_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_storage_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;hardware/clocks.h&gt;</emphasis>
<anchor xml:id="_storage_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;hardware/flash.h&gt;</emphasis>
<anchor xml:id="_storage_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;blockdevice/flash.h&quot;</emphasis>
<anchor xml:id="_storage_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;blockdevice/sd.h&quot;</emphasis>
<anchor xml:id="_storage_8h_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;filesystem/littlefs.h&quot;</emphasis>
<anchor xml:id="_storage_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;filesystem/vfs.h&quot;</emphasis>
<anchor xml:id="_storage_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_pin__config_8h">pin_config.h</link>&quot;</emphasis>
<anchor xml:id="_storage_8h_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;lfs.h&quot;</emphasis>&#32;
<anchor xml:id="_storage_8h_source_1l00014"/>00014 
<anchor xml:id="_storage_8h_source_1l00015"/><link linkend="_struct_file_handle">00015</link> <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_file_handle">FileHandle</link>&#32;{
<anchor xml:id="_storage_8h_source_1l00016"/><link linkend="_struct_file_handle_1afc2bbe66c168d4d264f3af1ec037b122">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_file_handle_1afc2bbe66c168d4d264f3af1ec037b122">fd</link>;
<anchor xml:id="_storage_8h_source_1l00017"/><link linkend="_struct_file_handle_1a1c2451d05e2d2937da92fe194e9281cf">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_file_handle_1a1c2451d05e2d2937da92fe194e9281cf">is_open</link>;
<anchor xml:id="_storage_8h_source_1l00018"/>00018 };
<anchor xml:id="_storage_8h_source_1l00019"/>00019 
<anchor xml:id="_storage_8h_source_1l00020"/>00020 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_storage_8h_1afb19e37469a751aa61de3dcd0c70b4b0">fs_init</link>(<emphasis role="keywordtype">void</emphasis>);
<anchor xml:id="_storage_8h_source_1l00021"/>00021 <link linkend="_struct_file_handle">FileHandle</link>&#32;<link linkend="_storage_8h_1a921d0d7089c0c7731762035e7feeb27a">fs_open_file</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filename,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;mode);
<anchor xml:id="_storage_8h_source_1l00022"/>00022 ssize_t&#32;<link linkend="_storage_8h_1aab35cc4af25dd4a32624e51bf0fcda5b">fs_write_file</link>(<link linkend="_struct_file_handle">FileHandle</link>&amp;&#32;handle,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size);
<anchor xml:id="_storage_8h_source_1l00023"/>00023 ssize_t&#32;<link linkend="_storage_8h_1a259e40f946e1178329ed6cdf18c35b0c">fs_read_file</link>(<link linkend="_struct_file_handle">FileHandle</link>&amp;&#32;handle,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62">buffer</link>,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size);
<anchor xml:id="_storage_8h_source_1l00024"/>00024 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_storage_8h_1a1ed8daa820da91b458072334ecec9618">fs_close_file</link>(<link linkend="_struct_file_handle">FileHandle</link>&amp;&#32;handle);
<anchor xml:id="_storage_8h_source_1l00025"/>00025 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_storage_8h_1a4d0e5bbd1f57f47164521ca84c8e6fd1">fs_file_exists</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;filename);
<anchor xml:id="_storage_8h_source_1l00026"/>00026 
<anchor xml:id="_storage_8h_source_1l00027"/>00027 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_storage_8h_source_1l00028"/>00028 
<anchor xml:id="_storage_8h_source_1l00029"/>00029 <emphasis role="comment">//&#32;void&#32;example_file_operations()&#32;{</emphasis>
<anchor xml:id="_storage_8h_source_1l00030"/>00030 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;Open&#32;a&#32;file&#32;for&#32;writing</emphasis>
<anchor xml:id="_storage_8h_source_1l00031"/>00031 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;FileHandle&#32;log_file&#32;=&#32;fs_open_file(&quot;/log.txt&quot;,&#32;&quot;w&quot;);</emphasis>
<anchor xml:id="_storage_8h_source_1l00032"/>00032 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;if&#32;(!log_file.is_open)&#32;{</emphasis>
<anchor xml:id="_storage_8h_source_1l00033"/>00033 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uartPrint(&quot;Failed&#32;to&#32;open&#32;log&#32;file&quot;);</emphasis>
<anchor xml:id="_storage_8h_source_1l00034"/>00034 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return;</emphasis>
<anchor xml:id="_storage_8h_source_1l00035"/>00035 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_storage_8h_source_1l00036"/>00036 
<anchor xml:id="_storage_8h_source_1l00037"/>00037 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;Write&#32;some&#32;data</emphasis>
<anchor xml:id="_storage_8h_source_1l00038"/>00038 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;const&#32;char*&#32;message&#32;=&#32;&quot;Hello,&#32;World!\n&quot;;</emphasis>
<anchor xml:id="_storage_8h_source_1l00039"/>00039 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;ssize_t&#32;written&#32;=&#32;fs_write_file(log_file,&#32;message,&#32;strlen(message));</emphasis>
<anchor xml:id="_storage_8h_source_1l00040"/>00040 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;if&#32;(written&#32;&lt;&#32;0)&#32;{</emphasis>
<anchor xml:id="_storage_8h_source_1l00041"/>00041 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uartPrint(&quot;Failed&#32;to&#32;write&#32;to&#32;log&#32;file&quot;);</emphasis>
<anchor xml:id="_storage_8h_source_1l00042"/>00042 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_storage_8h_source_1l00043"/>00043 
<anchor xml:id="_storage_8h_source_1l00044"/>00044 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;Close&#32;the&#32;file</emphasis>
<anchor xml:id="_storage_8h_source_1l00045"/>00045 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;fs_close_file(log_file);</emphasis>
<anchor xml:id="_storage_8h_source_1l00046"/>00046 
<anchor xml:id="_storage_8h_source_1l00047"/>00047 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;Open&#32;file&#32;for&#32;reading</emphasis>
<anchor xml:id="_storage_8h_source_1l00048"/>00048 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;log_file&#32;=&#32;fs_open_file(&quot;/log.txt&quot;,&#32;&quot;r&quot;);</emphasis>
<anchor xml:id="_storage_8h_source_1l00049"/>00049 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;if&#32;(!log_file.is_open)&#32;{</emphasis>
<anchor xml:id="_storage_8h_source_1l00050"/>00050 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uartPrint(&quot;Failed&#32;to&#32;open&#32;log&#32;file&#32;for&#32;reading&quot;);</emphasis>
<anchor xml:id="_storage_8h_source_1l00051"/>00051 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return;</emphasis>
<anchor xml:id="_storage_8h_source_1l00052"/>00052 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_storage_8h_source_1l00053"/>00053 
<anchor xml:id="_storage_8h_source_1l00054"/>00054 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;Read&#32;the&#32;data</emphasis>
<anchor xml:id="_storage_8h_source_1l00055"/>00055 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;char&#32;buffer[128];</emphasis>
<anchor xml:id="_storage_8h_source_1l00056"/>00056 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;ssize_t&#32;bytes_read&#32;=&#32;fs_read_file(log_file,&#32;buffer,&#32;sizeof(buffer)&#32;-&#32;1);</emphasis>
<anchor xml:id="_storage_8h_source_1l00057"/>00057 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;if&#32;(bytes_read&#32;&gt;&#32;0)&#32;{</emphasis>
<anchor xml:id="_storage_8h_source_1l00058"/>00058 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[bytes_read]&#32;=&#32;&apos;\0&apos;;&#32;&#32;//&#32;Null&#32;terminate&#32;the&#32;string</emphasis>
<anchor xml:id="_storage_8h_source_1l00059"/>00059 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uartPrint(buffer);</emphasis>
<anchor xml:id="_storage_8h_source_1l00060"/>00060 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_storage_8h_source_1l00061"/>00061 
<anchor xml:id="_storage_8h_source_1l00062"/>00062 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;Close&#32;the&#32;file</emphasis>
<anchor xml:id="_storage_8h_source_1l00063"/>00063 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;fs_close_file(log_file);</emphasis>
<anchor xml:id="_storage_8h_source_1l00064"/>00064 <emphasis role="comment">//&#32;}</emphasis>
</programlisting></section>
