<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_power_manager_8cpp" kind="file" language="C++">
    <compoundname>PowerManager.cpp</compoundname>
    <includes refid="_power_manager_8h" local="yes">PowerManager.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="3">
        <label>INA3221.h</label>
        <link refid="_i_n_a3221_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/PowerManager/PowerManager.cpp</label>
        <link refid="_power_manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>PowerManager.h</label>
        <link refid="_power_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hardware/i2c.h</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="9">
        <label>pico/stdlib.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_power_manager_8h" kindref="compound">PowerManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_power_manager_1aa9ea91634936a20fb03d65ff8878867e" refkind="member"><highlight class="normal"><ref refid="class_power_manager_1aa9ea91634936a20fb03d65ff8878867e" kindref="member">PowerManager::PowerManager</ref>(i2c_inst_t*<sp/>i2c)<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>(<ref refid="_i_n_a3221_8h_1a5d97d22d72d02c98567c354e0b7292e3a29c59874691b910ca1b4cf0db639d190" kindref="member">INA3221_ADDR40_GND</ref>,<sp/>i2c)<sp/>{};</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_power_manager_1a217939b880543bfff917203a06d45258" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a217939b880543bfff917203a06d45258" kindref="member">PowerManager::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref><sp/>=<sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.begin();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_power_manager_1a885c7374cb22e940ef77c0453da5f622" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_power_manager_1a885c7374cb22e940ef77c0453da5f622" kindref="member">PowerManager::readIDs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;noinit&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>MAN<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MAN<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getManufID());</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>DIE<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DIE<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getDieID());</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MAN<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>DIE;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_power_manager_1af0d877a74a39cf29cb94d34088641ff9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1af0d877a74a39cf29cb94d34088641ff9" kindref="member">PowerManager::getVoltageBattery</ref>()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getVoltage(<ref refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa57c4b6d263813c631c0e16b25fb4a9b8" kindref="member">INA3221_CH1</ref>);<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd" kindref="member">PowerManager::getVoltage5V</ref>()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getVoltage(<ref refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa6653233d1fbdb16cd3c13a663390cc43" kindref="member">INA3221_CH2</ref>);<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_power_manager_1a3f9587ee81469642a2e595ef3805e801" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a3f9587ee81469642a2e595ef3805e801" kindref="member">PowerManager::getCurrentChargeUSB</ref>()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getCurrent_mA(<ref refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa57c4b6d263813c631c0e16b25fb4a9b8" kindref="member">INA3221_CH1</ref>);<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_power_manager_1a1ebc18dd508b23614c4c7193fbddd962" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a1ebc18dd508b23614c4c7193fbddd962" kindref="member">PowerManager::getCurrentDraw</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getCurrent_mA(<ref refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa6653233d1fbdb16cd3c13a663390cc43" kindref="member">INA3221_CH2</ref>);<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a" kindref="member">PowerManager::getCurrentChargeSolar</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getCurrent_mA(<ref refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa4811f2dc226094ec0e19766fb12b5657" kindref="member">INA3221_CH3</ref>);<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_power_manager_1acad2f0f2daff3bd609952530d202c78b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1acad2f0f2daff3bd609952530d202c78b" kindref="member">PowerManager::getCurrentChargeTotal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getCurrent_mA(<ref refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa57c4b6d263813c631c0e16b25fb4a9b8" kindref="member">INA3221_CH1</ref>)<sp/>+<sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.getCurrent_mA(<ref refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa4811f2dc226094ec0e19766fb12b5657" kindref="member">INA3221_CH3</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_power_manager_1ae61a45a190d5293029e17c751f88bcd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1ae61a45a190d5293029e17c751f88bcd0" kindref="member">PowerManager::configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.find(</highlight><highlight class="stringliteral">&quot;operating_mode&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>config.end())<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.at(</highlight><highlight class="stringliteral">&quot;operating_mode&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;continuous&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.setModeContinious();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.find(</highlight><highlight class="stringliteral">&quot;averaging_mode&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>config.end())<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avg_mode<sp/>=<sp/>std::stoi(config.at(</highlight><highlight class="stringliteral">&quot;averaging_mode&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(avg_mode)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.setAveragingMode(<ref refid="_i_n_a3221_8h_1ac7b201fe7943ec52b4c0ff76fedbeac4adac1d016625c65a7a80917b957d20f66" kindref="member">INA3221_REG_CONF_AVG_1</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.setAveragingMode(<ref refid="_i_n_a3221_8h_1ac7b201fe7943ec52b4c0ff76fedbeac4a254263a9a481b85fdb243fe2bdc3d19c" kindref="member">INA3221_REG_CONF_AVG_4</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.setAveragingMode(<ref refid="_i_n_a3221_8h_1ac7b201fe7943ec52b4c0ff76fedbeac4aedf822a654995d30fc6fe4ae1db374d2" kindref="member">INA3221_REG_CONF_AVG_16</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" kindref="member">ina3221</ref>.setAveragingMode(<ref refid="_i_n_a3221_8h_1ac7b201fe7943ec52b4c0ff76fedbeac4aedf822a654995d30fc6fe4ae1db374d2" kindref="member">INA3221_REG_CONF_AVG_16</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083" kindref="member">PowerManager::isSolarActive</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a" kindref="member">getCurrentChargeSolar</ref>()<sp/>&gt;<sp/><ref refid="class_power_manager_1aeb488c42ec47e1a8de0446717d339cce" kindref="member">SOLAR_CURRENT_THRESHOLD</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8" kindref="member">PowerManager::isUSBConnected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_power_manager_1a3f9587ee81469642a2e595ef3805e801" kindref="member">getCurrentChargeUSB</ref>()<sp/>&gt;<sp/><ref refid="class_power_manager_1afc4246cc3b434053c59cf2dcccf4bc64" kindref="member">USB_CURRENT_THRESHOLD</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/PowerManager/PowerManager.cpp"/>
  </compounddef>
</doxygen>
