<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_event_manager" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>EventManager</compoundname>
    <derivedcompoundref refid="class_event_manager_impl" prot="public" virt="non-virtual">EventManagerImpl</derivedcompoundref>
    <includes refid="event__manager_8h" local="no">event_manager.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_event_manager_1a9d82f66074e141f352bb852654673536" prot="protected" static="no" mutable="no">
        <type><ref refid="class_event_log" kindref="compound">EventLog</ref></type>
        <definition>EventLog EventManager::events[EVENT_BUFFER_SIZE]</definition>
        <argsstring>[EVENT_BUFFER_SIZE]</argsstring>
        <name>events</name>
        <qualifiedname>EventManager::events</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="111" column="14" bodyfile="event_manager.h" bodystart="111" bodyend="-1"/>
        <referencedby refid="class_event_manager_1a00648cfe8c39fbd59cc4c593113e5573" compoundref="event__manager_8cpp" startline="56" endline="71">getEvent</referencedby>
        <referencedby refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" compoundref="event__manager_8cpp" startline="28" endline="54">logEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_manager_1ab74418c8064525f34692dff74dd28d82" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t EventManager::eventCount</definition>
        <argsstring></argsstring>
        <name>eventCount</name>
        <qualifiedname>EventManager::eventCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="112" column="12" bodyfile="event_manager.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="class_event_manager_1a89099b22114f158b5c530edfea52371d" compoundref="event__manager_8h" startline="87" endline="94">EventManager</referencedby>
        <referencedby refid="class_event_manager_1a00648cfe8c39fbd59cc4c593113e5573" compoundref="event__manager_8cpp" startline="56" endline="71">getEvent</referencedby>
        <referencedby refid="class_event_manager_1abd8630355ef48f46c5286f232adb5993" compoundref="event__manager_8h" startline="105" endline="105">getEventCount</referencedby>
        <referencedby refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" compoundref="event__manager_8cpp" startline="28" endline="54">logEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_manager_1ad97f788895da6e30b3237982a7bcd810" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t EventManager::writeIndex</definition>
        <argsstring></argsstring>
        <name>writeIndex</name>
        <qualifiedname>EventManager::writeIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="113" column="12" bodyfile="event_manager.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="class_event_manager_1a89099b22114f158b5c530edfea52371d" compoundref="event__manager_8h" startline="87" endline="94">EventManager</referencedby>
        <referencedby refid="class_event_manager_1a00648cfe8c39fbd59cc4c593113e5573" compoundref="event__manager_8cpp" startline="56" endline="71">getEvent</referencedby>
        <referencedby refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" compoundref="event__manager_8cpp" startline="28" endline="54">logEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_manager_1a970381a54ae432d262830ad74048c94e" prot="protected" static="no" mutable="no">
        <type>mutex_t</type>
        <definition>mutex_t EventManager::eventMutex</definition>
        <argsstring></argsstring>
        <name>eventMutex</name>
        <qualifiedname>EventManager::eventMutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="114" column="13" bodyfile="event_manager.h" bodystart="114" bodyend="-1"/>
        <referencedby refid="class_event_manager_1a89099b22114f158b5c530edfea52371d" compoundref="event__manager_8h" startline="87" endline="94">EventManager</referencedby>
        <referencedby refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" compoundref="event__manager_8cpp" startline="28" endline="54">logEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_manager_1a31b1b079c272a1d7022ed84b01927186" prot="protected" static="no" mutable="no">
        <type>volatile uint16_t</type>
        <definition>volatile uint16_t EventManager::nextEventId</definition>
        <argsstring></argsstring>
        <name>nextEventId</name>
        <qualifiedname>EventManager::nextEventId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="115" column="23" bodyfile="event_manager.h" bodystart="115" bodyend="-1"/>
        <referencedby refid="class_event_manager_1a89099b22114f158b5c530edfea52371d" compoundref="event__manager_8h" startline="87" endline="94">EventManager</referencedby>
        <referencedby refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" compoundref="event__manager_8cpp" startline="28" endline="54">logEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_manager_1aed2eb3a8bc611f5594eb62304c7b4754" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EventManager::needsPersistence</definition>
        <argsstring></argsstring>
        <name>needsPersistence</name>
        <qualifiedname>EventManager::needsPersistence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="116" column="10" bodyfile="event_manager.h" bodystart="116" bodyend="-1"/>
        <referencedby refid="class_event_manager_1a89099b22114f158b5c530edfea52371d" compoundref="event__manager_8h" startline="87" endline="94">EventManager</referencedby>
        <referencedby refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" compoundref="event__manager_8cpp" startline="28" endline="54">logEvent</referencedby>
        <referencedby refid="class_event_manager_impl_1a8bd15b8b1b4d2439740934f087d97f98" compoundref="event__manager_8h" startline="125" endline="129">EventManagerImpl::saveToStorage</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_event_manager_1a89099b22114f158b5c530edfea52371d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>EventManager::EventManager</definition>
        <argsstring>()</argsstring>
        <name>EventManager</name>
        <qualifiedname>EventManager::EventManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="87" column="9" bodyfile="event_manager.h" bodystart="87" bodyend="94"/>
        <references refid="class_event_manager_1ab74418c8064525f34692dff74dd28d82" compoundref="event__manager_8h" startline="112">eventCount</references>
        <references refid="class_event_manager_1a970381a54ae432d262830ad74048c94e" compoundref="event__manager_8h" startline="114">eventMutex</references>
        <references refid="class_event_manager_1aed2eb3a8bc611f5594eb62304c7b4754" compoundref="event__manager_8h" startline="116">needsPersistence</references>
        <references refid="class_event_manager_1a31b1b079c272a1d7022ed84b01927186" compoundref="event__manager_8h" startline="115">nextEventId</references>
        <references refid="class_event_manager_1ad97f788895da6e30b3237982a7bcd810" compoundref="event__manager_8h" startline="113">writeIndex</references>
      </memberdef>
      <memberdef kind="function" id="class_event_manager_1ade6acde43327a4e792bb8256dd6350f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual EventManager::~EventManager</definition>
        <argsstring>()=default</argsstring>
        <name>~EventManager</name>
        <qualifiedname>EventManager::~EventManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="96" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_event_manager_1ab9c4d0fbfc9cf7743eac02bee6223728" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void EventManager::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>EventManager::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="99" column="18" bodyfile="event_manager.h" bodystart="99" bodyend="101"/>
        <references refid="class_event_manager_1a6722258e4e3df939224d07786427afc9">loadFromStorage</references>
        <referencedby refid="class_event_manager_impl_1a07861026e9c06832168372f64e958073" compoundref="event__manager_8h" startline="121" endline="123">EventManagerImpl::EventManagerImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EventManager::logEvent</definition>
        <argsstring>(uint8_t group, uint8_t event)</argsstring>
        <name>logEvent</name>
        <qualifiedname>EventManager::logEvent</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>group</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="103" column="10" bodyfile="event_manager.cpp" bodystart="28" bodyend="54"/>
        <references refid="event__manager_8h_1aeef6900f411bc223febdd92c9435693b" compoundref="event__manager_8h" startline="4">event</references>
        <references refid="class_event_log_1a4ba1b6d820bf66740aac49fd299f1ea2" compoundref="event__manager_8h" startline="74">EventLog::event</references>
        <references refid="event__manager_8h_1acc4dda1aaabc9862fe79fd94e0b722bf" compoundref="event__manager_8h" startline="9">EVENT_BUFFER_SIZE</references>
        <references refid="class_event_manager_1ab74418c8064525f34692dff74dd28d82" compoundref="event__manager_8h" startline="112">eventCount</references>
        <references refid="class_event_manager_1a970381a54ae432d262830ad74048c94e" compoundref="event__manager_8h" startline="114">eventMutex</references>
        <references refid="class_event_manager_1a9d82f66074e141f352bb852654673536" compoundref="event__manager_8h" startline="111">events</references>
        <references refid="class_event_log_1a5209ffdb8dc4bf7f87f3ec44b2ae63e3" compoundref="event__manager_8h" startline="73">EventLog::group</references>
        <references refid="event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741" compoundref="event__manager_8h" startline="3">group</references>
        <references refid="class_event_log_1a5e0923e12450e6b7c782c7f6630f4563" compoundref="event__manager_8h" startline="71">EventLog::id</references>
        <references refid="class_event_manager_1aed2eb3a8bc611f5594eb62304c7b4754" compoundref="event__manager_8h" startline="116">needsPersistence</references>
        <references refid="class_event_manager_1a31b1b079c272a1d7022ed84b01927186" compoundref="event__manager_8h" startline="115">nextEventId</references>
        <references refid="event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7ac9c9c146c630ca5ef9197c73c032f4a6" compoundref="event__manager_8h" startline="14">POWER</references>
        <references refid="event__manager_8h_1a8b04683add0105a3bf3200eee3d9d3e6a8700d6b962e860d93b3c89489b9aac21" compoundref="event__manager_8h" startline="33">POWER_FALLING</references>
        <references refid="class_event_manager_1ad369ac9b7ab0251070e0075745836a40">saveToStorage</references>
        <references refid="clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</references>
        <references refid="class_event_log_1aea248a425dedf15b5cee31ce2884db40" compoundref="event__manager_8h" startline="72">EventLog::timestamp</references>
        <references refid="class_event_log_1adb17c412276c8678289395607c493e7e" compoundref="event__manager_8h" startline="76" endline="82">EventLog::toString</references>
        <references refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</references>
        <references refid="class_event_manager_1ad97f788895da6e30b3237982a7bcd810" compoundref="event__manager_8h" startline="113">writeIndex</references>
      </memberdef>
      <memberdef kind="function" id="class_event_manager_1a00648cfe8c39fbd59cc4c593113e5573" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_event_log" kindref="compound">EventLog</ref> &amp;</type>
        <definition>const EventLog &amp; EventManager::getEvent</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>getEvent</name>
        <qualifiedname>EventManager::getEvent</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="104" column="20" bodyfile="event_manager.cpp" bodystart="56" bodyend="71"/>
        <references refid="event__manager_8h_1acc4dda1aaabc9862fe79fd94e0b722bf" compoundref="event__manager_8h" startline="9">EVENT_BUFFER_SIZE</references>
        <references refid="class_event_manager_1ab74418c8064525f34692dff74dd28d82" compoundref="event__manager_8h" startline="112">eventCount</references>
        <references refid="class_event_manager_1a9d82f66074e141f352bb852654673536" compoundref="event__manager_8h" startline="111">events</references>
        <references refid="class_event_manager_1ad97f788895da6e30b3237982a7bcd810" compoundref="event__manager_8h" startline="113">writeIndex</references>
      </memberdef>
      <memberdef kind="function" id="class_event_manager_1abd8630355ef48f46c5286f232adb5993" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t EventManager::getEventCount</definition>
        <argsstring>() const</argsstring>
        <name>getEventCount</name>
        <qualifiedname>EventManager::getEventCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="105" column="12" bodyfile="event_manager.h" bodystart="105" bodyend="105"/>
        <references refid="class_event_manager_1ab74418c8064525f34692dff74dd28d82" compoundref="event__manager_8h" startline="112">eventCount</references>
      </memberdef>
      <memberdef kind="function" id="class_event_manager_1ad369ac9b7ab0251070e0075745836a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool EventManager::saveToStorage</definition>
        <argsstring>()=0</argsstring>
        <name>saveToStorage</name>
        <qualifiedname>EventManager::saveToStorage</qualifiedname>
        <reimplementedby refid="class_event_manager_impl_1a8bd15b8b1b4d2439740934f087d97f98">saveToStorage</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="107" column="18"/>
        <referencedby refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" compoundref="event__manager_8cpp" startline="28" endline="54">logEvent</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_event_manager_1a6722258e4e3df939224d07786427afc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool EventManager::loadFromStorage</definition>
        <argsstring>()=0</argsstring>
        <name>loadFromStorage</name>
        <qualifiedname>EventManager::loadFromStorage</qualifiedname>
        <reimplementedby refid="class_event_manager_impl_1ada54a3fd8ad03891318e203ad0a82155">loadFromStorage</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="event_manager.h" line="108" column="18"/>
        <referencedby refid="class_event_manager_1ab9c4d0fbfc9cf7743eac02bee6223728" compoundref="event__manager_8h" startline="99" endline="101">init</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>EventManager</label>
        <link refid="class_event_manager"/>
      </node>
      <node id="2">
        <label>EventManagerImpl</label>
        <link refid="class_event_manager_impl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>EventLog</label>
        <link refid="class_event_log"/>
      </node>
      <node id="1">
        <label>EventManager</label>
        <link refid="class_event_manager"/>
        <childnode refid="2" relation="usage">
          <edgelabel>events</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="event_manager.h" line="85" column="1" bodyfile="event_manager.h" bodystart="85" bodyend="117"/>
    <listofallmembers>
      <member refid="class_event_manager_1ab74418c8064525f34692dff74dd28d82" prot="protected" virt="non-virtual"><scope>EventManager</scope><name>eventCount</name></member>
      <member refid="class_event_manager_1a89099b22114f158b5c530edfea52371d" prot="public" virt="non-virtual"><scope>EventManager</scope><name>EventManager</name></member>
      <member refid="class_event_manager_1a970381a54ae432d262830ad74048c94e" prot="protected" virt="non-virtual"><scope>EventManager</scope><name>eventMutex</name></member>
      <member refid="class_event_manager_1a9d82f66074e141f352bb852654673536" prot="protected" virt="non-virtual"><scope>EventManager</scope><name>events</name></member>
      <member refid="class_event_manager_1a00648cfe8c39fbd59cc4c593113e5573" prot="public" virt="non-virtual"><scope>EventManager</scope><name>getEvent</name></member>
      <member refid="class_event_manager_1abd8630355ef48f46c5286f232adb5993" prot="public" virt="non-virtual"><scope>EventManager</scope><name>getEventCount</name></member>
      <member refid="class_event_manager_1ab9c4d0fbfc9cf7743eac02bee6223728" prot="public" virt="virtual"><scope>EventManager</scope><name>init</name></member>
      <member refid="class_event_manager_1a6722258e4e3df939224d07786427afc9" prot="public" virt="pure-virtual"><scope>EventManager</scope><name>loadFromStorage</name></member>
      <member refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" prot="public" virt="non-virtual"><scope>EventManager</scope><name>logEvent</name></member>
      <member refid="class_event_manager_1aed2eb3a8bc611f5594eb62304c7b4754" prot="protected" virt="non-virtual"><scope>EventManager</scope><name>needsPersistence</name></member>
      <member refid="class_event_manager_1a31b1b079c272a1d7022ed84b01927186" prot="protected" virt="non-virtual"><scope>EventManager</scope><name>nextEventId</name></member>
      <member refid="class_event_manager_1ad369ac9b7ab0251070e0075745836a40" prot="public" virt="pure-virtual"><scope>EventManager</scope><name>saveToStorage</name></member>
      <member refid="class_event_manager_1ad97f788895da6e30b3237982a7bcd810" prot="protected" virt="non-virtual"><scope>EventManager</scope><name>writeIndex</name></member>
      <member refid="class_event_manager_1ade6acde43327a4e792bb8256dd6350f0" prot="public" virt="virtual"><scope>EventManager</scope><name>~EventManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
