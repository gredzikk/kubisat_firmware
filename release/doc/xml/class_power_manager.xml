<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_power_manager" kind="class" language="C++" prot="public">
    <compoundname>PowerManager</compoundname>
    <includes refid="_power_manager_8h" local="no">PowerManager.h</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_power_manager_1aeb488c42ec47e1a8de0446717d339cce" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>float</type>
        <definition>float PowerManager::SOLAR_CURRENT_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>SOLAR_CURRENT_THRESHOLD</name>
        <qualifiedname>PowerManager::SOLAR_CURRENT_THRESHOLD</qualifiedname>
        <initializer>= 50.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="26" column="28" bodyfile="lib/PowerManager/PowerManager.h" bodystart="26" bodyend="-1"/>
        <referencedby refid="class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083" compoundref="_power_manager_8cpp" startline="76" endline="79">isSolarActive</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_power_manager_1afc4246cc3b434053c59cf2dcccf4bc64" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>float</type>
        <definition>float PowerManager::USB_CURRENT_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>USB_CURRENT_THRESHOLD</name>
        <qualifiedname>PowerManager::USB_CURRENT_THRESHOLD</qualifiedname>
        <initializer>= 50.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="27" column="28" bodyfile="lib/PowerManager/PowerManager.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8" compoundref="_power_manager_8cpp" startline="81" endline="84">isUSBConnected</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_power_manager_1a426dcedc762549ed6c408708bd61b94e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>float</type>
        <definition>float PowerManager::VOLTAGE_LOW_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>VOLTAGE_LOW_THRESHOLD</name>
        <qualifiedname>PowerManager::VOLTAGE_LOW_THRESHOLD</qualifiedname>
        <initializer>= 4.7f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="28" column="28" bodyfile="lib/PowerManager/PowerManager.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433" compoundref="event__manager_8cpp" startline="77" endline="140">checkPowerEvents</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_power_manager_1a4e28f40bee3fd8e6df12178663159783" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>float</type>
        <definition>float PowerManager::VOLTAGE_OVERCHARGE_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>VOLTAGE_OVERCHARGE_THRESHOLD</name>
        <qualifiedname>PowerManager::VOLTAGE_OVERCHARGE_THRESHOLD</qualifiedname>
        <initializer>= 5.3f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="29" column="28" bodyfile="lib/PowerManager/PowerManager.h" bodystart="29" bodyend="-1"/>
        <referencedby refid="event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433" compoundref="event__manager_8cpp" startline="77" endline="140">checkPowerEvents</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_power_manager_1aae449340ac8e77b181ef2f0abd2d96ed" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>float</type>
        <definition>float PowerManager::FALL_RATE_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>FALL_RATE_THRESHOLD</name>
        <qualifiedname>PowerManager::FALL_RATE_THRESHOLD</qualifiedname>
        <initializer>= -0.02f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="30" column="28" bodyfile="lib/PowerManager/PowerManager.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_power_manager_1a17e01551bc0f14820b2430d697c4c6d2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>int</type>
        <definition>int PowerManager::FALLING_TREND_REQUIRED</definition>
        <argsstring></argsstring>
        <name>FALLING_TREND_REQUIRED</name>
        <qualifiedname>PowerManager::FALLING_TREND_REQUIRED</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="31" column="26" bodyfile="lib/PowerManager/PowerManager.h" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" prot="private" static="no" mutable="no">
        <type><ref refid="class_i_n_a3221" kindref="compound">INA3221</ref></type>
        <definition>INA3221 PowerManager::ina3221</definition>
        <argsstring></argsstring>
        <name>ina3221</name>
        <qualifiedname>PowerManager::ina3221</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="34" column="13" bodyfile="lib/PowerManager/PowerManager.h" bodystart="34" bodyend="-1"/>
        <referencedby refid="class_power_manager_1ae61a45a190d5293029e17c751f88bcd0" compoundref="_power_manager_8cpp" startline="49" endline="74">configure</referencedby>
        <referencedby refid="class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a" compoundref="_power_manager_8cpp" startline="39" endline="42">getCurrentChargeSolar</referencedby>
        <referencedby refid="class_power_manager_1acad2f0f2daff3bd609952530d202c78b" compoundref="_power_manager_8cpp" startline="44" endline="47">getCurrentChargeTotal</referencedby>
        <referencedby refid="class_power_manager_1a3f9587ee81469642a2e595ef3805e801" compoundref="_power_manager_8cpp" startline="29" endline="32">getCurrentChargeUSB</referencedby>
        <referencedby refid="class_power_manager_1a1ebc18dd508b23614c4c7193fbddd962" compoundref="_power_manager_8cpp" startline="34" endline="37">getCurrentDraw</referencedby>
        <referencedby refid="class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd" compoundref="_power_manager_8cpp" startline="24" endline="27">getVoltage5V</referencedby>
        <referencedby refid="class_power_manager_1af0d877a74a39cf29cb94d34088641ff9" compoundref="_power_manager_8cpp" startline="19" endline="22">getVoltageBattery</referencedby>
        <referencedby refid="class_power_manager_1a217939b880543bfff917203a06d45258" compoundref="_power_manager_8cpp" startline="7" endline="10">initialize</referencedby>
        <referencedby refid="class_power_manager_1aa9ea91634936a20fb03d65ff8878867e" compoundref="_power_manager_8cpp" startline="4" endline="5">PowerManager</referencedby>
        <referencedby refid="class_power_manager_1a885c7374cb22e940ef77c0453da5f622" compoundref="_power_manager_8cpp" startline="12" endline="17">readIDs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PowerManager::initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <qualifiedname>PowerManager::initialized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="35" column="10" bodyfile="lib/PowerManager/PowerManager.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="class_power_manager_1ae61a45a190d5293029e17c751f88bcd0" compoundref="_power_manager_8cpp" startline="49" endline="74">configure</referencedby>
        <referencedby refid="class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a" compoundref="_power_manager_8cpp" startline="39" endline="42">getCurrentChargeSolar</referencedby>
        <referencedby refid="class_power_manager_1acad2f0f2daff3bd609952530d202c78b" compoundref="_power_manager_8cpp" startline="44" endline="47">getCurrentChargeTotal</referencedby>
        <referencedby refid="class_power_manager_1a3f9587ee81469642a2e595ef3805e801" compoundref="_power_manager_8cpp" startline="29" endline="32">getCurrentChargeUSB</referencedby>
        <referencedby refid="class_power_manager_1a1ebc18dd508b23614c4c7193fbddd962" compoundref="_power_manager_8cpp" startline="34" endline="37">getCurrentDraw</referencedby>
        <referencedby refid="class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd" compoundref="_power_manager_8cpp" startline="24" endline="27">getVoltage5V</referencedby>
        <referencedby refid="class_power_manager_1af0d877a74a39cf29cb94d34088641ff9" compoundref="_power_manager_8cpp" startline="19" endline="22">getVoltageBattery</referencedby>
        <referencedby refid="class_power_manager_1a217939b880543bfff917203a06d45258" compoundref="_power_manager_8cpp" startline="7" endline="10">initialize</referencedby>
        <referencedby refid="class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083" compoundref="_power_manager_8cpp" startline="76" endline="79">isSolarActive</referencedby>
        <referencedby refid="class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8" compoundref="_power_manager_8cpp" startline="81" endline="84">isUSBConnected</referencedby>
        <referencedby refid="class_power_manager_1a885c7374cb22e940ef77c0453da5f622" compoundref="_power_manager_8cpp" startline="12" endline="17">readIDs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_power_manager_1a521e99a9e28cca2525988f572379c936" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PowerManager::solarActive</definition>
        <argsstring></argsstring>
        <name>solarActive</name>
        <qualifiedname>PowerManager::solarActive</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="37" column="10" bodyfile="lib/PowerManager/PowerManager.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_power_manager_1a3676187deac57a79034f59f58ac4b746" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PowerManager::usbConnected</definition>
        <argsstring></argsstring>
        <name>usbConnected</name>
        <qualifiedname>PowerManager::usbConnected</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="38" column="10" bodyfile="lib/PowerManager/PowerManager.h" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_power_manager_1aa9ea91634936a20fb03d65ff8878867e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PowerManager::PowerManager</definition>
        <argsstring>(i2c_inst_t *i2c)</argsstring>
        <name>PowerManager</name>
        <qualifiedname>PowerManager::PowerManager</qualifiedname>
        <param>
          <type>i2c_inst_t *</type>
          <declname>i2c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="13" column="5" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="4" bodyend="5"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="_i_n_a3221_8h_1a5d97d22d72d02c98567c354e0b7292e3a29c59874691b910ca1b4cf0db639d190" compoundref="_i_n_a3221_8h" startline="9">INA3221_ADDR40_GND</references>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1a217939b880543bfff917203a06d45258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerManager::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>PowerManager::initialize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="14" column="10" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="7" bodyend="10"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1a885c7374cb22e940ef77c0453da5f622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string PowerManager::readIDs</definition>
        <argsstring>()</argsstring>
        <name>readIDs</name>
        <qualifiedname>PowerManager::readIDs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="15" column="17" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="12" bodyend="17"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PowerManager::getCurrentChargeSolar</definition>
        <argsstring>()</argsstring>
        <name>getCurrentChargeSolar</name>
        <qualifiedname>PowerManager::getCurrentChargeSolar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="16" column="11" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="39" bodyend="42"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa4811f2dc226094ec0e19766fb12b5657" compoundref="_i_n_a3221_8h" startline="19">INA3221_CH3</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
        <referencedby refid="class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083" compoundref="_power_manager_8cpp" startline="76" endline="79">isSolarActive</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1a3f9587ee81469642a2e595ef3805e801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PowerManager::getCurrentChargeUSB</definition>
        <argsstring>()</argsstring>
        <name>getCurrentChargeUSB</name>
        <qualifiedname>PowerManager::getCurrentChargeUSB</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="17" column="11" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="29" bodyend="32"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa57c4b6d263813c631c0e16b25fb4a9b8" compoundref="_i_n_a3221_8h" startline="17">INA3221_CH1</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
        <referencedby refid="class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8" compoundref="_power_manager_8cpp" startline="81" endline="84">isUSBConnected</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1acad2f0f2daff3bd609952530d202c78b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PowerManager::getCurrentChargeTotal</definition>
        <argsstring>()</argsstring>
        <name>getCurrentChargeTotal</name>
        <qualifiedname>PowerManager::getCurrentChargeTotal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="18" column="11" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="44" bodyend="47"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa57c4b6d263813c631c0e16b25fb4a9b8" compoundref="_i_n_a3221_8h" startline="17">INA3221_CH1</references>
        <references refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa4811f2dc226094ec0e19766fb12b5657" compoundref="_i_n_a3221_8h" startline="19">INA3221_CH3</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1a1ebc18dd508b23614c4c7193fbddd962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PowerManager::getCurrentDraw</definition>
        <argsstring>()</argsstring>
        <name>getCurrentDraw</name>
        <qualifiedname>PowerManager::getCurrentDraw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="19" column="11" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="34" bodyend="37"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa6653233d1fbdb16cd3c13a663390cc43" compoundref="_i_n_a3221_8h" startline="18">INA3221_CH2</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1af0d877a74a39cf29cb94d34088641ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PowerManager::getVoltageBattery</definition>
        <argsstring>()</argsstring>
        <name>getVoltageBattery</name>
        <qualifiedname>PowerManager::getVoltageBattery</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="20" column="11" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="19" bodyend="22"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa57c4b6d263813c631c0e16b25fb4a9b8" compoundref="_i_n_a3221_8h" startline="17">INA3221_CH1</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PowerManager::getVoltage5V</definition>
        <argsstring>()</argsstring>
        <name>getVoltage5V</name>
        <qualifiedname>PowerManager::getVoltage5V</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="21" column="11" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="24" bodyend="27"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="_i_n_a3221_8h_1a1e8eddf1a4d7773268dccebc08ea37dfa6653233d1fbdb16cd3c13a663390cc43" compoundref="_i_n_a3221_8h" startline="18">INA3221_CH2</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
        <referencedby refid="event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433" compoundref="event__manager_8cpp" startline="77" endline="140">checkPowerEvents</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1ae61a45a190d5293029e17c751f88bcd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerManager::configure</definition>
        <argsstring>(const std::map&lt; std::string, std::string &gt; &amp;config)</argsstring>
        <name>configure</name>
        <qualifiedname>PowerManager::configure</qualifiedname>
        <param>
          <type>const std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="22" column="10" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="49" bodyend="74"/>
        <references refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" compoundref="_power_manager_8h" startline="34">ina3221</references>
        <references refid="_i_n_a3221_8h_1ac7b201fe7943ec52b4c0ff76fedbeac4adac1d016625c65a7a80917b957d20f66" compoundref="_i_n_a3221_8h" startline="63">INA3221_REG_CONF_AVG_1</references>
        <references refid="_i_n_a3221_8h_1ac7b201fe7943ec52b4c0ff76fedbeac4aedf822a654995d30fc6fe4ae1db374d2" compoundref="_i_n_a3221_8h" startline="65">INA3221_REG_CONF_AVG_16</references>
        <references refid="_i_n_a3221_8h_1ac7b201fe7943ec52b4c0ff76fedbeac4a254263a9a481b85fdb243fe2bdc3d19c" compoundref="_i_n_a3221_8h" startline="64">INA3221_REG_CONF_AVG_4</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerManager::isSolarActive</definition>
        <argsstring>()</argsstring>
        <name>isSolarActive</name>
        <qualifiedname>PowerManager::isSolarActive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="23" column="10" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="76" bodyend="79"/>
        <references refid="class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a" compoundref="_power_manager_8cpp" startline="39" endline="42">getCurrentChargeSolar</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
        <references refid="class_power_manager_1aeb488c42ec47e1a8de0446717d339cce" compoundref="_power_manager_8h" startline="26">SOLAR_CURRENT_THRESHOLD</references>
        <referencedby refid="event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433" compoundref="event__manager_8cpp" startline="77" endline="140">checkPowerEvents</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerManager::isUSBConnected</definition>
        <argsstring>()</argsstring>
        <name>isUSBConnected</name>
        <qualifiedname>PowerManager::isUSBConnected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/PowerManager/PowerManager.h" line="24" column="10" bodyfile="lib/PowerManager/PowerManager.cpp" bodystart="81" bodyend="84"/>
        <references refid="class_power_manager_1a3f9587ee81469642a2e595ef3805e801" compoundref="_power_manager_8cpp" startline="29" endline="32">getCurrentChargeUSB</references>
        <references refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" compoundref="_power_manager_8h" startline="35">initialized</references>
        <references refid="class_power_manager_1afc4246cc3b434053c59cf2dcccf4bc64" compoundref="_power_manager_8h" startline="27">USB_CURRENT_THRESHOLD</references>
        <referencedby refid="event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433" compoundref="event__manager_8cpp" startline="77" endline="140">checkPowerEvents</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>INA3221</label>
        <link refid="class_i_n_a3221"/>
        <childnode refid="3" relation="usage">
          <edgelabel>_masken_reg</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>INA3221::masken_reg_t</label>
        <link refid="struct_i_n_a3221_1_1masken__reg__t"/>
      </node>
      <node id="1">
        <label>PowerManager</label>
        <link refid="class_power_manager"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ina3221</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/PowerManager/PowerManager.h" line="11" column="1" bodyfile="lib/PowerManager/PowerManager.h" bodystart="11" bodyend="39"/>
    <listofallmembers>
      <member refid="class_power_manager_1ae61a45a190d5293029e17c751f88bcd0" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>configure</name></member>
      <member refid="class_power_manager_1aae449340ac8e77b181ef2f0abd2d96ed" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>FALL_RATE_THRESHOLD</name></member>
      <member refid="class_power_manager_1a17e01551bc0f14820b2430d697c4c6d2" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>FALLING_TREND_REQUIRED</name></member>
      <member refid="class_power_manager_1a097734aac2bcc228d6cf22c00e3acb1a" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>getCurrentChargeSolar</name></member>
      <member refid="class_power_manager_1acad2f0f2daff3bd609952530d202c78b" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>getCurrentChargeTotal</name></member>
      <member refid="class_power_manager_1a3f9587ee81469642a2e595ef3805e801" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>getCurrentChargeUSB</name></member>
      <member refid="class_power_manager_1a1ebc18dd508b23614c4c7193fbddd962" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>getCurrentDraw</name></member>
      <member refid="class_power_manager_1ae0e4303ddaba328047fb40d8d925c7dd" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>getVoltage5V</name></member>
      <member refid="class_power_manager_1af0d877a74a39cf29cb94d34088641ff9" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>getVoltageBattery</name></member>
      <member refid="class_power_manager_1a5917758068dfeead4ae68840f5bfb493" prot="private" virt="non-virtual"><scope>PowerManager</scope><name>ina3221</name></member>
      <member refid="class_power_manager_1a217939b880543bfff917203a06d45258" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>initialize</name></member>
      <member refid="class_power_manager_1a5cf8825fbe9a81810be2f444dff008f1" prot="private" virt="non-virtual"><scope>PowerManager</scope><name>initialized</name></member>
      <member refid="class_power_manager_1a33ea0aaa75b4654b0ee05250119bf083" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>isSolarActive</name></member>
      <member refid="class_power_manager_1a0548ae14a668bb06e4cc13e0295ad5c8" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>isUSBConnected</name></member>
      <member refid="class_power_manager_1aa9ea91634936a20fb03d65ff8878867e" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>PowerManager</name></member>
      <member refid="class_power_manager_1a885c7374cb22e940ef77c0453da5f622" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>readIDs</name></member>
      <member refid="class_power_manager_1aeb488c42ec47e1a8de0446717d339cce" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>SOLAR_CURRENT_THRESHOLD</name></member>
      <member refid="class_power_manager_1a521e99a9e28cca2525988f572379c936" prot="private" virt="non-virtual"><scope>PowerManager</scope><name>solarActive</name></member>
      <member refid="class_power_manager_1afc4246cc3b434053c59cf2dcccf4bc64" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>USB_CURRENT_THRESHOLD</name></member>
      <member refid="class_power_manager_1a3676187deac57a79034f59f58ac4b746" prot="private" virt="non-virtual"><scope>PowerManager</scope><name>usbConnected</name></member>
      <member refid="class_power_manager_1a426dcedc762549ed6c408708bd61b94e" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>VOLTAGE_LOW_THRESHOLD</name></member>
      <member refid="class_power_manager_1a4e28f40bee3fd8e6df12178663159783" prot="public" virt="non-virtual"><scope>PowerManager</scope><name>VOLTAGE_OVERCHARGE_THRESHOLD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
