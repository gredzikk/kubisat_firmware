<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group___commands" kind="group">
    <compoundname>Commands</compoundname>
    <title>Satellite Commands</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group___commands_1gade74b82cf2c20d93c5e0ce624cd7ca77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_frame" kindref="compound">Frame</ref></type>
        <definition>Frame handleListCommands</definition>
        <argsstring>(const std::string &amp;param, OperationType operationType)</argsstring>
        <name>handleListCommands</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>operationType</declname>
        </param>
        <briefdescription>
<para>Handler for listing all available commands. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Empty string expected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be GET </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_frame" kindref="compound">Frame</ref> containing success/error and command list</para>
</simplesect>
<xrefsect id="command_1_command000001"><xreftitle>Command</xreftitle><xrefdescription><para>Command ID: 0 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commands/diagnostic_commands.cpp" line="19" column="7" bodyfile="commands/diagnostic_commands.cpp" bodystart="19" bodyend="42"/>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="commands_8cpp_1a04a0515603ba347ef314678876f3fa26" compoundref="commands_8cpp" startline="9" endline="34">commandHandlers</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" compoundref="protocol_8h" startline="28">ERROR</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" compoundref="protocol_8h" startline="33">GET</references>
        <references refid="event__manager_8h_1ad4291fcb880eb5ecb178b53e32f55741" compoundref="event__manager_8h" startline="3">group</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" compoundref="protocol_8h" startline="27">SUCCESS</references>
        <references refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</references>
      </memberdef>
      <memberdef kind="function" id="group___commands_1ga5ebac5711334cb3584974b2b74556543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_frame" kindref="compound">Frame</ref></type>
        <definition>Frame handleGetBuildVersion</definition>
        <argsstring>(const std::string &amp;param, OperationType operationType)</argsstring>
        <name>handleGetBuildVersion</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>operationType</declname>
        </param>
        <briefdescription>
<para>Get firmware build version. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Empty string expected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be GET </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_frame" kindref="compound">Frame</ref> containing build number</para>
</simplesect>
<xrefsect id="command_1_command000002"><xreftitle>Command</xreftitle><xrefdescription><para>Command ID: 1 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commands/diagnostic_commands.cpp" line="52" column="7" bodyfile="commands/diagnostic_commands.cpp" bodystart="52" bodyend="60"/>
        <references refid="build__number_8h_1ae7f90861d8c4d5b1cbdcf71d325feea2" compoundref="build__number_8h" startline="6">BUILD_NUMBER</references>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" compoundref="protocol_8h" startline="28">ERROR</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" compoundref="protocol_8h" startline="33">GET</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" compoundref="protocol_8h" startline="27">SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="group___commands_1ga3a6c6092cd01fd9c13ab429f4a34326d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_frame" kindref="compound">Frame</ref></type>
        <definition>Frame handleEnterBootloaderMode</definition>
        <argsstring>(const std::string &amp;param, OperationType operationType)</argsstring>
        <name>handleEnterBootloaderMode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>operationType</declname>
        </param>
        <briefdescription>
<para>Reboot system to USB firmware loader. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Empty string expected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be SET </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_frame" kindref="compound">Frame</ref> with operation result</para>
</simplesect>
<xrefsect id="command_1_command000003"><xreftitle>Command</xreftitle><xrefdescription><para>Command ID: 2 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commands/diagnostic_commands.cpp" line="70" column="7" bodyfile="commands/diagnostic_commands.cpp" bodystart="70" bodyend="94"/>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" compoundref="protocol_8h" startline="28">ERROR</references>
        <references refid="communication_8h_1a752e7cc27f52d4ba064e691b3e240ed8" compoundref="send_8cpp" startline="25" endline="29">sendFrame</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164" compoundref="protocol_8h" startline="34">SET</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" compoundref="protocol_8h" startline="27">SUCCESS</references>
        <references refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
