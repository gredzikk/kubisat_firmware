<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group___g_p_s_commands" kind="group">
    <compoundname>GPSCommands</compoundname>
    <title>GPS Commands</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group___g_p_s_commands_1gaa4c13d7d324ffb354badf45e9ceffb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_frame" kindref="compound">Frame</ref></type>
        <definition>Frame handleGPSPowerStatus</definition>
        <argsstring>(const std::string &amp;param, OperationType operationType)</argsstring>
        <name>handleGPSPowerStatus</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>operationType</declname>
        </param>
        <briefdescription>
<para>Handler for controlling GPS module power state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>For SET: &quot;0&quot; to power off, &quot;1&quot; to power on. For GET: empty </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>GET to read current state, SET to change state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_frame" kindref="compound">Frame</ref> containing:<itemizedlist>
<listitem><para>Success: Current power state (0/1)</para>
</listitem><listitem><para>Error: Error reason </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para><bold>KBST;0;GET;7;1;;TSBK</bold> </para>
</simplesect>
<simplesect kind="note"><para>Return current GPS module power state: ON/OFF </para>
</simplesect>
<simplesect kind="note"><para><bold>KBST;0;SET;7;1;POWER;TSBK</bold> </para>
</simplesect>
<simplesect kind="note"><para>POWER - 0 - OFF, 1 - ON</para>
</simplesect>
<xrefsect id="command_1_command000006"><xreftitle>Command</xreftitle><xrefdescription><para>Command ID: 7.1 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commands/gps_commands.cpp" line="25" column="7" bodyfile="commands/gps_commands.cpp" bodystart="25" bodyend="55"/>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="class_event_emitter_1a539d733505f9a793439a9cfc4f2af079" compoundref="event__manager_8h" startline="142" endline="147">EventEmitter::emit</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" compoundref="protocol_8h" startline="28">ERROR</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" compoundref="protocol_8h" startline="33">GET</references>
        <references refid="event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7a8c578de37278ada488d763ea86c5cf20" compoundref="event__manager_8h" startline="16">GPS</references>
        <references refid="pin__config_8h_1aac8b46194f932ec0656edff3718d3750" compoundref="pin__config_8h" startline="23">GPS_POWER_ENABLE_PIN</references>
        <references refid="event__manager_8h_1ac4e11c8779c20adc9210532538cdc463aa15cea80d926d7282b831d451ba8aee8" compoundref="event__manager_8h" startline="56">POWER_OFF</references>
        <references refid="event__manager_8h_1ac4e11c8779c20adc9210532538cdc463a3d6fc432ff9e2d9b890c591179a4401e" compoundref="event__manager_8h" startline="55">POWER_ON</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164" compoundref="protocol_8h" startline="34">SET</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" compoundref="protocol_8h" startline="27">SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_s_commands_1gad12f2e18bdfecbd5b6e8d8a84bb9cd77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_frame" kindref="compound">Frame</ref></type>
        <definition>Frame handleEnableGPSTransparentMode</definition>
        <argsstring>(const std::string &amp;param, OperationType operationType)</argsstring>
        <name>handleEnableGPSTransparentMode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>operationType</declname>
        </param>
        <briefdescription>
<para>Handler for enabling GPS transparent mode (UART pass-through) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>TIMEOUT in seconds (optional, defaults to 60) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>SET </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_frame" kindref="compound">Frame</ref> containing:<itemizedlist>
<listitem><para>Success: Exit message + reason</para>
</listitem><listitem><para>Error: Error reason </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para>KBST;0;SET;7;2;TIMEOUT;TSBK </para>
</simplesect>
<simplesect kind="note"><para>TIMEOUT - 1-600s, default 60s </para>
</simplesect>
<simplesect kind="note"><para>Enters a pass-through mode where UART communication is bridged directly to GPS </para>
</simplesect>
<simplesect kind="note"><para>Send &quot;##EXIT##&quot; to exit mode before TIMEOUT</para>
</simplesect>
<xrefsect id="command_1_command000007"><xreftitle>Command</xreftitle><xrefdescription><para>Command ID: 7.2 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commands/gps_commands.cpp" line="72" column="7" bodyfile="commands/gps_commands.cpp" bodystart="72" bodyend="154"/>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="pin__config_8h_1adf735c02ae01a655dbbfc89683107df1" compoundref="pin__config_8h" startline="9">DEBUG_UART_BAUD_RATE</references>
        <references refid="pin__config_8h_1a1c9052d1656e86f50326fd275c54ca67" compoundref="pin__config_8h" startline="8">DEBUG_UART_PORT</references>
        <references refid="class_event_emitter_1a539d733505f9a793439a9cfc4f2af079" compoundref="event__manager_8h" startline="142" endline="147">EventEmitter::emit</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" compoundref="protocol_8h" startline="28">ERROR</references>
        <references refid="event__manager_8h_1a87aefa0e7b725125ea1a741c80858aa7a8c578de37278ada488d763ea86c5cf20" compoundref="event__manager_8h" startline="16">GPS</references>
        <references refid="pin__config_8h_1aff9a5d52092479f80c68a37d9f47ea0c" compoundref="pin__config_8h" startline="20">GPS_UART_BAUD_RATE</references>
        <references refid="pin__config_8h_1a31bae3288bdf1b7a767c494f2b049779" compoundref="pin__config_8h" startline="19">GPS_UART_PORT</references>
        <references refid="event__manager_8h_1ac4e11c8779c20adc9210532538cdc463a2806fc6062c22a550a6d2039ab209e4c" compoundref="event__manager_8h" startline="59">PASS_THROUGH_END</references>
        <references refid="event__manager_8h_1ac4e11c8779c20adc9210532538cdc463aad25373b52902ffec9bef3591da75390" compoundref="event__manager_8h" startline="58">PASS_THROUGH_START</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164" compoundref="protocol_8h" startline="34">SET</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" compoundref="protocol_8h" startline="27">SUCCESS</references>
        <references refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_s_commands_1ga71881bd1a0a285e4149db732a3f1b533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_frame" kindref="compound">Frame</ref></type>
        <definition>Frame handleGetRMCData</definition>
        <argsstring>(const std::string &amp;param, OperationType operationType)</argsstring>
        <name>handleGetRMCData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>operationType</declname>
        </param>
        <briefdescription>
<para>Handler for retrieving GPS RMC (Recommended Minimum Navigation) data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Empty string expected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>GET </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_frame" kindref="compound">Frame</ref> containing:<itemizedlist>
<listitem><para>Success: Comma-separated RMC tokens</para>
</listitem><listitem><para>Error: Error message </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para>KBST;0;GET;7;3;;TSBK</para>
</simplesect>
<xrefsect id="command_1_command000008"><xreftitle>Command</xreftitle><xrefdescription><para>Command ID: 7.3 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commands/gps_commands.cpp" line="168" column="7" bodyfile="commands/gps_commands.cpp" bodystart="168" bodyend="192"/>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" compoundref="protocol_8h" startline="28">ERROR</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" compoundref="protocol_8h" startline="33">GET</references>
        <references refid="gps__collector_8cpp_1af2b979012abe80d338fef98209f87b78" compoundref="_n_m_e_a__data_8cpp" startline="3">nmea_data</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" compoundref="protocol_8h" startline="27">SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="group___g_p_s_commands_1gaf1f6c0fb4266518353e088e8781ed143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_frame" kindref="compound">Frame</ref></type>
        <definition>Frame handleGetGGAData</definition>
        <argsstring>(const std::string &amp;param, OperationType operationType)</argsstring>
        <name>handleGetGGAData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>operationType</declname>
        </param>
        <briefdescription>
<para>Handler for retrieving GPS GGA (Global Positioning System Fix Data) data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Empty string expected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>GET </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_frame" kindref="compound">Frame</ref> containing:<itemizedlist>
<listitem><para>Success: Comma-separated GGA tokens</para>
</listitem><listitem><para>Error: Error message </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para>KBST;0;GET;7;4;;TSBK</para>
</simplesect>
<xrefsect id="command_1_command000009"><xreftitle>Command</xreftitle><xrefdescription><para>Command ID: 7.4 </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="commands/gps_commands.cpp" line="206" column="7" bodyfile="commands/gps_commands.cpp" bodystart="206" bodyend="230"/>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" compoundref="protocol_8h" startline="28">ERROR</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" compoundref="protocol_8h" startline="33">GET</references>
        <references refid="gps__collector_8cpp_1af2b979012abe80d338fef98209f87b78" compoundref="_n_m_e_a__data_8cpp" startline="3">nmea_data</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" compoundref="protocol_8h" startline="27">SUCCESS</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Commands for controlling and monitoring the GPS module. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
