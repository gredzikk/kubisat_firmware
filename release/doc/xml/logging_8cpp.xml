<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="logging_8cpp" kind="file" language="C++">
    <compoundname>logging.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="yes">pico/stdlib.h</includes>
    <includes local="yes">pico/multicore.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <incdepgraph>
      <node id="1">
        <label>logging.cpp</label>
        <link refid="logging_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pin_config.h</label>
        <link refid="pin__config_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>hardware/uart.h</label>
      </node>
      <node id="4">
        <label>pico/multicore.h</label>
      </node>
      <node id="3">
        <label>pico/stdlib.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="logging_8cpp_1a905b7c29adff0a55966dc2bdd1578a6c" prot="public" static="no">
        <name>LOG_FILENAME</name>
        <initializer>&quot;log.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logging.cpp" line="6" column="9" bodyfile="logging.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logging_8cpp_1a985a48e0894b9d0ff7e173b0d2119c27" prot="public" static="no">
        <name>EVENT_LOG_FILENAME</name>
        <initializer>&quot;event_log.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logging.cpp" line="7" column="9" bodyfile="logging.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logging_8cpp_1a381c342b2b34df0b1a5b39c0d94da4e1" prot="public" static="no">
        <name>LOG_BUFFER_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logging.cpp" line="8" column="9" bodyfile="logging.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logging_8cpp_1a810be14c2f8d4a1b059e934dc8822e88" prot="public" static="no">
        <name>POWER_FALLING_SIGNAL</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logging.cpp" line="11" column="9" bodyfile="logging.cpp" bodystart="11" bodyend="-1"/>
        <referencedby refid="logging_8cpp_1a01a8b38ee1cf3fd44cedf3f5a8f1dbde" compoundref="logging_8cpp" startline="16" endline="50">loggingRoutine</referencedby>
      </memberdef>
      <memberdef kind="define" id="logging_8cpp_1a58d8ea357a3c26987becb7e6e4ab332f" prot="public" static="no">
        <name>EVENT_LOG_SIGNAL</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logging.cpp" line="14" column="9" bodyfile="logging.cpp" bodystart="14" bodyend="-1"/>
        <referencedby refid="logging_8cpp_1a01a8b38ee1cf3fd44cedf3f5a8f1dbde" compoundref="logging_8cpp" startline="16" endline="50">loggingRoutine</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="logging_8cpp_1a01a8b38ee1cf3fd44cedf3f5a8f1dbde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loggingRoutine</definition>
        <argsstring>()</argsstring>
        <name>loggingRoutine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logging.cpp" line="16" column="6" bodyfile="logging.cpp" bodystart="16" bodyend="50"/>
        <references refid="logging_8cpp_1a58d8ea357a3c26987becb7e6e4ab332f" compoundref="logging_8cpp" startline="14">EVENT_LOG_SIGNAL</references>
        <references refid="logging_8cpp_1a810be14c2f8d4a1b059e934dc8822e88" compoundref="logging_8cpp" startline="11">POWER_FALLING_SIGNAL</references>
        <references refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pico/stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pico/multicore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="logging_8cpp_1a905b7c29adff0a55966dc2bdd1578a6c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_FILENAME<sp/>&quot;log.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="logging_8cpp_1a985a48e0894b9d0ff7e173b0d2119c27" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_LOG_FILENAME<sp/>&quot;event_log.txt&quot;<sp/></highlight><highlight class="comment">//<sp/>Define<sp/>event<sp/>log<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="logging_8cpp_1a381c342b2b34df0b1a5b39c0d94da4e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_BUFFER_SIZE<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>power<sp/>falling<sp/>signal<sp/>(must<sp/>match<sp/>event_manager.cpp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="logging_8cpp_1a810be14c2f8d4a1b059e934dc8822e88" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POWER_FALLING_SIGNAL<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>a<sp/>signal<sp/>to<sp/>indicate<sp/>an<sp/>event<sp/>log<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="logging_8cpp_1a58d8ea357a3c26987becb7e6e4ab332f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_LOG_SIGNAL<sp/>0x02<sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>a<sp/>different<sp/>signal<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="logging_8cpp_1a01a8b38ee1cf3fd44cedf3f5a8f1dbde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logging_8cpp_1a01a8b38ee1cf3fd44cedf3f5a8f1dbde" kindref="member">loggingRoutine</ref>()<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>Initialize<sp/>SD<sp/>card<sp/>driver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!initializeSDCard(buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uartPrint(&quot;SD<sp/>card<sp/>driver<sp/>initialization<sp/>failed!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sd_initialized<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uartPrint(&quot;SD<sp/>card<sp/>driver<sp/>initialized.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>Mount<sp/>the<sp/>file<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!mountDrive(fs,<sp/>buf))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>uartPrint(&quot;SD<sp/>card<sp/>mount<sp/>failed!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sd_mounted<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uartPrint(&quot;SD<sp/>card<sp/>mounted.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" kindref="member">uartPrint</ref>(</highlight><highlight class="stringliteral">&quot;Logging<sp/>routine<sp/>started.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>the<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>multicore_fifo_pop_blocking();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="logging_8cpp_1a810be14c2f8d4a1b059e934dc8822e88" kindref="member">POWER_FALLING_SIGNAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Power<sp/>falling<sp/>signal<sp/>received!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" kindref="member">uartPrint</ref>(</highlight><highlight class="stringliteral">&quot;Power<sp/>falling<sp/>signal<sp/>received.<sp/>Closing<sp/>log<sp/>file<sp/>and<sp/>unmounting<sp/>SD<sp/>card.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Exit<sp/>the<sp/>logging<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="logging_8cpp_1a58d8ea357a3c26987becb7e6e4ab332f" kindref="member">EVENT_LOG_SIGNAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" kindref="member">uartPrint</ref>(</highlight><highlight class="stringliteral">&quot;Event<sp/>log<sp/>signal<sp/>received.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Event<sp/>log<sp/>signal<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>length<sp/>of<sp/>the<sp/>message<sp/>from<sp/>the<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="logging.cpp"/>
  </compounddef>
</doxygen>
