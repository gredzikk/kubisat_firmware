<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes refid="includes_8h" local="yes">includes.h</includes>
    <incdepgraph>
      <node id="39">
        <label>build_number.h</label>
        <link refid="build__number_8h"/>
      </node>
      <node id="9">
        <label>event_manager.h</label>
        <link refid="event__manager_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>communication.h</label>
        <link refid="communication_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>includes.h</label>
        <link refid="includes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>BH1750.h</label>
        <link refid="_b_h1750_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>lib/BH1750/BH1750_WRAPPER.h</label>
        <link refid="_b_h1750___w_r_a_p_p_e_r_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>BME280.h</label>
        <link refid="_b_m_e280_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>lib/BME280/BME280_WRAPPER.h</label>
        <link refid="_b_m_e280___w_r_a_p_p_e_r_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>lib/DS3231/DS3231.h</label>
        <link refid="_d_s3231_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>lib/GPS/NMEA/nmea_data.h</label>
        <link refid="_n_m_e_a__data_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>lib/GPS/gps_collector.h</label>
        <link refid="gps__collector_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>HMC5883L.h</label>
        <link refid="_h_m_c5883_l_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>lib/HMC5883L/HMC5883L_WRAPPER.h</label>
        <link refid="_h_m_c5883_l___w_r_a_p_p_e_r_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>INA3221.h</label>
        <link refid="_i_n_a3221_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ISensor.h</label>
        <link refid="_i_sensor_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>LoRa-RP2040.h</label>
        <link refid="_lo_ra-_r_p2040_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Print.h</label>
        <link refid="_print_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>PowerManager.h</label>
        <link refid="_power_manager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>pin_config.h</label>
        <link refid="pin__config_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>array</label>
      </node>
      <node id="46">
        <label>atomic</label>
      </node>
      <node id="54">
        <label>blockdevice/flash.h</label>
      </node>
      <node id="55">
        <label>blockdevice/sd.h</label>
      </node>
      <node id="29">
        <label>chrono</label>
      </node>
      <node id="16">
        <label>cstdint</label>
      </node>
      <node id="34">
        <label>cstdio</label>
      </node>
      <node id="35">
        <label>cstdlib</label>
      </node>
      <node id="36">
        <label>cstring</label>
      </node>
      <node id="56">
        <label>filesystem/littlefs.h</label>
      </node>
      <node id="57">
        <label>filesystem/vfs.h</label>
      </node>
      <node id="31">
        <label>functional</label>
      </node>
      <node id="52">
        <label>hardware/clocks.h</label>
      </node>
      <node id="53">
        <label>hardware/flash.h</label>
      </node>
      <node id="42">
        <label>hardware/gpio.h</label>
      </node>
      <node id="6">
        <label>hardware/i2c.h</label>
      </node>
      <node id="5">
        <label>hardware/spi.h</label>
      </node>
      <node id="7">
        <label>hardware/uart.h</label>
      </node>
      <node id="45">
        <label>inttypes.h</label>
      </node>
      <node id="27">
        <label>iomanip</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="58">
        <label>lfs.h</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="41">
        <label>pico/binary_info.h</label>
      </node>
      <node id="8">
        <label>pico/multicore.h</label>
      </node>
      <node id="17">
        <label>pico/mutex.h</label>
      </node>
      <node id="4">
        <label>pico/stdlib.h</label>
      </node>
      <node id="50">
        <label>pico/sync.h</label>
      </node>
      <node id="28">
        <label>queue</label>
      </node>
      <node id="12">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="43">
        <label>string.h</label>
      </node>
      <node id="38">
        <label>time.h</label>
      </node>
      <node id="32">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="main_8cpp_1a905b7c29adff0a55966dc2bdd1578a6c" prot="public" static="no">
        <name>LOG_FILENAME</name>
        <initializer>&quot;log.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="3" column="9" bodyfile="main.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1af8335a606a184154d5e0860517b1e2f8" prot="public" static="no" mutable="no">
        <type><ref refid="class_power_manager" kindref="compound">PowerManager</ref></type>
        <definition>PowerManager powerManager(MAIN_I2C_PORT)</definition>
        <argsstring>(MAIN_I2C_PORT)</argsstring>
        <name>powerManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="5" column="14"/>
        <referencedby refid="main_8cpp_1a9f153132b8b4afad133b952111e18bd9" compoundref="main_8cpp" startline="11" endline="16">core1_entry</referencedby>
        <referencedby refid="group___power_commands_1ga6fbaf484e68c9561ad7fabef21def37b" compoundref="power__commands_8cpp" startline="131" endline="145">handleGetCurrentChargeSolar</referencedby>
        <referencedby refid="group___power_commands_1ga83596ea837df6cf7b15e673b95bf524f" compoundref="power__commands_8cpp" startline="159" endline="173">handleGetCurrentChargeTotal</referencedby>
        <referencedby refid="group___power_commands_1ga3f38c538065bf67dbec1142fdb866d16" compoundref="power__commands_8cpp" startline="103" endline="117">handleGetCurrentChargeUSB</referencedby>
        <referencedby refid="group___power_commands_1gabd6610f557fe9deaa9f80d9405738226" compoundref="power__commands_8cpp" startline="187" endline="201">handleGetCurrentDraw</referencedby>
        <referencedby refid="group___power_commands_1gafef922e13071e5fb67da78207a9f22a4" compoundref="power__commands_8cpp" startline="21" endline="33">handleGetPowerManagerIDs</referencedby>
        <referencedby refid="group___power_commands_1ga9f2b608f46080fcdae38a1a8454938b8" compoundref="power__commands_8cpp" startline="75" endline="89">handleGetVoltage5V</referencedby>
        <referencedby refid="group___power_commands_1gad301b8c13cafa148a6f3e80e9b0bcf1a" compoundref="power__commands_8cpp" startline="47" endline="61">handleGetVoltageBattery</referencedby>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="58" endline="123">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1af9c066a94b810cae902343138b54f088" prot="public" static="no" mutable="no">
        <type><ref refid="class_d_s3231" kindref="compound">DS3231</ref></type>
        <definition>DS3231 systemClock(MAIN_I2C_PORT)</definition>
        <argsstring>(MAIN_I2C_PORT)</argsstring>
        <name>systemClock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="6" column="8"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char buffer[BUFFER_SIZE]</definition>
        <argsstring>[BUFFER_SIZE]</argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="8" column="6" bodyfile="main.cpp" bodystart="8" bodyend="-1"/>
        <referencedby refid="storage_8cpp_1a259e40f946e1178329ed6cdf18c35b0c" compoundref="storage_8cpp" startline="70" endline="80">fs_read_file</referencedby>
        <referencedby refid="storage_8cpp_1aab35cc4af25dd4a32624e51bf0fcda5b" compoundref="storage_8cpp" startline="58" endline="68">fs_write_file</referencedby>
        <referencedby refid="class_d_s3231_1aa19b08f3978eea489bc8af3a84d67e59" compoundref="_d_s3231_8cpp" startline="104" endline="126">DS3231::getDateTime</referencedby>
        <referencedby refid="class_d_s3231_1aedd5fa550aa8b38fabe4d44d9ba5a0af" compoundref="_d_s3231_8cpp" startline="29" endline="51">DS3231::getTime</referencedby>
        <referencedby refid="communication_8h_1a54817002e33761dc61558b1138749dfb" compoundref="receive_8cpp" startline="3" endline="57">onReceive</referencedby>
        <referencedby refid="class_h_m_c5883_l_1a8d34ff9a8ff20e12320df6ce5d64397f" compoundref="_h_m_c5883_l_8cpp" startline="13" endline="26">HMC5883L::read</referencedby>
        <referencedby refid="class_b_h1750_1a15a9940a67c05b9f9a781b032fa4701e" compoundref="_b_h1750_8cpp" startline="40" endline="47">BH1750::readLightLevel</referencedby>
        <referencedby refid="class_h_m_c5883_l_1a4a09a4be85064748579e1d44d8f1b305" compoundref="_h_m_c5883_l_8cpp" startline="33" endline="36">HMC5883L::readRegisters</referencedby>
        <referencedby refid="class_d_s3231_1a6ead725bcb29001cfbf4279f249d6983" compoundref="_d_s3231_8cpp" startline="12" endline="27">DS3231::setTime</referencedby>
        <referencedby refid="class_event_log_1adb17c412276c8678289395607c493e7e" compoundref="event__manager_8h" startline="76" endline="82">EventLog::toString</referencedby>
        <referencedby refid="class_lo_ra_class_1a4b251b35d67bd9363dc44b6324cfc69c" compoundref="_lo_ra-_r_p2040_8cpp" startline="300" endline="318">LoRaClass::write</referencedby>
        <referencedby refid="class_print_1abfdd93a61c4b95a3ba41680188505e73" compoundref="_print_8h" startline="55" endline="57">Print::write</referencedby>
        <referencedby refid="class_print_1ad98d820df11e2697be1e4b1ea30b4a23" compoundref="_print_8cpp" startline="31" endline="39">Print::write</referencedby>
        <referencedby refid="class_h_m_c5883_l_1a114c069b8221f2780b928063a393a183" compoundref="_h_m_c5883_l_8cpp" startline="28" endline="31">HMC5883L::writeRegister</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a73b963945a418c57630c1b66ce2aa74f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int bufferIndex</definition>
        <argsstring></argsstring>
        <name>bufferIndex</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="9" column="5" bodyfile="main.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a9f153132b8b4afad133b952111e18bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void core1_entry</definition>
        <argsstring>()</argsstring>
        <name>core1_entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="11" column="6" bodyfile="main.cpp" bodystart="11" bodyend="16"/>
        <references refid="event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433" compoundref="event__manager_8cpp" startline="77" endline="140">checkPowerEvents</references>
        <references refid="gps__collector_8cpp_1abe46d88c89b1f730f6c9a230acac2a6a" compoundref="gps__collector_8cpp" startline="27" endline="65">collectGPSData</references>
        <references refid="main_8cpp_1af8335a606a184154d5e0860517b1e2f8">powerManager</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="58" endline="123">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a21af2d50d7779336997d5f3456352431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool initSystems</definition>
        <argsstring>()</argsstring>
        <name>initSystems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="18" column="6" bodyfile="main.cpp" bodystart="18" bodyend="54"/>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="pin__config_8h_1adf735c02ae01a655dbbfc89683107df1" compoundref="pin__config_8h" startline="9">DEBUG_UART_BAUD_RATE</references>
        <references refid="pin__config_8h_1a1c9052d1656e86f50326fd275c54ca67" compoundref="pin__config_8h" startline="8">DEBUG_UART_PORT</references>
        <references refid="pin__config_8h_1aaae74107573261e50cb72bcec8d2d3fe" compoundref="pin__config_8h" startline="12">DEBUG_UART_RX_PIN</references>
        <references refid="pin__config_8h_1a94d099ea6efcf6e349a1e392b17ac6ee" compoundref="pin__config_8h" startline="11">DEBUG_UART_TX_PIN</references>
        <references refid="storage_8cpp_1afb19e37469a751aa61de3dcd0c70b4b0" compoundref="storage_8cpp" startline="9" endline="35">fs_init</references>
        <references refid="pin__config_8h_1aac8b46194f932ec0656edff3718d3750" compoundref="pin__config_8h" startline="23">GPS_POWER_ENABLE_PIN</references>
        <references refid="pin__config_8h_1aff9a5d52092479f80c68a37d9f47ea0c" compoundref="pin__config_8h" startline="20">GPS_UART_BAUD_RATE</references>
        <references refid="pin__config_8h_1a31bae3288bdf1b7a767c494f2b049779" compoundref="pin__config_8h" startline="19">GPS_UART_PORT</references>
        <references refid="pin__config_8h_1a8d2d12725644a55f56e8aee18942b144" compoundref="pin__config_8h" startline="22">GPS_UART_RX_PIN</references>
        <references refid="pin__config_8h_1a8e35acac4c2208fd0d6b889990c1f970" compoundref="pin__config_8h" startline="21">GPS_UART_TX_PIN</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1a551b723eafd6a31d444fcb2f5920fbd3" compoundref="protocol_8h" startline="29">INFO</references>
        <references refid="pin__config_8h_1ae122c78708c186c48bc347669332c550" compoundref="pin__config_8h" startline="14">MAIN_I2C_PORT</references>
        <references refid="pin__config_8h_1a9e17f76dd11280c50d7625b62557b29f" compoundref="pin__config_8h" startline="16">MAIN_I2C_SCL_PIN</references>
        <references refid="pin__config_8h_1af2e27807e37db3df1c383812da249090" compoundref="pin__config_8h" startline="15">MAIN_I2C_SDA_PIN</references>
        <references refid="communication_8h_1a752e7cc27f52d4ba064e691b3e240ed8" compoundref="send_8cpp" startline="25" endline="29">sendFrame</references>
        <references refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="58" endline="123">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a01a8b38ee1cf3fd44cedf3f5a8f1dbde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loggingRoutine</definition>
        <argsstring>()</argsstring>
        <name>loggingRoutine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="56" column="6" bodyfile="logging.cpp" bodystart="16" bodyend="50" declfile="main.cpp" declline="56" declcolumn="6"/>
        <references refid="logging_8cpp_1a58d8ea357a3c26987becb7e6e4ab332f" compoundref="logging_8cpp" startline="14">EVENT_LOG_SIGNAL</references>
        <references refid="logging_8cpp_1a810be14c2f8d4a1b059e934dc8822e88" compoundref="logging_8cpp" startline="11">POWER_FALLING_SIGNAL</references>
        <references refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</references>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="58" column="5" bodyfile="main.cpp" bodystart="58" bodyend="123"/>
        <references refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</references>
        <references refid="main_8cpp_1a9f153132b8b4afad133b952111e18bd9" compoundref="main_8cpp" startline="11" endline="16">core1_entry</references>
        <references refid="communication_8h_1ac5e175a6a1482f700f9aee0b727b924f" compoundref="receive_8cpp" startline="59" endline="74">handleUartInput</references>
        <references refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1a551b723eafd6a31d444fcb2f5920fbd3" compoundref="protocol_8h" startline="29">INFO</references>
        <references refid="communication_8cpp_1a520df448c1dc359f42111ac240081975" compoundref="communication_8cpp" startline="10" endline="26">initializeRadio</references>
        <references refid="main_8cpp_1a21af2d50d7779336997d5f3456352431" compoundref="main_8cpp" startline="18" endline="54">initSystems</references>
        <references refid="_lo_ra-_r_p2040_8cpp_1af4db0e30d2909faa29355167719f196c" compoundref="_lo_ra-_r_p2040_8cpp" startline="753">LoRa</references>
        <references refid="communication_8h_1a54817002e33761dc61558b1138749dfb" compoundref="receive_8cpp" startline="3" endline="57">onReceive</references>
        <references refid="main_8cpp_1af8335a606a184154d5e0860517b1e2f8">powerManager</references>
        <references refid="communication_8h_1a752e7cc27f52d4ba064e691b3e240ed8" compoundref="send_8cpp" startline="25" endline="29">sendFrame</references>
        <references refid="communication_8h_1a877f9c1d3485cf1521bc13996d39c1fb">sendMessage</references>
        <references refid="clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3">systemClock</references>
        <references refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="includes_8h" kindref="compound">includes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="main_8cpp_1a905b7c29adff0a55966dc2bdd1578a6c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_FILENAME<sp/>&quot;log.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="main_8cpp_1af8335a606a184154d5e0860517b1e2f8" refkind="member"><highlight class="normal"><ref refid="class_power_manager" kindref="compound">PowerManager</ref><sp/><ref refid="main_8cpp_1af8335a606a184154d5e0860517b1e2f8" kindref="member">powerManager</ref>(<ref refid="pin__config_8h_1ae122c78708c186c48bc347669332c550" kindref="member">MAIN_I2C_PORT</ref>);</highlight></codeline>
<codeline lineno="6" refid="main_8cpp_1af9c066a94b810cae902343138b54f088" refkind="member"><highlight class="normal"><ref refid="class_d_s3231" kindref="compound">DS3231</ref><sp/><ref refid="main_8cpp_1af9c066a94b810cae902343138b54f088" kindref="member">systemClock</ref>(<ref refid="pin__config_8h_1ae122c78708c186c48bc347669332c550" kindref="member">MAIN_I2C_PORT</ref>);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1af00b615ca097c43dbb02ae3a00ea3a62" kindref="member">buffer</ref>[<ref refid="pin__config_8h_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="9" refid="main_8cpp_1a73b963945a418c57630c1b66ce2aa74f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a73b963945a418c57630c1b66ce2aa74f" kindref="member">bufferIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="main_8cpp_1a9f153132b8b4afad133b952111e18bd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a9f153132b8b4afad133b952111e18bd9" kindref="member">core1_entry</ref>()<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gps__collector_8cpp_1abe46d88c89b1f730f6c9a230acac2a6a" kindref="member">collectGPSData</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433" kindref="member">checkPowerEvents</ref>(<ref refid="main_8cpp_1af8335a606a184154d5e0860517b1e2f8" kindref="member">powerManager</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="main_8cpp_1a21af2d50d7779336997d5f3456352431" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a21af2d50d7779336997d5f3456352431" kindref="member">initSystems</ref>()<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>stdio_init_all();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_init(<ref refid="pin__config_8h_1a1c9052d1656e86f50326fd275c54ca67" kindref="member">DEBUG_UART_PORT</ref>,<sp/><ref refid="pin__config_8h_1adf735c02ae01a655dbbfc89683107df1" kindref="member">DEBUG_UART_BAUD_RATE</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_function(<ref refid="pin__config_8h_1a94d099ea6efcf6e349a1e392b17ac6ee" kindref="member">DEBUG_UART_TX_PIN</ref>,<sp/>UART_FUNCSEL_NUM(<ref refid="pin__config_8h_1a1c9052d1656e86f50326fd275c54ca67" kindref="member">DEBUG_UART_PORT</ref>,<sp/><ref refid="pin__config_8h_1a94d099ea6efcf6e349a1e392b17ac6ee" kindref="member">DEBUG_UART_TX_PIN</ref>));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_function(<ref refid="pin__config_8h_1aaae74107573261e50cb72bcec8d2d3fe" kindref="member">DEBUG_UART_RX_PIN</ref>,<sp/>UART_FUNCSEL_NUM(<ref refid="pin__config_8h_1a1c9052d1656e86f50326fd275c54ca67" kindref="member">DEBUG_UART_PORT</ref>,<sp/><ref refid="pin__config_8h_1aaae74107573261e50cb72bcec8d2d3fe" kindref="member">DEBUG_UART_RX_PIN</ref>));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_init(PICO_DEFAULT_LED_PIN);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_dir(PICO_DEFAULT_LED_PIN,<sp/>GPIO_OUT);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>i2c_init(<ref refid="pin__config_8h_1ae122c78708c186c48bc347669332c550" kindref="member">MAIN_I2C_PORT</ref>,<sp/>400<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_function(<ref refid="pin__config_8h_1a9e17f76dd11280c50d7625b62557b29f" kindref="member">MAIN_I2C_SCL_PIN</ref>,<sp/>GPIO_FUNC_I2C);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_function(<ref refid="pin__config_8h_1af2e27807e37db3df1c383812da249090" kindref="member">MAIN_I2C_SDA_PIN</ref>,<sp/>GPIO_FUNC_I2C);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_pull_up(<ref refid="pin__config_8h_1a9e17f76dd11280c50d7625b62557b29f" kindref="member">MAIN_I2C_SCL_PIN</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_pull_up(<ref refid="pin__config_8h_1af2e27807e37db3df1c383812da249090" kindref="member">MAIN_I2C_SDA_PIN</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_init(<ref refid="pin__config_8h_1a31bae3288bdf1b7a767c494f2b049779" kindref="member">GPS_UART_PORT</ref>,<sp/><ref refid="pin__config_8h_1aff9a5d52092479f80c68a37d9f47ea0c" kindref="member">GPS_UART_BAUD_RATE</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_function(<ref refid="pin__config_8h_1a8e35acac4c2208fd0d6b889990c1f970" kindref="member">GPS_UART_TX_PIN</ref>,<sp/>UART_FUNCSEL_NUM(<ref refid="pin__config_8h_1a31bae3288bdf1b7a767c494f2b049779" kindref="member">GPS_UART_PORT</ref>,<sp/><ref refid="pin__config_8h_1a8e35acac4c2208fd0d6b889990c1f970" kindref="member">GPS_UART_TX_PIN</ref>));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_function(<ref refid="pin__config_8h_1a8d2d12725644a55f56e8aee18942b144" kindref="member">GPS_UART_RX_PIN</ref>,<sp/>UART_FUNCSEL_NUM(<ref refid="pin__config_8h_1a31bae3288bdf1b7a767c494f2b049779" kindref="member">GPS_UART_PORT</ref>,<sp/><ref refid="pin__config_8h_1a8d2d12725644a55f56e8aee18942b144" kindref="member">GPS_UART_RX_PIN</ref>));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_init(<ref refid="pin__config_8h_1aac8b46194f932ec0656edff3718d3750" kindref="member">GPS_POWER_ENABLE_PIN</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_set_dir(<ref refid="pin__config_8h_1aac8b46194f932ec0656edff3718d3750" kindref="member">GPS_POWER_ENABLE_PIN</ref>,<sp/>GPIO_OUT);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_put(<ref refid="pin__config_8h_1aac8b46194f932ec0656edff3718d3750" kindref="member">GPS_POWER_ENABLE_PIN</ref>,<sp/>1);<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sdInitDone<sp/>=<sp/><ref refid="storage_8cpp_1afb19e37469a751aa61de3dcd0c70b4b0" kindref="member">fs_init</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" kindref="member">uartPrint</ref>(</highlight><highlight class="stringliteral">&quot;SD<sp/>card<sp/>init:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(sdInitDone));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>bootString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;System<sp/>init<sp/>completed<sp/>@<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(to_ms_since_boot(get_absolute_time()))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" kindref="member">uartPrint</ref>(bootString);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_frame" kindref="compound">Frame</ref><sp/>boot<sp/>=<sp/><ref refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" kindref="member">buildFrame</ref>(<ref refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1a551b723eafd6a31d444fcb2f5920fbd3" kindref="member">ExecutionResult::INFO</ref>,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;HELLO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communication_8h_1a752e7cc27f52d4ba064e691b3e240ed8" kindref="member">sendFrame</ref>(boot);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a01a8b38ee1cf3fd44cedf3f5a8f1dbde" kindref="member">loggingRoutine</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a21af2d50d7779336997d5f3456352431" kindref="member">initSystems</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>multicore_launch_core1(<ref refid="main_8cpp_1a9f153132b8b4afad133b952111e18bd9" kindref="member">core1_entry</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock__commands_8cpp_1abfd573c8a839ac00ea3b96d691ea11c3" kindref="member">systemClock</ref>.setTime(0,<sp/>41,<sp/>20,<sp/>4,<sp/>14,<sp/>11,<sp/>2024);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_put(PICO_DEFAULT_LED_PIN,<sp/>1);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1af8335a606a184154d5e0860517b1e2f8" kindref="member">powerManager</ref>.initialize())</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>powerConfig<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;operating_mode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;continuous&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;averaging_mode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1af8335a606a184154d5e0860517b1e2f8" kindref="member">powerManager</ref>.configure(powerConfig);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_put(PICO_DEFAULT_LED_PIN,<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>radioInitSuccess<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>radioInitSuccess<sp/>=<sp/><ref refid="communication_8cpp_1a520df448c1dc359f42111ac240081975" kindref="member">initializeRadio</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_put(PICO_DEFAULT_LED_PIN,<sp/>1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radioInitSuccess)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="communication_8h_1a877f9c1d3485cf1521bc13996d39c1fb" kindref="member">sendMessage</ref>(</highlight><highlight class="stringliteral">&quot;System<sp/>initialized<sp/>successfully!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_put(PICO_DEFAULT_LED_PIN,<sp/>0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" kindref="member">uartPrint</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>message<sp/>will<sp/>only<sp/>be<sp/>printed<sp/>to<sp/>UART.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uartPrint(&quot;This<sp/>message<sp/>will<sp/>be<sp/>printed<sp/>to<sp/>UART<sp/>and<sp/>logged<sp/>to<sp/>Core<sp/>1.&quot;,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>5;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>intro<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Main<sp/>loop<sp/>starts<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>seconds...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" kindref="member">uartPrint</ref>(intro);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_put(PICO_DEFAULT_LED_PIN,<sp/>(i%2==0));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep_ms(1000);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_put(PICO_DEFAULT_LED_PIN,<sp/>1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_frame" kindref="compound">Frame</ref><sp/>boot<sp/>=<sp/><ref refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" kindref="member">buildFrame</ref>(<ref refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1a551b723eafd6a31d444fcb2f5920fbd3" kindref="member">ExecutionResult::INFO</ref>,<sp/>0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;START&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communication_8h_1a752e7cc27f52d4ba064e691b3e240ed8" kindref="member">sendFrame</ref>(boot);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetSize<sp/>=<sp/><ref refid="_lo_ra-_r_p2040_8cpp_1af4db0e30d2909faa29355167719f196c" kindref="member">LoRa</ref>.parsePacket();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetSize)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="communication_8h_1a54817002e33761dc61558b1138749dfb" kindref="member">onReceive</ref>(packetSize);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//acquireLock();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>voltage<sp/>=<sp/>sharedData.voltage5V;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//releaseLock();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::string<sp/>voltageReading<sp/>=<sp/>&quot;Core<sp/>0:<sp/>voltage<sp/>from<sp/>common<sp/>data<sp/>structure:<sp/>&quot;<sp/>+<sp/>std::to_string(voltage);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uartPrint(voltageReading.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//collectGPSData();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="communication_8h_1ac5e175a6a1482f700f9aee0b727b924f" kindref="member">handleUartInput</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BH1750<sp/><sp/><sp/><sp/>0X23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INA3221<sp/><sp/><sp/>0X40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BME280<sp/><sp/><sp/><sp/>0X76</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DS3231<sp/><sp/><sp/><sp/>0X86</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="main.cpp"/>
  </compounddef>
</doxygen>
