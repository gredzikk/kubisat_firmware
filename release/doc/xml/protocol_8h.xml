<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="protocol_8h" kind="file" language="C++">
    <compoundname>protocol.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">map</includes>
    <includes local="no">functional</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">iomanip</includes>
    <includes refid="pin__config_8h" local="yes">pin_config.h</includes>
    <includes refid="_power_manager_8h" local="yes">PowerManager.h</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes local="yes">time.h</includes>
    <includes refid="build__number_8h" local="yes">build_number.h</includes>
    <includes refid="_lo_ra-_r_p2040_8h" local="yes">LoRa-RP2040.h</includes>
    <includedby refid="commands_8h" local="yes">commands/commands.h</includedby>
    <includedby refid="event__manager_8cpp" local="yes">event_manager.cpp</includedby>
    <includedby refid="communication_8h" local="yes">frame_model/communication.h</includedby>
    <includedby refid="includes_8h" local="yes">includes.h</includedby>
    <incdepgraph>
      <node id="22">
        <label>build_number.h</label>
        <link refid="build__number_8h"/>
      </node>
      <node id="1">
        <label>frame_model/protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>INA3221.h</label>
        <link refid="_i_n_a3221_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>LoRa-RP2040.h</label>
        <link refid="_lo_ra-_r_p2040_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Print.h</label>
        <link refid="_print_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>PowerManager.h</label>
        <link refid="_power_manager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pin_config.h</label>
        <link refid="pin__config_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="15">
        <label>cstdio</label>
      </node>
      <node id="16">
        <label>cstdlib</label>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="25">
        <label>hardware/gpio.h</label>
      </node>
      <node id="13">
        <label>hardware/i2c.h</label>
      </node>
      <node id="26">
        <label>hardware/spi.h</label>
      </node>
      <node id="20">
        <label>hardware/uart.h</label>
      </node>
      <node id="29">
        <label>inttypes.h</label>
      </node>
      <node id="7">
        <label>iomanip</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="24">
        <label>pico/binary_info.h</label>
      </node>
      <node id="14">
        <label>pico/stdlib.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="19">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="27">
        <label>string.h</label>
      </node>
      <node id="21">
        <label>time.h</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>commands/clock_commands.cpp</label>
        <link refid="clock__commands_8cpp"/>
      </node>
      <node id="3">
        <label>commands/commands.cpp</label>
        <link refid="commands_8cpp"/>
      </node>
      <node id="2">
        <label>commands/commands.h</label>
        <link refid="commands_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>commands/diagnostic_commands.cpp</label>
        <link refid="diagnostic__commands_8cpp"/>
      </node>
      <node id="8">
        <label>commands/event_commands.cpp</label>
        <link refid="event__commands_8cpp"/>
      </node>
      <node id="9">
        <label>commands/gps_commands.cpp</label>
        <link refid="gps__commands_8cpp"/>
      </node>
      <node id="10">
        <label>commands/power_commands.cpp</label>
        <link refid="power__commands_8cpp"/>
      </node>
      <node id="5">
        <label>event_manager.cpp</label>
        <link refid="event__manager_8cpp"/>
      </node>
      <node id="11">
        <label>frame_model/communication.cpp</label>
        <link refid="communication_8cpp"/>
      </node>
      <node id="6">
        <label>frame_model/communication.h</label>
        <link refid="communication_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>frame_model/frame.cpp</label>
        <link refid="frame_8cpp"/>
      </node>
      <node id="1">
        <label>frame_model/protocol.h</label>
        <link refid="protocol_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>frame_model/receive.cpp</label>
        <link refid="receive_8cpp"/>
      </node>
      <node id="14">
        <label>frame_model/send.cpp</label>
        <link refid="send_8cpp"/>
      </node>
      <node id="15">
        <label>frame_model/utils_converters.cpp</label>
        <link refid="utils__converters_8cpp"/>
      </node>
      <node id="16">
        <label>includes.h</label>
        <link refid="includes_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_frame" prot="public">Frame</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1" prot="public" static="no" strong="yes">
        <type></type>
        <name>ExecutionResult</name>
        <enumvalue id="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" prot="public">
          <name>SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" prot="public">
          <name>ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1a551b723eafd6a31d444fcb2f5920fbd3" prot="public">
          <name>INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="26" column="1" bodyfile="frame_model/protocol.h" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="enum" id="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" prot="public" static="no" strong="yes">
        <type></type>
        <name>OperationType</name>
        <enumvalue id="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" prot="public">
          <name>GET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164" prot="public">
          <name>SET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a4e062fc2814c180a9e08b1d204ab31bd" prot="public">
          <name>ANS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047acd22bad976363fdd1bfbf6759fede482" prot="public">
          <name>ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9517fd0bf8faa655990a4dffe358e13e" prot="public">
          <name>INF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="32" column="1" bodyfile="frame_model/protocol.h" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8d" prot="public" static="no" strong="yes">
        <type></type>
        <name>CommandAccessLevel</name>
        <enumvalue id="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8dab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8da47c7e7cb36a953a8c47e02000036bb44" prot="public">
          <name>READ_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8dad8fddf06187e680ab5a6355f76a17357" prot="public">
          <name>WRITE_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8daa7b843fb734e3b3fea8e5f902d3f4144" prot="public">
          <name>READ_WRITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="40" column="1" bodyfile="frame_model/protocol.h" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="enum" id="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8f" prot="public" static="no" strong="yes">
        <type></type>
        <name>ValueUnit</name>
        <enumvalue id="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa0db45d2a4141101bdfe48e3314cfbca3" prot="public">
          <name>UNDEFINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa2200becb80f0019c4a2ccecec350d0db" prot="public">
          <name>SECOND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fad99987f942ecbf2eea5d50ebf50723e6" prot="public">
          <name>VOLT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8faa97b2c144243b2b9d2c593ec268b62f5" prot="public">
          <name>BOOL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8faa3eb957bd02f4780a599d5ec4464ca46" prot="public">
          <name>DATETIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa61a96ffcb251bb9bf0abf8fec19d0ea8" prot="public">
          <name>TEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa1ec9056b2106b66cd5b255ad67fcb671" prot="public">
          <name>MILIAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="47" column="1" bodyfile="frame_model/protocol.h" bodystart="47" bodyend="55"/>
      </memberdef>
      <memberdef kind="enum" id="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383" prot="public" static="no" strong="yes">
        <type></type>
        <name>ExceptionType</name>
        <enumvalue id="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383ab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a4596302bc1e8ce6e62188e769aac94cf" prot="public">
          <name>NOT_ALLOWED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a4a775a051faafd7eed30f5a95548729a" prot="public">
          <name>INVALID_PARAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383ade918d7abaea4c856c3c64720f3cbb7c" prot="public">
          <name>INVALID_OPERATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a62c989cb54431f5fa2a775b0ca55bb49" prot="public">
          <name>PARAM_UNECESSARY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="57" column="1" bodyfile="frame_model/protocol.h" bodystart="57" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="protocol_8h_1aa6688ce7f01167c4ecb45cc4c741cca0" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string FRAME_BEGIN</definition>
        <argsstring></argsstring>
        <name>FRAME_BEGIN</name>
        <initializer>= &quot;KBST&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="22" column="19" bodyfile="frame_model/protocol.h" bodystart="22" bodyend="-1"/>
        <referencedby refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</referencedby>
        <referencedby refid="communication_8h_1a8f34bc31494430539db21206f084d39d" compoundref="frame_8cpp" startline="24" endline="71">decodeFrame</referencedby>
        <referencedby refid="communication_8h_1ab53898fb6f45dfc657837a665a070959" compoundref="frame_8cpp" startline="6" endline="19">encodeFrame</referencedby>
        <referencedby refid="communication_8h_1a54817002e33761dc61558b1138749dfb" compoundref="receive_8cpp" startline="3" endline="57">onReceive</referencedby>
      </memberdef>
      <memberdef kind="variable" id="protocol_8h_1a38fcd5426cc3ba27b4260e4db4299072" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string FRAME_END</definition>
        <argsstring></argsstring>
        <name>FRAME_END</name>
        <initializer>= &quot;TSBK&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="23" column="19" bodyfile="frame_model/protocol.h" bodystart="23" bodyend="-1"/>
        <referencedby refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</referencedby>
        <referencedby refid="communication_8h_1a8f34bc31494430539db21206f084d39d" compoundref="frame_8cpp" startline="24" endline="71">decodeFrame</referencedby>
        <referencedby refid="communication_8h_1ab53898fb6f45dfc657837a665a070959" compoundref="frame_8cpp" startline="6" endline="19">encodeFrame</referencedby>
        <referencedby refid="communication_8h_1a54817002e33761dc61558b1138749dfb" compoundref="receive_8cpp" startline="3" endline="57">onReceive</referencedby>
      </memberdef>
      <memberdef kind="variable" id="protocol_8h_1a32d67795a8b119935e98ba0da0d5be5f" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char DELIMITER</definition>
        <argsstring></argsstring>
        <name>DELIMITER</name>
        <initializer>= &apos;;&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="24" column="12" bodyfile="frame_model/protocol.h" bodystart="24" bodyend="-1"/>
        <referencedby refid="communication_8h_1a8f34bc31494430539db21206f084d39d" compoundref="frame_8cpp" startline="24" endline="71">decodeFrame</referencedby>
        <referencedby refid="communication_8h_1ab53898fb6f45dfc657837a665a070959" compoundref="frame_8cpp" startline="6" endline="19">encodeFrame</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="protocol_8h_1a46ff7e9bd427919630557811f44f5473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string exceptionTypeToString</definition>
        <argsstring>(ExceptionType type)</argsstring>
        <name>exceptionTypeToString</name>
        <param>
          <type><ref refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383" kindref="member">ExceptionType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="76" column="13" bodyfile="frame_model/utils_converters.cpp" bodystart="3" bodyend="12" declfile="frame_model/protocol.h" declline="76" declcolumn="13"/>
        <references refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383ade918d7abaea4c856c3c64720f3cbb7c" compoundref="protocol_8h" startline="61">INVALID_OPERATION</references>
        <references refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a4a775a051faafd7eed30f5a95548729a" compoundref="protocol_8h" startline="60">INVALID_PARAM</references>
        <references refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383ab50339a10e1de285ac99d4c3990b8693" compoundref="protocol_8h" startline="58">NONE</references>
        <references refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a4596302bc1e8ce6e62188e769aac94cf" compoundref="protocol_8h" startline="59">NOT_ALLOWED</references>
        <references refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a62c989cb54431f5fa2a775b0ca55bb49" compoundref="protocol_8h" startline="62">PARAM_UNECESSARY</references>
      </memberdef>
      <memberdef kind="function" id="protocol_8h_1a82a11ce999902359454fa904a13ae297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string operationTypeToString</definition>
        <argsstring>(OperationType type)</argsstring>
        <name>operationTypeToString</name>
        <param>
          <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="77" column="13" bodyfile="frame_model/utils_converters.cpp" bodystart="28" bodyend="37" declfile="frame_model/protocol.h" declline="77" declcolumn="13"/>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a4e062fc2814c180a9e08b1d204ab31bd" compoundref="protocol_8h" startline="35">ANS</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047acd22bad976363fdd1bfbf6759fede482" compoundref="protocol_8h" startline="36">ERR</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" compoundref="protocol_8h" startline="33">GET</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9517fd0bf8faa655990a4dffe358e13e" compoundref="protocol_8h" startline="37">INF</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164" compoundref="protocol_8h" startline="34">SET</references>
        <referencedby refid="communication_8h_1ab53898fb6f45dfc657837a665a070959" compoundref="frame_8cpp" startline="6" endline="19">encodeFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="protocol_8h_1a245c34d9f7072236b66e9352a9d3466e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
        <definition>OperationType stringToOperationType</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>stringToOperationType</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="78" column="15" bodyfile="frame_model/utils_converters.cpp" bodystart="40" bodyend="47" declfile="frame_model/protocol.h" declline="78" declcolumn="15"/>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a4e062fc2814c180a9e08b1d204ab31bd" compoundref="protocol_8h" startline="35">ANS</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047acd22bad976363fdd1bfbf6759fede482" compoundref="protocol_8h" startline="36">ERR</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" compoundref="protocol_8h" startline="33">GET</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9517fd0bf8faa655990a4dffe358e13e" compoundref="protocol_8h" startline="37">INF</references>
        <references refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164" compoundref="protocol_8h" startline="34">SET</references>
        <referencedby refid="communication_8h_1a8f34bc31494430539db21206f084d39d" compoundref="frame_8cpp" startline="24" endline="71">decodeFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="protocol_8h_1a4d6495102457200a5632a3286331d238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt; uint8_t &gt; hexStringToBytes</definition>
        <argsstring>(const std::string &amp;hexString)</argsstring>
        <name>hexStringToBytes</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>hexString</declname>
        </param>
        <briefdescription>
<para>Convert a hex string to a vector of bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hexString</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex string to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="79" column="13" bodyfile="frame_model/utils_converters.cpp" bodystart="52" bodyend="63" declfile="frame_model/protocol.h" declline="79" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="protocol_8h_1ab4cb9e6b491bd7711c69c9167a2b9286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string valueUnitTypeToString</definition>
        <argsstring>(ValueUnit unit)</argsstring>
        <name>valueUnitTypeToString</name>
        <param>
          <type><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8f" kindref="member">ValueUnit</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="frame_model/protocol.h" line="80" column="13" bodyfile="frame_model/utils_converters.cpp" bodystart="14" bodyend="25" declfile="frame_model/protocol.h" declline="80" declcolumn="13"/>
        <references refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8faa97b2c144243b2b9d2c593ec268b62f5" compoundref="protocol_8h" startline="51">BOOL</references>
        <references refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8faa3eb957bd02f4780a599d5ec4464ca46" compoundref="protocol_8h" startline="52">DATETIME</references>
        <references refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa1ec9056b2106b66cd5b255ad67fcb671" compoundref="protocol_8h" startline="54">MILIAMP</references>
        <references refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa2200becb80f0019c4a2ccecec350d0db" compoundref="protocol_8h" startline="49">SECOND</references>
        <references refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa61a96ffcb251bb9bf0abf8fec19d0ea8" compoundref="protocol_8h" startline="53">TEXT</references>
        <references refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa0db45d2a4141101bdfe48e3314cfbca3" compoundref="protocol_8h" startline="48">UNDEFINED</references>
        <references refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fad99987f942ecbf2eea5d50ebf50723e6" compoundref="protocol_8h" startline="50">VOLT</references>
        <referencedby refid="communication_8h_1a54afeb73435419551a1b51a3fd5c3266" compoundref="frame_8cpp" startline="113" endline="146">buildFrame</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>protocol.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PROTOCOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROTOCOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pin__config_8h" kindref="compound">pin_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_power_manager_8h" kindref="compound">PowerManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="build__number_8h" kindref="compound">build_number.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_lo_ra-_r_p2040_8h" kindref="compound">LoRa-RP2040.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="protocol_8h_1aa6688ce7f01167c4ecb45cc4c741cca0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="protocol_8h_1aa6688ce7f01167c4ecb45cc4c741cca0" kindref="member">FRAME_BEGIN</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;KBST&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23" refid="protocol_8h_1a38fcd5426cc3ba27b4260e4db4299072" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="protocol_8h_1a38fcd5426cc3ba27b4260e4db4299072" kindref="member">FRAME_END</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TSBK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24" refid="protocol_8h_1a32d67795a8b119935e98ba0da0d5be5f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="protocol_8h_1a32d67795a8b119935e98ba0da0d5be5f" kindref="member">DELIMITER</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1" kindref="member">ExecutionResult</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1ad0749aaba8b833466dfcbb0428e4f89c" kindref="member">SUCCESS</ref>,</highlight></codeline>
<codeline lineno="28" refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1abb1ca97ec761fc37101737ba0aa2e7c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="event__manager_8h_1ac4e11c8779c20adc9210532538cdc463abb1ca97ec761fc37101737ba0aa2e7c5" kindref="member">ERROR</ref>,</highlight></codeline>
<codeline lineno="29" refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1a551b723eafd6a31d444fcb2f5920fbd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1ad13fb53c92ad2af53a95ee45749796d1a551b723eafd6a31d444fcb2f5920fbd3" kindref="member">INFO</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a7528035a93ee69cedb1dbddb2f0bfcc8" kindref="member">GET</ref>,</highlight></codeline>
<codeline lineno="34" refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a8c52684db8f49511e9b44471716bf164" kindref="member">SET</ref>,</highlight></codeline>
<codeline lineno="35" refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a4e062fc2814c180a9e08b1d204ab31bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a4e062fc2814c180a9e08b1d204ab31bd" kindref="member">ANS</ref>,</highlight></codeline>
<codeline lineno="36" refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047acd22bad976363fdd1bfbf6759fede482" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047acd22bad976363fdd1bfbf6759fede482" kindref="member">ERR</ref>,</highlight></codeline>
<codeline lineno="37" refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9517fd0bf8faa655990a4dffe358e13e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9517fd0bf8faa655990a4dffe358e13e" kindref="member">INF</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8d" kindref="member">CommandAccessLevel</ref><sp/>{</highlight></codeline>
<codeline lineno="41" refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8dab50339a10e1de285ac99d4c3990b8693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8dab50339a10e1de285ac99d4c3990b8693" kindref="member">NONE</ref>,</highlight></codeline>
<codeline lineno="42" refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8da47c7e7cb36a953a8c47e02000036bb44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8da47c7e7cb36a953a8c47e02000036bb44" kindref="member">READ_ONLY</ref>,</highlight></codeline>
<codeline lineno="43" refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8dad8fddf06187e680ab5a6355f76a17357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8dad8fddf06187e680ab5a6355f76a17357" kindref="member">WRITE_ONLY</ref>,</highlight></codeline>
<codeline lineno="44" refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8daa7b843fb734e3b3fea8e5f902d3f4144" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8daa7b843fb734e3b3fea8e5f902d3f4144" kindref="member">READ_WRITE</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8f" kindref="member">ValueUnit</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa0db45d2a4141101bdfe48e3314cfbca3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa0db45d2a4141101bdfe48e3314cfbca3" kindref="member">UNDEFINED</ref>,</highlight></codeline>
<codeline lineno="49" refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa2200becb80f0019c4a2ccecec350d0db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa2200becb80f0019c4a2ccecec350d0db" kindref="member">SECOND</ref>,</highlight></codeline>
<codeline lineno="50" refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fad99987f942ecbf2eea5d50ebf50723e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fad99987f942ecbf2eea5d50ebf50723e6" kindref="member">VOLT</ref>,</highlight></codeline>
<codeline lineno="51" refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8faa97b2c144243b2b9d2c593ec268b62f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8faa97b2c144243b2b9d2c593ec268b62f5" kindref="member">BOOL</ref>,</highlight></codeline>
<codeline lineno="52" refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8faa3eb957bd02f4780a599d5ec4464ca46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8faa3eb957bd02f4780a599d5ec4464ca46" kindref="member">DATETIME</ref>,</highlight></codeline>
<codeline lineno="53" refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa61a96ffcb251bb9bf0abf8fec19d0ea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa61a96ffcb251bb9bf0abf8fec19d0ea8" kindref="member">TEXT</ref>,</highlight></codeline>
<codeline lineno="54" refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa1ec9056b2106b66cd5b255ad67fcb671" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8fa1ec9056b2106b66cd5b255ad67fcb671" kindref="member">MILIAMP</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383" kindref="member">ExceptionType</ref><sp/>{</highlight></codeline>
<codeline lineno="58" refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383ab50339a10e1de285ac99d4c3990b8693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a1a30b781d6fac5ca0b850dd8b3726d8dab50339a10e1de285ac99d4c3990b8693" kindref="member">NONE</ref>,<sp/></highlight></codeline>
<codeline lineno="59" refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a4596302bc1e8ce6e62188e769aac94cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a4596302bc1e8ce6e62188e769aac94cf" kindref="member">NOT_ALLOWED</ref>,</highlight></codeline>
<codeline lineno="60" refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a4a775a051faafd7eed30f5a95548729a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a4a775a051faafd7eed30f5a95548729a" kindref="member">INVALID_PARAM</ref>,</highlight></codeline>
<codeline lineno="61" refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383ade918d7abaea4c856c3c64720f3cbb7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383ade918d7abaea4c856c3c64720f3cbb7c" kindref="member">INVALID_OPERATION</ref>,</highlight></codeline>
<codeline lineno="62" refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a62c989cb54431f5fa2a775b0ca55bb49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383a62c989cb54431f5fa2a775b0ca55bb49" kindref="member">PARAM_UNECESSARY</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="struct_frame" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_frame" kindref="compound">Frame</ref><sp/>{</highlight></codeline>
<codeline lineno="66" refid="struct_frame_1ae969aefac1bd27476536aae3de4eacee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_frame_1ae969aefac1bd27476536aae3de4eacee" kindref="member">header</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_frame_1a380c3287d8bc0718ed7a3b93e303dbe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_frame_1a380c3287d8bc0718ed7a3b93e303dbe5" kindref="member">direction</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>ground-&gt;sat,<sp/>1<sp/>=<sp/>sat-&gt;ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_frame_1a6ad0b81e9434fee37a64535a0c58facb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/><ref refid="struct_frame_1a6ad0b81e9434fee37a64535a0c58facb" kindref="member">operationType</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct_frame_1abd1ff8cb6b3d53706a97ea15727ddd4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_frame_1abd1ff8cb6b3d53706a97ea15727ddd4f" kindref="member">group</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Group<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="struct_frame_1a2fa1a9d8fa7eb710234eb68bf376e6de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_frame_1a2fa1a9d8fa7eb710234eb68bf376e6de" kindref="member">command</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Command<sp/>ID<sp/>within<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="struct_frame_1a118ecfcbf5afd93d394f667829adf26a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_frame_1a118ecfcbf5afd93d394f667829adf26a" kindref="member">value</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Payload<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="struct_frame_1a6481c04c9c112a41a50c24696454afa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_frame_1a6481c04c9c112a41a50c24696454afa8" kindref="member">unit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Payload<sp/>unit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="struct_frame_1a30e584ccb03562f0bbd5356562a462c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_frame_1a30e584ccb03562f0bbd5356562a462c1" kindref="member">footer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">std::string<sp/><ref refid="protocol_8h_1a46ff7e9bd427919630557811f44f5473" kindref="member">exceptionTypeToString</ref>(<ref refid="protocol_8h_1a0e0f0f1661d7aeb71ed9698bff6c6383" kindref="member">ExceptionType</ref><sp/>type);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">std::string<sp/><ref refid="protocol_8h_1a82a11ce999902359454fa904a13ae297" kindref="member">operationTypeToString</ref>(<ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/>type);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="protocol_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/><ref refid="protocol_8h_1a245c34d9f7072236b66e9352a9d3466e" kindref="member">stringToOperationType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">std::vector&lt;uint8_t&gt;<sp/><ref refid="protocol_8h_1a4d6495102457200a5632a3286331d238" kindref="member">hexStringToBytes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>hexString);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">std::string<sp/><ref refid="protocol_8h_1ab4cb9e6b491bd7711c69c9167a2b9286" kindref="member">valueUnitTypeToString</ref>(<ref refid="protocol_8h_1a2d96449e2b52d45b5726af92084e0d8f" kindref="member">ValueUnit</ref><sp/>unit);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="frame_model/protocol.h"/>
  </compounddef>
</doxygen>
