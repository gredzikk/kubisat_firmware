<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="utils_8cpp" kind="file" language="C++">
    <compoundname>utils.cpp</compoundname>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes local="yes">pico/multicore.h</includes>
    <includes local="yes">pico/sync.h</includes>
    <incdepgraph>
      <node id="7">
        <label>pin_config.h</label>
        <link refid="pin__config_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>utils.cpp</label>
        <link refid="utils_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hardware/uart.h</label>
      </node>
      <node id="9">
        <label>pico/multicore.h</label>
      </node>
      <node id="5">
        <label>pico/stdlib.h</label>
      </node>
      <node id="10">
        <label>pico/sync.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="utils_8cpp_1a905b7c29adff0a55966dc2bdd1578a6c" prot="public" static="no">
        <name>LOG_FILENAME</name>
        <initializer>&quot;log.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils.cpp" line="5" column="9" bodyfile="utils.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="utils_8cpp_1a1a79e1136e3879e08124c966946cf7b4" prot="public" static="yes" mutable="no">
        <type>mutex_t</type>
        <definition>mutex_t uart_mutex</definition>
        <argsstring></argsstring>
        <name>uart_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils.cpp" line="7" column="16" bodyfile="utils.cpp" bodystart="7" bodyend="-1"/>
        <referencedby refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" compoundref="utils_8cpp" startline="9" endline="26">uartPrint</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void uartPrint</definition>
        <argsstring>(const std::string &amp;msg, bool logToFile, uart_inst_t *uart)</argsstring>
        <name>uartPrint</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logToFile</declname>
        </param>
        <param>
          <type>uart_inst_t *</type>
          <declname>uart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils.cpp" line="9" column="6" bodyfile="utils.cpp" bodystart="9" bodyend="26"/>
        <references refid="event__manager_8h_1ab20b0c7772544cf5d318507f34231fbe" compoundref="event__manager_8h" startline="2">timestamp</references>
        <references refid="utils_8cpp_1a1a79e1136e3879e08124c966946cf7b4" compoundref="utils_8cpp" startline="7">uart_mutex</references>
        <referencedby refid="class_i_n_a3221_1a868af24425b042f330a0e7fae8210936" compoundref="_i_n_a3221_8cpp" startline="14" endline="40">INA3221::begin</referencedby>
        <referencedby refid="event__manager_8cpp_1a467714d66058f52e4ac7aeb6df46b433" compoundref="event__manager_8cpp" startline="77" endline="140">checkPowerEvents</referencedby>
        <referencedby refid="gps__collector_8cpp_1abe46d88c89b1f730f6c9a230acac2a6a" compoundref="gps__collector_8cpp" startline="27" endline="65">collectGPSData</referencedby>
        <referencedby refid="communication_8h_1a8f34bc31494430539db21206f084d39d" compoundref="frame_8cpp" startline="24" endline="71">decodeFrame</referencedby>
        <referencedby refid="group___g_p_s_commands_1gad12f2e18bdfecbd5b6e8d8a84bb9cd77" compoundref="gps__commands_8cpp" startline="72" endline="154">handleEnableGPSTransparentMode</referencedby>
        <referencedby refid="group___diagnostic_commands_1ga3a6c6092cd01fd9c13ab429f4a34326d" compoundref="diagnostic__commands_8cpp" startline="70" endline="94">handleEnterBootloaderMode</referencedby>
        <referencedby refid="group___power_commands_1ga6fbaf484e68c9561ad7fabef21def37b" compoundref="power__commands_8cpp" startline="131" endline="145">handleGetCurrentChargeSolar</referencedby>
        <referencedby refid="group___power_commands_1ga83596ea837df6cf7b15e673b95bf524f" compoundref="power__commands_8cpp" startline="159" endline="173">handleGetCurrentChargeTotal</referencedby>
        <referencedby refid="group___power_commands_1ga3f38c538065bf67dbec1142fdb866d16" compoundref="power__commands_8cpp" startline="103" endline="117">handleGetCurrentChargeUSB</referencedby>
        <referencedby refid="group___power_commands_1gabd6610f557fe9deaa9f80d9405738226" compoundref="power__commands_8cpp" startline="187" endline="201">handleGetCurrentDraw</referencedby>
        <referencedby refid="group___power_commands_1ga9f2b608f46080fcdae38a1a8454938b8" compoundref="power__commands_8cpp" startline="75" endline="89">handleGetVoltage5V</referencedby>
        <referencedby refid="group___power_commands_1gad301b8c13cafa148a6f3e80e9b0bcf1a" compoundref="power__commands_8cpp" startline="47" endline="61">handleGetVoltageBattery</referencedby>
        <referencedby refid="group___diagnostic_commands_1gade74b82cf2c20d93c5e0ce624cd7ca77" compoundref="diagnostic__commands_8cpp" startline="19" endline="42">handleListCommands</referencedby>
        <referencedby refid="communication_8h_1ac5e175a6a1482f700f9aee0b727b924f" compoundref="receive_8cpp" startline="59" endline="74">handleUartInput</referencedby>
        <referencedby refid="communication_8cpp_1a520df448c1dc359f42111ac240081975" compoundref="communication_8cpp" startline="10" endline="26">initializeRadio</referencedby>
        <referencedby refid="main_8cpp_1a21af2d50d7779336997d5f3456352431" compoundref="main_8cpp" startline="18" endline="54">initSystems</referencedby>
        <referencedby refid="class_event_manager_1ae73a56091dc8713bb86a11abb6742a14" compoundref="event__manager_8cpp" startline="28" endline="54">EventManager::logEvent</referencedby>
        <referencedby refid="logging_8cpp_1a01a8b38ee1cf3fd44cedf3f5a8f1dbde" compoundref="logging_8cpp" startline="16" endline="50">loggingRoutine</referencedby>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="58" endline="123">main</referencedby>
        <referencedby refid="communication_8h_1a54817002e33761dc61558b1138749dfb" compoundref="receive_8cpp" startline="3" endline="57">onReceive</referencedby>
        <referencedby refid="send_8cpp_1adcc720dc971ce8b237b26df434b65bb2" compoundref="send_8cpp" startline="3" endline="22">sendMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="utils_8cpp_1a662798a1967f4a4ea55257255d0fbbf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t crc16</definition>
        <argsstring>(const uint8_t *data, size_t length)</argsstring>
        <name>crc16</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils.cpp" line="28" column="10" bodyfile="utils.cpp" bodystart="28" bodyend="41"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pico/multicore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pico/sync.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="utils_8cpp_1a905b7c29adff0a55966dc2bdd1578a6c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_FILENAME<sp/>&quot;log.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="utils_8cpp_1a1a79e1136e3879e08124c966946cf7b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>mutex_t<sp/><ref refid="utils_8cpp_1a1a79e1136e3879e08124c966946cf7b4" kindref="member">uart_mutex</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_8cpp_1aacbcecbe6b5428e3571b06ab2104e706" kindref="member">uartPrint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logToFile,<sp/>uart_inst_t*<sp/>uart)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mutex_inited<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mutex_inited)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutex_init(&amp;<ref refid="utils_8cpp_1a1a79e1136e3879e08124c966946cf7b4" kindref="member">uart_mutex</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutex_inited<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="event__manager_8h_1ab20b0c7772544cf5d318507f34231fbe" kindref="member">timestamp</ref><sp/>=<sp/>to_ms_since_boot(get_absolute_time());</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>core_num<sp/>=<sp/>get_core_num();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>msgToSend<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="event__manager_8h_1ab20b0c7772544cf5d318507f34231fbe" kindref="member">timestamp</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ms]<sp/>-<sp/>Core<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(core_num)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>msg<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logToFile)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logToFile<sp/>=<sp/>!logToFile;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_enter_blocking(&amp;<ref refid="utils_8cpp_1a1a79e1136e3879e08124c966946cf7b4" kindref="member">uart_mutex</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_puts(uart,<sp/>msgToSend.c_str());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_exit(&amp;<ref refid="utils_8cpp_1a1a79e1136e3879e08124c966946cf7b4" kindref="member">uart_mutex</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="utils_8cpp_1a662798a1967f4a4ea55257255d0fbbf4" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="utils_8cpp_1a662798a1967f4a4ea55257255d0fbbf4" kindref="member">crc16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>^=<sp/>data[i];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crc<sp/>&amp;<sp/>0x0001)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>(crc<sp/>&gt;&gt;<sp/>1)<sp/>^<sp/>0xA001;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="utils.cpp"/>
  </compounddef>
</doxygen>
